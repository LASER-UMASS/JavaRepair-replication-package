java version "1.7.0_231"
OpenJDK Runtime Environment (rhel-2.6.19.1.el7_6-x86_64 u231-b01)
OpenJDK 64-Bit Server VM (build 24.231-b01, mixed mode)
Check out 8d109fe1 to /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/ OK
Init local repository...................................................... OK
Tag post-fix revision...................................................... OK
Run post-checkout hook..................................................... OK
Initialize fixed program version........................................... OK
Apply patch................................................................ OK
Initialize buggy program version........................................... OK
Diff 8d109fe1:3ba9ba79..................................................... OK
Apply patch................................................................ OK
Tag pre-fix revision....................................................... OK
Check out program version: Time-3b......................................... OK
Running ant (compile)...................................................... OK
Running ant (compile.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Running ant (run.dev.tests)................................................ OK
Failing tests: 5
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero
/home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1
PURIFY IS TRUE
=================================================
Project : time_3	start : 19/10/15 16:36

readFailedTest: path is /mnt/nfs/work1/brun/mmotwani/SimFix/d4j-info/failed_tests/time/3.txtTESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_1
Failing tests: 0
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_1
Failing tests: 0
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_1
Failing tests: 0
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_1
Failing tests: 0
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy/src/test/java/org/joda/time/TestMutableDateTime_Adds.java

# FAILING TESTS: 1
TIMEOUT : 3000000
===========
locations= [<org.joda.time.DateTimeZone,931>, <org.joda.time.chrono.BasicGJChronology,190>, <org.joda.time.base.BaseDateTime,223>, <org.joda.time.base.BaseDateTime,225>, <org.joda.time.chrono.ZonedChronology,315>, <org.joda.time.chrono.ZonedChronology,316>, <org.joda.time.chrono.ZonedChronology,317>, <org.joda.time.chrono.ZonedChronology,341>, <org.joda.time.chrono.ZonedChronology,342>, <org.joda.time.chrono.ZonedChronology,344>, <org.joda.time.chrono.ZonedChronology,347>, <org.joda.time.chrono.ZonedChronology,351>, <org.joda.time.chrono.ZonedChronology,352>, <org.joda.time.chrono.ZonedChronology,354>, <org.joda.time.chrono.ZonedChronology,357>, <org.joda.time.tz.CachedDateTimeZone,202>, <org.joda.time.format.FormatUtils,68>, <org.joda.time.format.FormatUtils,74>, <org.joda.time.format.FormatUtils,75>, <org.joda.time.format.FormatUtils,77>, <org.joda.time.format.FormatUtils,78>, <org.joda.time.MutableDateTime,351>, <org.joda.time.MutableDateTime,353>, <org.joda.time.MutableDateTime,785>, <org.joda.time.MutableDateTime,786>, <org.joda.time.chrono.BasicChronology,443>, <org.joda.time.field.PreciseDurationDateTimeField,127>, <org.joda.time.field.PreciseDurationDateTimeField,128>, <org.joda.time.DateTimeFieldType,496>, <org.joda.time.DateTimeFieldType,498>, <org.joda.time.DateTimeFieldType,516>, <org.joda.time.DateTimeFieldType,520>, <org.joda.time.DateTimeFieldType,522>, <org.joda.time.chrono.BasicGJChronology,188>, <org.joda.time.chrono.BasicMonthOfYearDateTimeField,73>, <org.joda.time.format.DateTimeFormatterBuilder,153>, <org.joda.time.format.DateTimeFormatterBuilder,154>, <org.joda.time.format.DateTimeFormatterBuilder,155>, <org.joda.time.format.DateTimeFormatterBuilder,217>, <org.joda.time.format.DateTimeFormatterBuilder,220>, <org.joda.time.format.DateTimeFormatterBuilder,257>, <org.joda.time.format.DateTimeFormatterBuilder,258>, <org.joda.time.format.DateTimeFormatterBuilder,305>, <org.joda.time.format.DateTimeFormatterBuilder,308>, <org.joda.time.format.DateTimeFormatterBuilder,311>, <org.joda.time.format.DateTimeFormatterBuilder,312>, <org.joda.time.format.DateTimeFormatterBuilder,319>, <org.joda.time.format.DateTimeFormatterBuilder,321>, <org.joda.time.format.DateTimeFormatterBuilder,322>, <org.joda.time.format.DateTimeFormatterBuilder,326>, <org.joda.time.format.DateTimeFormatterBuilder,328>, <org.joda.time.format.DateTimeFormatterBuilder,345>, <org.joda.time.format.DateTimeFormatterBuilder,346>, <org.joda.time.format.DateTimeFormatterBuilder,347>, <org.joda.time.format.DateTimeFormatterBuilder,357>, <org.joda.time.format.DateTimeFormatterBuilder,360>, <org.joda.time.format.DateTimeFormatterBuilder,383>, <org.joda.time.format.DateTimeFormatterBuilder,384>, <org.joda.time.format.DateTimeFormatterBuilder,385>, <org.joda.time.format.DateTimeFormatterBuilder,386>, <org.joda.time.format.DateTimeFormatterBuilder,397>, <org.joda.time.format.DateTimeFormatterBuilder,408>, <org.joda.time.format.DateTimeFormatterBuilder,411>, <org.joda.time.format.DateTimeFormatterBuilder,417>, <org.joda.time.format.DateTimeFormatterBuilder,434>, <org.joda.time.format.DateTimeFormatterBuilder,437>, <org.joda.time.format.DateTimeFormatterBuilder,440>, <org.joda.time.format.DateTimeFormatterBuilder,443>, <org.joda.time.format.DateTimeFormatterBuilder,444>, <org.joda.time.format.DateTimeFormatterBuilder,446>, <org.joda.time.format.DateTimeFormatterBuilder,464>, <org.joda.time.format.DateTimeFormatterBuilder,467>, <org.joda.time.format.DateTimeFormatterBuilder,470>, <org.joda.time.format.DateTimeFormatterBuilder,486>, <org.joda.time.format.DateTimeFormatterBuilder,489>, <org.joda.time.format.DateTimeFormatterBuilder,492>, <org.joda.time.format.DateTimeFormatterBuilder,495>, <org.joda.time.format.DateTimeFormatterBuilder,498>, <org.joda.time.format.DateTimeFormatterBuilder,570>, <org.joda.time.format.DateTimeFormatterBuilder,573>, <org.joda.time.format.DateTimeFormatterBuilder,576>, <org.joda.time.format.DateTimeFormatterBuilder,579>, <org.joda.time.format.DateTimeFormatterBuilder,597>, <org.joda.time.format.DateTimeFormatterBuilder,614>, <org.joda.time.format.DateTimeFormatterBuilder,631>, <org.joda.time.format.DateTimeFormatterBuilder,685>, <org.joda.time.format.DateTimeFormatterBuilder,705>, <org.joda.time.format.DateTimeFormatterBuilder,725>, <org.joda.time.format.DateTimeFormatterBuilder,765>, <org.joda.time.format.DateTimeFormatterBuilder,775>, <org.joda.time.format.DateTimeFormatterBuilder,785>, <org.joda.time.format.DateTimeFormatterBuilder,795>, <org.joda.time.format.DateTimeFormatterBuilder,807>, <org.joda.time.format.DateTimeFormatterBuilder,817>, <org.joda.time.format.DateTimeFormatterBuilder,829>, <org.joda.time.format.DateTimeFormatterBuilder,1091>, <org.joda.time.format.DateTimeFormatterBuilder,1150>, <org.joda.time.format.DateTimeFormatterBuilder,1155>, <org.joda.time.format.DateTimeFormatterBuilder,1167>, <org.joda.time.format.DateTimeFormatterBuilder,1171>, <org.joda.time.format.DateTimeFormatterBuilder,1177>, <org.joda.time.format.DateTimeFormatterBuilder,1319>, <org.joda.time.format.DateTimeFormatterBuilder,1320>, <org.joda.time.format.DateTimeFormatterBuilder,1321>, <org.joda.time.format.DateTimeFormatterBuilder,1322>, <org.joda.time.format.DateTimeFormatterBuilder,1323>, <org.joda.time.format.DateTimeFormatterBuilder,1326>, <org.joda.time.format.DateTimeFormatterBuilder,1463>, <org.joda.time.format.DateTimeFormatterBuilder,1464>, <org.joda.time.format.DateTimeFormatterBuilder,1465>, <org.joda.time.format.DateTimeFormatterBuilder,1468>, <org.joda.time.format.DateTimeFormatterBuilder,1475>, <org.joda.time.format.DateTimeFormatterBuilder,1476>, <org.joda.time.format.DateTimeFormatterBuilder,1479>, <org.joda.time.format.DateTimeFormatterBuilder,1480>, <org.joda.time.format.DateTimeFormatterBuilder,1207>, <org.joda.time.format.DateTimeFormatterBuilder,1208>, <org.joda.time.format.DateTimeFormatterBuilder,1209>, <org.joda.time.format.DateTimeFormatterBuilder,1212>, <org.joda.time.format.DateTimeFormatterBuilder,1218>, <org.joda.time.format.DateTimeFormatterBuilder,1219>, <org.joda.time.format.DateTimeFormatterBuilder,1236>, <org.joda.time.format.DateTimeFormatterBuilder,2615>, <org.joda.time.format.DateTimeFormatterBuilder,2617>, <org.joda.time.format.DateTimeFormatterBuilder,2618>, <org.joda.time.format.DateTimeFormatterBuilder,2620>, <org.joda.time.format.DateTimeFormatterBuilder,2622>, <org.joda.time.format.DateTimeFormatterBuilder,2623>, <org.joda.time.format.DateTimeFormatterBuilder,2624>, <org.joda.time.format.DateTimeFormatterBuilder,2626>, <org.joda.time.format.DateTimeFormatterBuilder,2627>, <org.joda.time.format.DateTimeFormatterBuilder,2628>, <org.joda.time.format.DateTimeFormatterBuilder,2629>, <org.joda.time.format.DateTimeFormatterBuilder,2630>, <org.joda.time.format.DateTimeFormatterBuilder,2631>, <org.joda.time.format.DateTimeFormatterBuilder,2632>, <org.joda.time.format.DateTimeFormatterBuilder,2634>, <org.joda.time.format.DateTimeFormatterBuilder,2637>, <org.joda.time.format.DateTimeFormatterBuilder,2641>, <org.joda.time.format.DateTimeFormatterBuilder,2642>, <org.joda.time.format.DateTimeFormatterBuilder,2643>, <org.joda.time.format.DateTimeFormatterBuilder,2644>, <org.joda.time.format.DateTimeFormatterBuilder,2645>, <org.joda.time.format.DateTimeFormatterBuilder,2646>, <org.joda.time.format.DateTimeFormatterBuilder,2647>, <org.joda.time.format.DateTimeFormatterBuilder,2649>, <org.joda.time.format.DateTimeFormatterBuilder,2651>, <org.joda.time.format.DateTimeFormatterBuilder,2654>, <org.joda.time.format.DateTimeFormatterBuilder,2660>, <org.joda.time.format.DateTimeFormatterBuilder,2661>, <org.joda.time.format.DateTimeFormatterBuilder,2665>, <org.joda.time.format.DateTimeFormatterBuilder,2667>, <org.joda.time.format.DateTimeFormatterBuilder,2670>, <org.joda.time.format.DateTimeFormatterBuilder,2671>, <org.joda.time.format.DateTimeFormatterBuilder,2672>, <org.joda.time.format.DateTimeFormatterBuilder,2674>, <org.joda.time.format.DateTimeFormatterBuilder,2730>, <org.joda.time.format.DateTimeFormatterBuilder,2747>, <org.joda.time.format.DateTimeFormatterBuilder,2751>, <org.joda.time.format.DateTimeFormatterBuilder,2759>, <org.joda.time.format.DateTimeFormatterBuilder,2760>, <org.joda.time.format.DateTimeFormatterBuilder,2761>, <org.joda.time.format.DateTimeFormatterBuilder,2762>, <org.joda.time.format.DateTimeFormatterBuilder,2763>, <org.joda.time.format.DateTimeFormatterBuilder,2765>, <org.joda.time.format.DateTimeFormatterBuilder,2768>, <org.joda.time.format.DateTimeFormatterBuilder,2769>, <org.joda.time.format.DateTimeFormatterBuilder,2770>, <org.joda.time.format.DateTimeFormatterBuilder,2772>, <org.joda.time.format.DateTimeFormatterBuilder,2775>, <org.joda.time.format.DateTimeFormatterBuilder,2778>, <org.joda.time.format.DateTimeFormatterBuilder,2779>, <org.joda.time.format.DateTimeFormatterBuilder,2780>, <org.joda.time.format.DateTimeFormatterBuilder,2783>, <org.joda.time.format.DateTimeFormatter,137>, <org.joda.time.format.DateTimeFormatter,138>, <org.joda.time.format.DateTimeFormatter,139>, <org.joda.time.format.DateTimeFormatter,140>, <org.joda.time.format.DateTimeFormatter,141>, <org.joda.time.format.DateTimeFormatter,142>, <org.joda.time.format.DateTimeFormatter,143>, <org.joda.time.format.DateTimeFormatter,144>, <org.joda.time.format.DateTimeFormatter,145>, <org.joda.time.format.DateTimeFormatter,146>, <org.joda.time.format.DateTimeFormatter,164>, <org.joda.time.format.DateTimeFormatter,182>, <org.joda.time.format.DateTimeFormatter,310>, <org.joda.time.format.DateTimeFormatter,330>, <org.joda.time.format.DateTimeFormatter,333>, <org.joda.time.format.FormatUtils,31>, <org.joda.time.format.FormatUtils,50>, <org.joda.time.format.FormatUtils,62>, <org.joda.time.format.FormatUtils,63>, <org.joda.time.format.FormatUtils,64>, <org.joda.time.format.FormatUtils,66>, <org.joda.time.format.FormatUtils,67>, <org.joda.time.format.FormatUtils,80>, <org.joda.time.format.FormatUtils,82>, <org.joda.time.format.FormatUtils,83>, <org.joda.time.format.FormatUtils,87>]
======================org.joda.time.DateTimeZone,931
========
if(instantAdjusted-prev<=instant){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-prev<=diff){
return prev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-millis<=diff){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-prev<=prev){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_1
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
Failing tests: 0
TESTING : time_3
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.joda.time.tz.TestCompiler::test_Amman_2006
  - org.joda.time.tz.TestCompiler::test_Amman_2005
  - org.joda.time.tz.TestCompiler::test_Amman_2004
  - org.joda.time.tz.TestCompiler::test_Amman_2003
  - org.joda.time.format.TestTextFields::testMonthNames_monthStart
  - org.joda.time.format.TestTextFields::testHalfdayNames
  - org.joda.time.format.TestTextFields::testWeekdayNames
  - org.joda.time.format.TestTextFields::testMonthNames_monthMiddle
  - org.joda.time.format.TestTextFields::testMonthNames_monthEnd
  - org.joda.time.format.TestISODateTimeFormatParsing::test_ordinalDate
  - org.joda.time.format.TestISODateTimeFormatParsing::test_basicWeekDate
  - org.joda.time.format.TestISODateTimeFormatParsing::test_dateOptionalTimeParser
  - org.joda.time.format.TestISODateTimeFormatParsing::test_dateTimeParser
  - org.joda.time.format.TestISODateTimeFormatParsing::test_dateElementParser
  - org.joda.time.format.TestISODateTimeFormatParsing::test_dateParser
  - org.joda.time.format.TestISODateTimeFormatParsing::test_basicOrdinalDate
  - org.joda.time.format.TestISODateTimeFormatParsing::test_date
  - org.joda.time.format.TestISODateTimeFormatParsing::test_basicDate
  - org.joda.time.format.TestISODateTimeFormatParsing::test_weekDate
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseShortName
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseShortNameWithLookup
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseZoneParis
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseLongNameWithLookup
  - org.joda.time.format.TestDateTimeFormatterBuilder::test_printParseLongName
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_OfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_simple
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_zone3
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_zone2
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_zone
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_chrono
  - org.joda.time.format.TestDateTimeFormatter::testParseMutableDateTime_zone3
  - org.joda.time.format.TestDateTimeFormatter::testParseMutableDateTime_zone2
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29
  - org.joda.time.format.TestDateTimeFormatter::testParseDateTime_zone3
  - org.joda.time.format.TestDateTimeFormatter::testParseDateTime_zone2
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_withDefaultYear_feb29
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthOnly
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_simple_precedence
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_offsetParsed
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseMutableDateTime_simple
  - org.joda.time.format.TestDateTimeFormatter::testParseDateTime_offsetParsed
  - org.joda.time.format.TestDateTimeFormatter::testParseDateTime_simple
  - org.joda.time.format.TestDateTimeFormatter::testParseMutableDateTime_zone
  - org.joda.time.format.TestDateTimeFormatter::testParseMutableDateTime_chrono
  - org.joda.time.format.TestDateTimeFormatter::testParseDateTime_simple_precedence
  - org.joda.time.format.TestDateTimeFormatter::testParseMutableDateTime_offsetParsed
  - org.joda.time.format.TestDateTimeFormatter::testParseDateTime_chrono
  - org.joda.time.format.TestDateTimeFormatter::testParseDateTime_zone
  - org.joda.time.format.TestDateTimeFormatter::testParseMutableDateTime_simple_precedence
  - org.joda.time.format.TestDateTimeFormatStyle::testForStyle_longDateTime
  - org.joda.time.format.TestDateTimeFormatStyle::testForStyle_shortFullDateTime
  - org.joda.time.format.TestDateTimeFormatStyle::testForStyle_mediumFullDateTime
  - org.joda.time.format.TestDateTimeFormatStyle::testForStyle_longTime
  - org.joda.time.format.TestDateTimeFormatStyle::testForStyle_longDate
  - org.joda.time.format.TestDateTimeFormatStyle::testForStyle_mediumShortDateTime
  - org.joda.time.format.TestDateTimeFormatStyle::testForStyle_shortMediumDateTime
  - org.joda.time.format.TestDateTimeFormatStyle::testForStyle_shortLongDateTime
  - org.joda.time.format.TestDateTimeFormatStyle::testForStyle_fullTime
  - org.joda.time.format.TestDateTimeFormatStyle::testForStyle_fullDate
  - org.joda.time.format.TestDateTimeFormatStyle::testForStyle_mediumLongDateTime
  - org.joda.time.format.TestDateTimeFormatStyle::testForStyle_mediumTime
  - org.joda.time.format.TestDateTimeFormatStyle::testForStyle_mediumDate
  - org.joda.time.format.TestDateTimeFormatStyle::testForStyle_shortDateTime
  - org.joda.time.format.TestDateTimeFormatStyle::testForStyle_shortTime
  - org.joda.time.format.TestDateTimeFormatStyle::testForStyle_shortDate
  - org.joda.time.format.TestDateTimeFormatStyle::testForStyle_fullDateTime
  - org.joda.time.format.TestDateTimeFormatStyle::testForStyle_mediumDateTime
  - org.joda.time.format.TestDateTimeFormat::testFormat_shortBasicParse
  - org.joda.time.convert.TestStringConverter::testGetDateTime6
  - org.joda.time.convert.TestStringConverter::testGetDateTime4
  - org.joda.time.convert.TestStringConverter::testGetDateTime2
  - org.joda.time.convert.TestStringConverter::testSetIntoInterval_Object_Chronology5
  - org.joda.time.convert.TestStringConverter::testSetIntoInterval_Object_Chronology4
  - org.joda.time.convert.TestStringConverter::testSetIntoInterval_Object_Chronology3
  - org.joda.time.convert.TestStringConverter::testSetIntoInterval_Object_Chronology2
  - org.joda.time.convert.TestStringConverter::testSetIntoInterval_Object_Chronology1
  - org.joda.time.convert.TestStringConverter::testGetInstantMillis_Object_Zone
  - org.joda.time.convert.TestStringConverter::testGetInstantMillis_Object
  - org.joda.time.convert.TestStringConverter::testGetDateTime
  - org.joda.time.convert.TestStringConverter::testGetInstantMillis_Object_Chronology
  - org.joda.time.chrono.TestIslamicChronology::testSampleDateWithZone
  - org.joda.time.chrono.TestGregorianChronology::testMaximumValue
  - org.joda.time.chrono.TestGJChronology::testSubtractDays
  - org.joda.time.chrono.TestEthiopicChronology::testSampleDateWithZone
  - org.joda.time.chrono.TestCopticChronology::testSampleDateWithZone
  - org.joda.time.TestYears::testFactory_yearsBetween_RInstant
  - org.joda.time.TestYears::testFactory_yearsIn_RInterval
  - org.joda.time.TestYearMonth_Constructors::testConstructor_nullDateTimeZone
  - org.joda.time.TestYearMonth_Constructors::testConstructor_DateTimeZone
  - org.joda.time.TestYearMonth_Basics::testToDateTime_RI
  - org.joda.time.TestYearMonth_Basics::testToInterval
  - org.joda.time.TestYearMonth_Basics::testToDateTime_nullRI
  - org.joda.time.TestYearMonth_Basics::testToInterval_nullZone
  - org.joda.time.TestYearMonthDay_Constructors::testConstructor_ObjectString3
  - org.joda.time.TestYearMonthDay_Constructors::testConstructor_ObjectString1
  - org.joda.time.TestYearMonthDay_Constructors::testConstructor_nullDateTimeZone
  - org.joda.time.TestYearMonthDay_Constructors::testConstructor_DateTimeZone
  - org.joda.time.TestYearMonthDay_Basics::testToDateMidnight_nullZone
  - org.joda.time.TestYearMonthDay_Basics::testToDateTime_nullTOD
  - org.joda.time.TestYearMonthDay_Basics::testToDateTime_RI
  - org.joda.time.TestYearMonthDay_Basics::testToDateTimeAtCurrentTime_nullZone
  - org.joda.time.TestYearMonthDay_Basics::testToDateTimeAtMidnight
  - org.joda.time.TestYearMonthDay_Basics::testToInterval
  - org.joda.time.TestYearMonthDay_Basics::testToDateTime_nullRI
  - org.joda.time.TestYearMonthDay_Basics::testToDateTimeAtMidnight_nullZone
  - org.joda.time.TestYearMonthDay_Basics::testToDateMidnight
  - org.joda.time.TestYearMonthDay_Basics::testToDateTimeAtCurrentTime
  - org.joda.time.TestYearMonthDay_Basics::testToDateTime_TOD
  - org.joda.time.TestYearMonthDay_Basics::testToDateTime_TOD_nullZone
  - org.joda.time.TestYearMonthDay_Basics::testToInterval_nullZone
  - org.joda.time.TestYearMonthDay_Basics::testToDateTimeAtCurrentTime_Zone
  - org.joda.time.TestWeeks::testFactory_weeksIn_RInterval
  - org.joda.time.TestWeeks::testFactory_weeksBetween_RInstant
  - org.joda.time.TestTimeOfDay_Constructors::testConstructor_nullDateTimeZone
  - org.joda.time.TestTimeOfDay_Constructors::testConstructor_DateTimeZone
  - org.joda.time.TestTimeOfDay_Basics::testToDateTimeToday
  - org.joda.time.TestTimeOfDay_Basics::testToDateTimeToday_Zone
  - org.joda.time.TestTimeOfDay_Basics::testToDateTimeToday_nullZone
  - org.joda.time.TestSeconds::testFactory_secondsIn_RInterval
  - org.joda.time.TestSeconds::testFactory_secondsBetween_RInstant
  - org.joda.time.TestPeriod_Constructors::testToPeriod_PeriodType3
  - org.joda.time.TestPeriod_Constructors::testConstructor_trickyDifferences_RI_RI_toFeb_endOfMonth3
  - org.joda.time.TestPeriod_Constructors::testConstructor_trickyDifferences_RI_RI_toFeb_endOfMonth2
  - org.joda.time.TestPeriod_Constructors::testConstructor_trickyDifferences_RI_RI_toFeb_endOfMonth1
  - org.joda.time.TestPeriod_Constructors::testConstructor_RD_RI_PeriodType2
  - org.joda.time.TestPeriod_Constructors::testConstructor_RD_RI_PeriodType1
  - org.joda.time.TestPeriod_Constructors::testConstructor_trickyDifferences_RI_RI_toMar_endOfMonth2
  - org.joda.time.TestPeriod_Constructors::testConstructor_trickyDifferences_RI_RI_toMar_endOfMonth1
  - org.joda.time.TestPeriod_Constructors::testConstructor_trickyDifferences_RI_RI_toFeb_leapYear
  - org.joda.time.TestPeriod_Constructors::testConstructor_trickyDifferences_RI_RI_toFeb_exactMonths
  - org.joda.time.TestPeriod_Constructors::testConstructor_long_long_PeriodType3
  - org.joda.time.TestPeriod_Constructors::testConstructor_long_long_PeriodType2
  - org.joda.time.TestPeriod_Constructors::testConstructor_long_long_PeriodType1
  - org.joda.time.TestPeriod_Constructors::testConstructor_RI_RD_PeriodType2
  - org.joda.time.TestPeriod_Constructors::testConstructor_RI_RD_PeriodType1
  - org.joda.time.TestPeriod_Constructors::testConstructor_RI_RI4
  - org.joda.time.TestPeriod_Constructors::testConstructor_RI_RI3
  - org.joda.time.TestPeriod_Constructors::testConstructor_RI_RI2
  - org.joda.time.TestPeriod_Constructors::testConstructor_RI_RI1
  - org.joda.time.TestPeriod_Constructors::testConstructor_RI_RD2
  - org.joda.time.TestPeriod_Constructors::testConstructor_RI_RD1
  - org.joda.time.TestPeriod_Constructors::testConstructor_RD_RI2
  - org.joda.time.TestPeriod_Constructors::testConstructor_RD_RI1
  - org.joda.time.TestPeriod_Constructors::testConstructor_long_long_Chronology2
  - org.joda.time.TestPeriod_Constructors::testConstructor_long_long_Chronology1
  - org.joda.time.TestPeriod_Constructors::testConstructor_trickyDifferences_RI_RI_toFeb_standardYear
  - org.joda.time.TestPeriod_Constructors::testConstructor_RI_RI_PeriodType4
  - org.joda.time.TestPeriod_Constructors::testConstructor_RI_RI_PeriodType3
  - org.joda.time.TestPeriod_Constructors::testConstructor_RI_RI_PeriodType2
  - org.joda.time.TestPeriod_Constructors::testConstructor_RI_RI_PeriodType1
  - org.joda.time.TestPeriod_Constructors::testConstructor_long_long_PeriodType_Chronology2
  - org.joda.time.TestPeriod_Constructors::testConstructor_long_long_PeriodType_Chronology1
  - org.joda.time.TestPeriod_Constructors::testConstructor_long_long2
  - org.joda.time.TestPeriod_Constructors::testConstructor_long_long1
  - org.joda.time.TestPartial_Match::testIsMatch_Instant
  - org.joda.time.TestMutablePeriod_Updates::testSetPeriod_long_long3
  - org.joda.time.TestMutablePeriod_Updates::testSetPeriod_long_long2
  - org.joda.time.TestMutablePeriod_Updates::testSetPeriod_long_long1
  - org.joda.time.TestMutablePeriod_Updates::testSetPeriod_RInterval1
  - org.joda.time.TestMutablePeriod_Updates::testSetPeriod_long_long_NoYears
  - org.joda.time.TestMutablePeriod_Updates::testSetPeriod_long_long_NoWeeks
  - org.joda.time.TestMutablePeriod_Updates::testSetPeriod_long_long_NoHours
  - org.joda.time.TestMutablePeriod_Updates::testSetPeriod_RI_RI3
  - org.joda.time.TestMutablePeriod_Updates::testSetPeriod_RI_RI2
  - org.joda.time.TestMutablePeriod_Updates::testSetPeriod_RI_RI1
  - org.joda.time.TestMutablePeriod_Updates::testSetPeriod_long_long_NoMonths
  - org.joda.time.TestMutablePeriod_Updates::testSetPeriod_long_long_NoMillis
  - org.joda.time.TestMutablePeriod_Updates::testSetPeriod_long_long_NoDays
  - org.joda.time.TestMutablePeriod_Updates::testSetPeriod_long_long_NoSeconds
  - org.joda.time.TestMutablePeriod_Updates::testSetPeriod_long_long_NoMinutes
  - org.joda.time.TestMutablePeriod_Updates::testAdd_RInterval4
  - org.joda.time.TestMutablePeriod_Updates::testAdd_RInterval2
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_long_long_PeriodType3
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_long_long_PeriodType2
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_long_long_PeriodType1
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_RI_RD_PeriodType2
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_RI_RD_PeriodType1
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_RI_RI4
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_RI_RI3
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_RI_RI2
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_RI_RI1
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_RI_RD2
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_RI_RD1
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_long_long_Chronology2
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_long_long_Chronology1
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_RI_RI_PeriodType4
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_RI_RI_PeriodType3
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_RI_RI_PeriodType2
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_RI_RI_PeriodType1
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_long_long_PeriodType_Chronology2
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_long_long_PeriodType_Chronology1
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_long_long2
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_long_long1
  - org.joda.time.TestMutableInterval_Constructors::testParse_noFormatter
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_Object_Chronology2
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_Object_Chronology1
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_RP_RI7
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_RI_RP7
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_RI_RI9
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_RI_RI8
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_RI_RI7
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_RI_RI6
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_RI_RI5
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_RI_RI4
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_RI_RI2
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_RI_RI1
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_long_long_Chronology2
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_long_long_Chronology1
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_Object5
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_Object3
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_Object2
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_Object1
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_long_long3
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_long_long2
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_long_long1
  - org.joda.time.TestMutableInterval_Basics::testToPeriod_PeriodType2
  - org.joda.time.TestMutableInterval_Basics::testToPeriod_PeriodType1
  - org.joda.time.TestMutableInterval_Basics::testToPeriod
  - org.joda.time.TestMutableDateTime_Sets::testSetYear_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetMilliOfDay_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetMilliOfDay_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetWeekOfWeekyear_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetWeekOfWeekyear_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetMilliOfSecond_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetMilliOfSecond_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetTime_Object3
  - org.joda.time.TestMutableDateTime_Sets::testSetDate_int_int_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetHourOfDay_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetHourOfDay_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetDayOfYear_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetDayOfYear_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetMinuteOfDay_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetMinuteOfDay_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetSecondOfMinute_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetSecondOfMinute_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetDayOfMonth_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetDayOfMonth_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetSecondOfDay_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetSecondOfDay_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetTime_RI2
  - org.joda.time.TestMutableDateTime_Sets::testSetTime_RI1
  - org.joda.time.TestMutableDateTime_Sets::testSetTime_long1
  - org.joda.time.TestMutableDateTime_Sets::testSetMonthOfYear_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetMonthOfYear_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetDate_RI_different2
  - org.joda.time.TestMutableDateTime_Sets::testSetDate_RI_different1
  - org.joda.time.TestMutableDateTime_Sets::testSetDate_long1
  - org.joda.time.TestMutableDateTime_Sets::testSetDate_RI2
  - org.joda.time.TestMutableDateTime_Sets::testSetDate_RI1
  - org.joda.time.TestMutableDateTime_Sets::testSetWeekyear_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetDayOfWeek_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetDayOfWeek_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetMinuteOfHour_int2
  - org.joda.time.TestMutableDateTime_Sets::testSetMinuteOfHour_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetDateTime_int_int_int_int_int_int_int1
  - org.joda.time.TestMutableDateTime_Sets::testSetTime_int_int_int_int1
  - org.joda.time.TestMutableDateTime_Properties::testPropertyToIntervalHourOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetYearOfCentury
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetDayOfMonth
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetHourOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetTextDayOfMonth
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetWeekOfWeekyear
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetDayOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetDayOfWeek
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddWrapFieldYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetMonthOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyToIntervalMonthOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetTextDayOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetTextDayOfWeek
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetWeekyear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddWeekOfWeekyear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyToIntervalYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetEra
  - org.joda.time.TestMutableDateTime_Properties::testPropertyToIntervalYearOfEra
  - org.joda.time.TestMutableDateTime_Properties::testPropertyRoundCeilingHourOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetTextYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyToIntervalYearOfCentury
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetYearOfEra
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddWrapFieldDayOfMonth
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetMillisOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetMinuteOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddMonthOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddWrapFieldWeekOfWeekyear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyToIntervalSecondOfMinute
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetDayOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetDayOfWeek
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddDayOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddDayOfWeek
  - org.joda.time.TestMutableDateTime_Properties::testPropertyRemainderHourOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertyToIntervalMillisOfSecond
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetTextMonthOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetCenturyOfEra
  - org.joda.time.TestMutableDateTime_Properties::testPropertyRoundFloorHourOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertyRoundHalfEvenHourOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyRoundHalfFloorHourOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetMonthOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyToIntervalDayOfMonth
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetTextWeekOfWeekyear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetMinuteOfHour
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetSecondOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddWrapFieldMonthOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertySetDayOfMonth
  - org.joda.time.TestMutableDateTime_Properties::testPropertyRoundHalfCeilingHourOfDay
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetWeekOfWeekyear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetSecondOfMinute
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddLongDayOfWeek
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyToIntervalMinuteOfHour
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddDayOfMonth
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddWrapFieldDayOfYear
  - org.joda.time.TestMutableDateTime_Properties::testPropertyAddWrapFieldDayOfWeek
  - org.joda.time.TestMutableDateTime_Properties::testPropertyGetMillisOfSecond
  - org.joda.time.TestMutableDateTime_Constructors::testParse_noFormatter
  - org.joda.time.TestMutableDateTime_Constructors::testParse_formatter
  - org.joda.time.TestMutableDateTime_Constructors::testConstructor_int_int_int_int_int_int_int
  - org.joda.time.TestMutableDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_nullChronology
  - org.joda.time.TestMutableDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_Chronology
  - org.joda.time.TestMutableDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_DateTimeZone
  - org.joda.time.TestMutableDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_nullDateTimeZone
  - org.joda.time.TestMutableDateTime_Basics::testRounding8
  - org.joda.time.TestMutableDateTime_Basics::testRounding7
  - org.joda.time.TestMutableDateTime_Basics::testRounding6
  - org.joda.time.TestMutableDateTime_Basics::testRounding5
  - org.joda.time.TestMutableDateTime_Basics::testRounding4
  - org.joda.time.TestMutableDateTime_Basics::testRounding3
  - org.joda.time.TestMutableDateTime_Basics::testRounding2
  - org.joda.time.TestMutableDateTime_Basics::testRounding1
  - org.joda.time.TestMutableDateTime_Adds::testAddSeconds_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddMillis_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddMinutes_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddWeekyears_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddHours_int1
  - org.joda.time.TestMutableDateTime_Adds::testAdd_RP1
  - org.joda.time.TestMonths::testFactory_monthsIn_RInterval
  - org.joda.time.TestMonths::testFactory_monthsBetween_RInstant
  - org.joda.time.TestMonthDay_Constructors::testConstructor_nullDateTimeZone
  - org.joda.time.TestMonthDay_Constructors::testConstructor_DateTimeZone
  - org.joda.time.TestMonthDay_Basics::testToDateTime_RI
  - org.joda.time.TestMonthDay_Basics::testToDateTime_nullRI
  - org.joda.time.TestMinutes::testFactory_minutesIn_RInterval
  - org.joda.time.TestMinutes::testFactory_minutesBetween_RInstant
  - org.joda.time.TestLocalTime_Constructors::testConstructor_nullDateTimeZone
  - org.joda.time.TestLocalTime_Constructors::testConstructor_DateTimeZone
  - org.joda.time.TestLocalTime_Constructors::testConstructor_long_DateTimeZone_2
  - org.joda.time.TestLocalTime_Basics::testToDateTimeToday_Zone
  - org.joda.time.TestLocalTime_Basics::testToDateTimeTodayDefaultZone
  - org.joda.time.TestLocalTime_Basics::testToDateTimeToday_nullZone
  - org.joda.time.TestLocalDate_Constructors::testConstructor_long3_DateTimeZone
  - org.joda.time.TestLocalDate_Constructors::testConstructor_long4_DateTimeZone
  - org.joda.time.TestLocalDate_Constructors::testConstructor_nullDateTimeZone
  - org.joda.time.TestLocalDate_Constructors::testConstructor_DateTimeZone
  - org.joda.time.TestLocalDate_Basics::testToDateTimeAtStartOfDay
  - org.joda.time.TestLocalDate_Basics::testToDateMidnight_nullZone
  - org.joda.time.TestLocalDate_Basics::testToDateTimeAtStartOfDay_nullZone
  - org.joda.time.TestLocalDate_Basics::testToDateTimeAtStartOfDay_avoidDST
  - org.joda.time.TestLocalDate_Basics::testToDateTime_RI
  - org.joda.time.TestLocalDate_Basics::testToDateTimeAtCurrentTime_nullZone
  - org.joda.time.TestLocalDate_Basics::testToDateTimeAtMidnight
  - org.joda.time.TestLocalDate_Basics::testToDateTime_LocalTime
  - org.joda.time.TestLocalDate_Basics::testToInterval
  - org.joda.time.TestLocalDate_Basics::testToDateTime_nullRI
  - org.joda.time.TestLocalDate_Basics::testToDateTime_LocalTime_nullZone
  - org.joda.time.TestLocalDate_Basics::testToDateTime_nullLocalTime
  - org.joda.time.TestLocalDate_Basics::testToDateTimeAtMidnight_nullZone
  - org.joda.time.TestLocalDate_Basics::testToDateMidnight
  - org.joda.time.TestLocalDate_Basics::testToDateTimeAtCurrentTime
  - org.joda.time.TestLocalDate_Basics::testToInterval_Zone_noMidnight
  - org.joda.time.TestLocalDate_Basics::testToDateTimeAtStartOfDay_Zone_avoidDST
  - org.joda.time.TestLocalDate_Basics::testToInterval_nullZone
  - org.joda.time.TestLocalDate_Basics::testToDateTimeAtCurrentTime_Zone
  - org.joda.time.TestLocalDateTime_Constructors::testConstructor_DateTimeZone
  - org.joda.time.TestLocalDateTime_Basics::testToDateTime
  - org.joda.time.TestLocalDateTime_Basics::testToDateTime_nullRI
  - org.joda.time.TestLocalDateTime_Basics::testToDateTime_nullZone
  - org.joda.time.TestInterval_Constructors::testParse_noFormatter
  - org.joda.time.TestInterval_Constructors::testConstructor_RI_RI_zones
  - org.joda.time.TestInterval_Constructors::testConstructor_long_long_nullZone
  - org.joda.time.TestInterval_Constructors::testConstructor_RI_RI_chronoEnd
  - org.joda.time.TestInterval_Constructors::testConstructor_Object_Chronology2
  - org.joda.time.TestInterval_Constructors::testConstructor_Object_Chronology1
  - org.joda.time.TestInterval_Constructors::testConstructor_long_long_Chronology
  - org.joda.time.TestInterval_Constructors::testConstructor_RP_RI7
  - org.joda.time.TestInterval_Constructors::testConstructor_RI_RP7
  - org.joda.time.TestInterval_Constructors::testConstructor_RI_RI7
  - org.joda.time.TestInterval_Constructors::testConstructor_RI_RI6
  - org.joda.time.TestInterval_Constructors::testConstructor_RI_RI5
  - org.joda.time.TestInterval_Constructors::testConstructor_RI_RI4
  - org.joda.time.TestInterval_Constructors::testConstructor_RI_RI2
  - org.joda.time.TestInterval_Constructors::testConstructor_RI_RI1
  - org.joda.time.TestInterval_Constructors::testConstructor_RI_RI_chronoStart
  - org.joda.time.TestInterval_Constructors::testConstructor_long_long_nullChronology
  - org.joda.time.TestInterval_Constructors::testConstructor_Object5
  - org.joda.time.TestInterval_Constructors::testConstructor_Object3
  - org.joda.time.TestInterval_Constructors::testConstructor_Object2
  - org.joda.time.TestInterval_Constructors::testConstructor_Object1
  - org.joda.time.TestInterval_Constructors::testConstructor_long_long3
  - org.joda.time.TestInterval_Constructors::testConstructor_long_long2
  - org.joda.time.TestInterval_Constructors::testConstructor_long_long1
  - org.joda.time.TestInterval_Constructors::testConstructor_long_long_Zone
  - org.joda.time.TestInterval_Basics::testToPeriod_PeriodType2
  - org.joda.time.TestInterval_Basics::testToPeriod_PeriodType1
  - org.joda.time.TestInterval_Basics::testToString_reparse
  - org.joda.time.TestInterval_Basics::testToPeriod
  - org.joda.time.TestInstant_Constructors::testParse_noFormatter
  - org.joda.time.TestInstant_Constructors::testParse_formatter
  - org.joda.time.TestHours::testFactory_hoursIn_RInterval
  - org.joda.time.TestHours::testFactory_hoursBetween_RInstant
  - org.joda.time.TestDuration_Constructors::testConstructor_RI_RI3
  - org.joda.time.TestDuration_Constructors::testConstructor_RI_RI2
  - org.joda.time.TestDuration_Constructors::testConstructor_RI_RI1
  - org.joda.time.TestDuration_Constructors::testConstructor_Object5
  - org.joda.time.TestDuration_Constructors::testConstructor_Object4
  - org.joda.time.TestDuration_Constructors::testConstructor_long_long1
  - org.joda.time.TestDuration_Basics::testToIntervalTo
  - org.joda.time.TestDuration_Basics::testToPeriodFrom_PeriodType
  - org.joda.time.TestDuration_Basics::testToIntervalFrom
  - org.joda.time.TestDuration_Basics::testToPeriodTo_PeriodType
  - org.joda.time.TestDuration_Basics::testToPeriodTo
  - org.joda.time.TestDuration_Basics::testToPeriodFrom
  - org.joda.time.TestDays::testFactory_daysBetween_RInstant
  - org.joda.time.TestDays::testFactory_daysIn_RInterval
  - org.joda.time.TestDateTime_Properties::testPropertyToIntervalHourOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyGetYearOfCentury
  - org.joda.time.TestDateTime_Properties::testPropertyGetDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertyGetHourOfDay
  - org.joda.time.TestDateTime_Properties::testPropertySetTextDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertySetWeekOfWeekyear
  - org.joda.time.TestDateTime_Properties::testPropertySetDayOfYear
  - org.joda.time.TestDateTime_Properties::testPropertySetDayOfWeek
  - org.joda.time.TestDateTime_Properties::testPropertyAddWrapFieldYear
  - org.joda.time.TestDateTime_Properties::testPropertySetMonthOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyToIntervalMonthOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyEqualsHashCodeYear
  - org.joda.time.TestDateTime_Properties::testPropertySetYear
  - org.joda.time.TestDateTime_Properties::testPropertyGetMaxMinValuesWeekOfWeekyear
  - org.joda.time.TestDateTime_Properties::testPropertyGetMaxMinValuesDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertySetTextDayOfYear
  - org.joda.time.TestDateTime_Properties::testPropertySetTextDayOfWeek
  - org.joda.time.TestDateTime_Properties::testPropertyGetWeekyear
  - org.joda.time.TestDateTime_Properties::testPropertyAddWeekOfWeekyear
  - org.joda.time.TestDateTime_Properties::testPropertyToIntervalYear
  - org.joda.time.TestDateTime_Properties::testPropertyLeapYear
  - org.joda.time.TestDateTime_Properties::testPropertyGetEra
  - org.joda.time.TestDateTime_Properties::testPropertyToIntervalYearOfEra
  - org.joda.time.TestDateTime_Properties::testPropertyRoundCeilingHourOfDay
  - org.joda.time.TestDateTime_Properties::testPropertySetTextYear
  - org.joda.time.TestDateTime_Properties::testPropertyToIntervalYearOfCentury
  - org.joda.time.TestDateTime_Properties::testPropertyGetYearOfEra
  - org.joda.time.TestDateTime_Properties::testPropertyAddWrapFieldDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertyGetMillisOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyGetMinuteOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyAddMonthOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyAddWrapFieldWeekOfWeekyear
  - org.joda.time.TestDateTime_Properties::testPropertyToIntervalSecondOfMinute
  - org.joda.time.TestDateTime_Properties::testPropertyLeapMonthOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyGetDayOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyGetDayOfWeek
  - org.joda.time.TestDateTime_Properties::testPropertyWithMinimumValueDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertyAddDayOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyAddDayOfWeek
  - org.joda.time.TestDateTime_Properties::testPropertyRemainderHourOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyEqualsHashCodeStrict
  - org.joda.time.TestDateTime_Properties::testPropertyToIntervalMillisOfSecond
  - org.joda.time.TestDateTime_Properties::testPropertySetTextMonthOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyGetCenturyOfEra
  - org.joda.time.TestDateTime_Properties::testPropertyRoundFloorHourOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyRoundHalfEvenHourOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyGetYear
  - org.joda.time.TestDateTime_Properties::testPropertyRoundHalfFloorHourOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyWithMinimumValueMillisOfDayDSTGap
  - org.joda.time.TestDateTime_Properties::testPropertyGetMonthOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyToIntervalDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertySetTextWeekOfWeekyear
  - org.joda.time.TestDateTime_Properties::testPropertyGetMinuteOfHour
  - org.joda.time.TestDateTime_Properties::testPropertyGetMaxMinValuesDayOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyGetSecondOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyAddWrapFieldMonthOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyWithMaximumValueDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertyCompareToYear2
  - org.joda.time.TestDateTime_Properties::testPropertySetDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertyRoundHalfCeilingHourOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyGetWeekOfWeekyear
  - org.joda.time.TestDateTime_Properties::testPropertyGetSecondOfMinute
  - org.joda.time.TestDateTime_Properties::testPropertyAddLongDayOfWeek
  - org.joda.time.TestDateTime_Properties::testPropertyAddYear
  - org.joda.time.TestDateTime_Properties::testPropertyGetDifferenceHourOfDay
  - org.joda.time.TestDateTime_Properties::testPropertyToIntervalMinuteOfHour
  - org.joda.time.TestDateTime_Properties::testPropertyAddDayOfMonth
  - org.joda.time.TestDateTime_Properties::testPropertyAddWrapFieldDayOfYear
  - org.joda.time.TestDateTime_Properties::testPropertyAddWrapFieldDayOfWeek
  - org.joda.time.TestDateTime_Properties::testPropertyGetMillisOfSecond
  - org.joda.time.TestDateTime_Constructors::testConstructor_ObjectString3
  - org.joda.time.TestDateTime_Constructors::testConstructor_ObjectString1
  - org.joda.time.TestDateTime_Constructors::testParse_noFormatter
  - org.joda.time.TestDateTime_Constructors::testParse_formatter
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_nullChronology
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_int
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_nullChronology
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_nullChronology
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_DateTimeZone
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_Chronology
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_Chronology
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_Chronology
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_DateTimeZone
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_nullDateTimeZone
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_DateTimeZone
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_nullDateTimeZone
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int
  - org.joda.time.TestDateTime_Constructors::testConstructor_int_int_int_int_int_int_int_nullDateTimeZone
  - org.joda.time.TestDateTime_Basics::testWithField2
  - org.joda.time.TestDateTime_Basics::testWithField1
  - org.joda.time.TestDateTime_Basics::testWithFields_RPartial
  - org.joda.time.TestDateTime_Basics::testWithFieldAdded4
  - org.joda.time.TestDateTime_Basics::testWithFieldAdded3
  - org.joda.time.TestDateTime_Basics::testWithFieldAdded2
  - org.joda.time.TestDateTime_Basics::testWithFieldAdded1
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_newValid_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_getOffsetFromLocal_Moscow_Autumn
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusHour_Moscow_Autumn
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_setHourBack_Moscow_Spring
  - org.joda.time.TestDateTimeZoneCutover::test_getOffsetFromLocal_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusHour_Moscow_Autumn
  - org.joda.time.TestDateTimeZoneCutover::testBug3192457_adjustOffset
  - org.joda.time.TestDateTimeZoneCutover::test_getOffsetFromLocal_Moscow_Spring
  - org.joda.time.TestDateTimeZone::testCommentParse
  - org.joda.time.TestDateTimeZone::testGetOffset_long
  - org.joda.time.TestDateTimeZone::testIsLocalDateTimeGap_Berlin
  - org.joda.time.TestDateMidnight_Properties::testPropertyGetYearOfCentury
  - org.joda.time.TestDateMidnight_Properties::testPropertyGetDayOfMonth
  - org.joda.time.TestDateMidnight_Properties::testPropertySetMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyToIntervalMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyGetWeekyear
  - org.joda.time.TestDateMidnight_Properties::testPropertyToIntervalYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyGetEra
  - org.joda.time.TestDateMidnight_Properties::testPropertyRoundFloorMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyToIntervalYearOfEra
  - org.joda.time.TestDateMidnight_Properties::testPropertyRoundHalfCeilingMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyGetDifferenceMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyToIntervalYearOfCentury
  - org.joda.time.TestDateMidnight_Properties::testPropertyGetYearOfEra
  - org.joda.time.TestDateMidnight_Properties::testPropertyAddMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyGetDayOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyGetDayOfWeek
  - org.joda.time.TestDateMidnight_Properties::testPropertyAddLongMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyWithMinimumValueDayOfMonth
  - org.joda.time.TestDateMidnight_Properties::testPropertySetTextLocaleMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyEqualsHashCodeStrict
  - org.joda.time.TestDateMidnight_Properties::testPropertySetTextMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyGetCenturyOfEra
  - org.joda.time.TestDateMidnight_Properties::testPropertyGetYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyGetMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyRemainderMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyToIntervalDayOfMonth
  - org.joda.time.TestDateMidnight_Properties::testPropertyAddWrapFieldMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyWithMaximumValueDayOfMonth
  - org.joda.time.TestDateMidnight_Properties::testPropertyRoundCeilingMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyRoundHalfFloorMonthOfYear
  - org.joda.time.TestDateMidnight_Properties::testPropertyGetWeekOfWeekyear
  - org.joda.time.TestDateMidnight_Properties::testPropertyRoundHalfEvenMonthOfYear
  - org.joda.time.TestDateMidnight_Constructors::testParse_noFormatter
  - org.joda.time.TestDateMidnight_Constructors::testParse_formatter
  - org.joda.time.TestDateMidnight_Constructors::testConstructor_int_int_int
  - org.joda.time.TestDateMidnight_Constructors::testConstructor_int_int_int_nullChronology
  - org.joda.time.TestDateMidnight_Constructors::testConstructor_int_int_int_DateTimeZone
  - org.joda.time.TestDateMidnight_Constructors::testConstructor_int_int_int_Chronology
  - org.joda.time.TestDateMidnight_Constructors::testConstructor_int_int_int_nullDateTimeZone
  - org.joda.time.TestDateMidnight_Basics::testIsEqual
  - org.joda.time.TestDateMidnight_Basics::testIsAfter
  - org.joda.time.TestDateMidnight_Basics::testWithField2
  - org.joda.time.TestDateMidnight_Basics::testWithField1
  - org.joda.time.TestDateMidnight_Basics::testIsBefore
  - org.joda.time.TestDateMidnight_Basics::testWithFields_RPartial
  - org.joda.time.TestDateMidnight_Basics::testToInterval
  - org.joda.time.TestDateMidnight_Basics::testWithFieldAdded4
  - org.joda.time.TestDateMidnight_Basics::testWithFieldAdded3
  - org.joda.time.TestDateMidnight_Basics::testWithFieldAdded2
  - org.joda.time.TestDateMidnight_Basics::testWithFieldAdded1
  - org.joda.time.TestBaseSingleFieldPeriod::testFactory_between_RInstant
Failing tests: 586
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instantAdjusted-prev<=end){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-prev<=diff){
return offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_1
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instantAdjusted-prev<=MIN_VALUE){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.BasicGJChronology,190
========
if(isSupported(year)){
dayOfYear++;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getFieldType(year)){
dayOfYear++;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(get(year)){
dayOfYear++;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,year,0,getMaximumValue());
if(isLeapYear(year)){
dayOfYear++;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.base.BaseDateTime,223
org.joda.time.base.BaseDateTime,225
Find no block!
org.joda.time.chrono.ZonedChronology,315
========
int offset=getOffsetToAdd(serialVersionUID);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_1
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
Failing tests: 0
TESTING : time_3
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.joda.time.TestYearMonthDay_Basics::testToInterval_Zone
  - org.joda.time.TestYearMonthDay_Basics::testToInterval
  - org.joda.time.TestYearMonthDay_Basics::testToInterval_nullZone
  - org.joda.time.TestPeriod_Constructors::testToPeriod_PeriodType3
  - org.joda.time.TestPeriod_Constructors::testConstructor_trickyDifferences_RI_RI_toFeb_endOfMonth3
  - org.joda.time.TestPeriod_Constructors::testConstructor_trickyDifferences_RI_RI_toFeb_endOfMonth2
  - org.joda.time.TestPeriod_Constructors::testConstructor_trickyDifferences_RI_RI_toFeb_endOfMonth1
  - org.joda.time.TestPeriod_Constructors::testConstructor_RD_RI_PeriodType1
  - org.joda.time.TestPeriod_Constructors::testConstructor_trickyDifferences_RI_RI_toMar_endOfMonth2
  - org.joda.time.TestPeriod_Constructors::testConstructor_trickyDifferences_RI_RI_toMar_endOfMonth1
  - org.joda.time.TestPeriod_Constructors::testConstructor_trickyDifferences_RI_RI_toFeb_leapYear
  - org.joda.time.TestPeriod_Constructors::testConstructor_trickyDifferences_RI_RI_toFeb_exactMonths
  - org.joda.time.TestPeriod_Constructors::testConstructor_long_long_PeriodType3
  - org.joda.time.TestPeriod_Constructors::testConstructor_long_long_PeriodType2
  - org.joda.time.TestPeriod_Constructors::testConstructor_long_long_PeriodType1
  - org.joda.time.TestPeriod_Constructors::testConstructor_RI_RD_PeriodType1
  - org.joda.time.TestPeriod_Constructors::testConstructor_RI_RI4
  - org.joda.time.TestPeriod_Constructors::testConstructor_RI_RI3
  - org.joda.time.TestPeriod_Constructors::testConstructor_RI_RI2
  - org.joda.time.TestPeriod_Constructors::testConstructor_RI_RI1
  - org.joda.time.TestPeriod_Constructors::testConstructor_RI_RD1
  - org.joda.time.TestPeriod_Constructors::testConstructor_RD_RI1
  - org.joda.time.TestPeriod_Constructors::testConstructor_long_long_Chronology2
  - org.joda.time.TestPeriod_Constructors::testConstructor_long_long_Chronology1
  - org.joda.time.TestPeriod_Constructors::testConstructor_trickyDifferences_RI_RI_toFeb_standardYear
  - org.joda.time.TestPeriod_Constructors::testConstructor_RI_RI_PeriodType4
  - org.joda.time.TestPeriod_Constructors::testConstructor_RI_RI_PeriodType3
  - org.joda.time.TestPeriod_Constructors::testConstructor_RI_RI_PeriodType2
  - org.joda.time.TestPeriod_Constructors::testConstructor_RI_RI_PeriodType1
  - org.joda.time.TestPeriod_Constructors::testConstructor_long_long_PeriodType_Chronology2
  - org.joda.time.TestPeriod_Constructors::testConstructor_long_long_PeriodType_Chronology1
  - org.joda.time.TestPeriod_Constructors::testConstructor_long_long2
  - org.joda.time.TestPeriod_Constructors::testConstructor_long_long1
  - org.joda.time.TestMutablePeriod_Updates::testSetPeriod_long_long2
  - org.joda.time.TestMutablePeriod_Updates::testSetPeriod_long_long1
  - org.joda.time.TestMutablePeriod_Updates::testSetPeriod_RInterval1
  - org.joda.time.TestMutablePeriod_Updates::testSetPeriod_long_long_NoYears
  - org.joda.time.TestMutablePeriod_Updates::testSetPeriod_long_long_NoWeeks
  - org.joda.time.TestMutablePeriod_Updates::testSetPeriod_long_long_NoHours
  - org.joda.time.TestMutablePeriod_Updates::testSetPeriod_RI_RI2
  - org.joda.time.TestMutablePeriod_Updates::testSetPeriod_RI_RI1
  - org.joda.time.TestMutablePeriod_Updates::testSetPeriod_long_long_NoMonths
  - org.joda.time.TestMutablePeriod_Updates::testSetPeriod_long_long_NoMillis
  - org.joda.time.TestMutablePeriod_Updates::testSetPeriod_long_long_NoDays
  - org.joda.time.TestMutablePeriod_Updates::testSetPeriod_long_long_NoSeconds
  - org.joda.time.TestMutablePeriod_Updates::testSetPeriod_long_long_NoMinutes
  - org.joda.time.TestMutablePeriod_Updates::testAdd_RInterval4
  - org.joda.time.TestMutablePeriod_Updates::testAdd_RInterval2
  - org.joda.time.TestMutablePeriod_Updates::testAdd_RInterval1
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_long_long_PeriodType3
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_long_long_PeriodType2
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_long_long_PeriodType1
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_RI_RD_PeriodType1
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_RI_RI4
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_RI_RI3
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_RI_RI2
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_RI_RI1
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_RI_RD1
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_long_long_Chronology2
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_long_long_Chronology1
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_RI_RI_PeriodType4
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_RI_RI_PeriodType3
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_RI_RI_PeriodType2
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_RI_RI_PeriodType1
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_long_long_PeriodType_Chronology2
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_long_long_PeriodType_Chronology1
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_long_long2
  - org.joda.time.TestMutablePeriod_Constructors::testConstructor_long_long1
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_RP_RI1
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_RI_RP1
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddWeekyears_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapSummer_addZero
  - org.joda.time.TestInterval_Constructors::testConstructor_RP_RI1
  - org.joda.time.TestInterval_Constructors::testConstructor_RI_RP1
  - org.joda.time.TestDateTime_Basics::testWithFieldAdded1
  - org.joda.time.TestDateTimeZoneCutover::testPeriod
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Gaza
  - org.joda.time.TestDateMidnight_Basics::testToInterval
  - org.joda.time.TestDateMidnight_Basics::testWithFieldAdded1
Failing tests: 88
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iJulianField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,get(instant),offset,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iGregorianField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iGregorianChronology.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return serialVersionUID-offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_1
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return prev-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return next-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant+(value-get(instant))*serialVersionUID;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
FieldUtils.verifyValueBounds(this,value,getMinimumValue(),getMaximumValue());
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetFromLocal(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant-offset)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case ROUND_CEILING :

int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case ROUND_HALF_CEILING :

int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getMillisOfDay(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_1
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
Failing tests: 0
TESTING : time_3
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
Failing tests: 0
Successfully repair!
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy/src/test/java/org/joda/time/TestMutableDateTime_Adds.java

# FAILING TESTS: 1
TIMEOUT : 3000000
===========
locations= [<org.joda.time.DateTimeZone,931>, <org.joda.time.chrono.BasicGJChronology,190>, <org.joda.time.base.BaseDateTime,223>, <org.joda.time.base.BaseDateTime,225>, <org.joda.time.chrono.ZonedChronology,315>, <org.joda.time.chrono.ZonedChronology,316>, <org.joda.time.chrono.ZonedChronology,317>, <org.joda.time.chrono.ZonedChronology,341>, <org.joda.time.chrono.ZonedChronology,342>, <org.joda.time.chrono.ZonedChronology,344>, <org.joda.time.chrono.ZonedChronology,347>, <org.joda.time.chrono.ZonedChronology,351>, <org.joda.time.chrono.ZonedChronology,352>, <org.joda.time.chrono.ZonedChronology,354>, <org.joda.time.chrono.ZonedChronology,357>, <org.joda.time.tz.CachedDateTimeZone,202>, <org.joda.time.format.FormatUtils,68>, <org.joda.time.format.FormatUtils,74>, <org.joda.time.format.FormatUtils,75>, <org.joda.time.format.FormatUtils,77>, <org.joda.time.format.FormatUtils,78>, <org.joda.time.MutableDateTime,351>, <org.joda.time.MutableDateTime,353>, <org.joda.time.MutableDateTime,785>, <org.joda.time.MutableDateTime,786>, <org.joda.time.chrono.BasicChronology,443>, <org.joda.time.field.PreciseDurationDateTimeField,127>, <org.joda.time.field.PreciseDurationDateTimeField,128>, <org.joda.time.DateTimeFieldType,496>, <org.joda.time.DateTimeFieldType,498>, <org.joda.time.DateTimeFieldType,516>, <org.joda.time.DateTimeFieldType,520>, <org.joda.time.DateTimeFieldType,522>, <org.joda.time.chrono.BasicGJChronology,188>, <org.joda.time.chrono.BasicMonthOfYearDateTimeField,73>, <org.joda.time.format.DateTimeFormatterBuilder,153>, <org.joda.time.format.DateTimeFormatterBuilder,154>, <org.joda.time.format.DateTimeFormatterBuilder,155>, <org.joda.time.format.DateTimeFormatterBuilder,217>, <org.joda.time.format.DateTimeFormatterBuilder,220>, <org.joda.time.format.DateTimeFormatterBuilder,257>, <org.joda.time.format.DateTimeFormatterBuilder,258>, <org.joda.time.format.DateTimeFormatterBuilder,305>, <org.joda.time.format.DateTimeFormatterBuilder,308>, <org.joda.time.format.DateTimeFormatterBuilder,311>, <org.joda.time.format.DateTimeFormatterBuilder,312>, <org.joda.time.format.DateTimeFormatterBuilder,319>, <org.joda.time.format.DateTimeFormatterBuilder,321>, <org.joda.time.format.DateTimeFormatterBuilder,322>, <org.joda.time.format.DateTimeFormatterBuilder,326>, <org.joda.time.format.DateTimeFormatterBuilder,328>, <org.joda.time.format.DateTimeFormatterBuilder,345>, <org.joda.time.format.DateTimeFormatterBuilder,346>, <org.joda.time.format.DateTimeFormatterBuilder,347>, <org.joda.time.format.DateTimeFormatterBuilder,357>, <org.joda.time.format.DateTimeFormatterBuilder,360>, <org.joda.time.format.DateTimeFormatterBuilder,383>, <org.joda.time.format.DateTimeFormatterBuilder,384>, <org.joda.time.format.DateTimeFormatterBuilder,385>, <org.joda.time.format.DateTimeFormatterBuilder,386>, <org.joda.time.format.DateTimeFormatterBuilder,397>, <org.joda.time.format.DateTimeFormatterBuilder,408>, <org.joda.time.format.DateTimeFormatterBuilder,411>, <org.joda.time.format.DateTimeFormatterBuilder,417>, <org.joda.time.format.DateTimeFormatterBuilder,434>, <org.joda.time.format.DateTimeFormatterBuilder,437>, <org.joda.time.format.DateTimeFormatterBuilder,440>, <org.joda.time.format.DateTimeFormatterBuilder,443>, <org.joda.time.format.DateTimeFormatterBuilder,444>, <org.joda.time.format.DateTimeFormatterBuilder,446>, <org.joda.time.format.DateTimeFormatterBuilder,464>, <org.joda.time.format.DateTimeFormatterBuilder,467>, <org.joda.time.format.DateTimeFormatterBuilder,470>, <org.joda.time.format.DateTimeFormatterBuilder,486>, <org.joda.time.format.DateTimeFormatterBuilder,489>, <org.joda.time.format.DateTimeFormatterBuilder,492>, <org.joda.time.format.DateTimeFormatterBuilder,495>, <org.joda.time.format.DateTimeFormatterBuilder,498>, <org.joda.time.format.DateTimeFormatterBuilder,570>, <org.joda.time.format.DateTimeFormatterBuilder,573>, <org.joda.time.format.DateTimeFormatterBuilder,576>, <org.joda.time.format.DateTimeFormatterBuilder,579>, <org.joda.time.format.DateTimeFormatterBuilder,597>, <org.joda.time.format.DateTimeFormatterBuilder,614>, <org.joda.time.format.DateTimeFormatterBuilder,631>, <org.joda.time.format.DateTimeFormatterBuilder,685>, <org.joda.time.format.DateTimeFormatterBuilder,705>, <org.joda.time.format.DateTimeFormatterBuilder,725>, <org.joda.time.format.DateTimeFormatterBuilder,765>, <org.joda.time.format.DateTimeFormatterBuilder,775>, <org.joda.time.format.DateTimeFormatterBuilder,785>, <org.joda.time.format.DateTimeFormatterBuilder,795>, <org.joda.time.format.DateTimeFormatterBuilder,807>, <org.joda.time.format.DateTimeFormatterBuilder,817>, <org.joda.time.format.DateTimeFormatterBuilder,829>, <org.joda.time.format.DateTimeFormatterBuilder,1091>, <org.joda.time.format.DateTimeFormatterBuilder,1150>, <org.joda.time.format.DateTimeFormatterBuilder,1155>, <org.joda.time.format.DateTimeFormatterBuilder,1167>, <org.joda.time.format.DateTimeFormatterBuilder,1171>, <org.joda.time.format.DateTimeFormatterBuilder,1177>, <org.joda.time.format.DateTimeFormatterBuilder,1319>, <org.joda.time.format.DateTimeFormatterBuilder,1320>, <org.joda.time.format.DateTimeFormatterBuilder,1321>, <org.joda.time.format.DateTimeFormatterBuilder,1322>, <org.joda.time.format.DateTimeFormatterBuilder,1323>, <org.joda.time.format.DateTimeFormatterBuilder,1326>, <org.joda.time.format.DateTimeFormatterBuilder,1463>, <org.joda.time.format.DateTimeFormatterBuilder,1464>, <org.joda.time.format.DateTimeFormatterBuilder,1465>, <org.joda.time.format.DateTimeFormatterBuilder,1468>, <org.joda.time.format.DateTimeFormatterBuilder,1475>, <org.joda.time.format.DateTimeFormatterBuilder,1476>, <org.joda.time.format.DateTimeFormatterBuilder,1479>, <org.joda.time.format.DateTimeFormatterBuilder,1480>, <org.joda.time.format.DateTimeFormatterBuilder,1207>, <org.joda.time.format.DateTimeFormatterBuilder,1208>, <org.joda.time.format.DateTimeFormatterBuilder,1209>, <org.joda.time.format.DateTimeFormatterBuilder,1212>, <org.joda.time.format.DateTimeFormatterBuilder,1218>, <org.joda.time.format.DateTimeFormatterBuilder,1219>, <org.joda.time.format.DateTimeFormatterBuilder,1236>, <org.joda.time.format.DateTimeFormatterBuilder,2615>, <org.joda.time.format.DateTimeFormatterBuilder,2617>, <org.joda.time.format.DateTimeFormatterBuilder,2618>, <org.joda.time.format.DateTimeFormatterBuilder,2620>, <org.joda.time.format.DateTimeFormatterBuilder,2622>, <org.joda.time.format.DateTimeFormatterBuilder,2623>, <org.joda.time.format.DateTimeFormatterBuilder,2624>, <org.joda.time.format.DateTimeFormatterBuilder,2626>, <org.joda.time.format.DateTimeFormatterBuilder,2627>, <org.joda.time.format.DateTimeFormatterBuilder,2628>, <org.joda.time.format.DateTimeFormatterBuilder,2629>, <org.joda.time.format.DateTimeFormatterBuilder,2630>, <org.joda.time.format.DateTimeFormatterBuilder,2631>, <org.joda.time.format.DateTimeFormatterBuilder,2632>, <org.joda.time.format.DateTimeFormatterBuilder,2634>, <org.joda.time.format.DateTimeFormatterBuilder,2637>, <org.joda.time.format.DateTimeFormatterBuilder,2641>, <org.joda.time.format.DateTimeFormatterBuilder,2642>, <org.joda.time.format.DateTimeFormatterBuilder,2643>, <org.joda.time.format.DateTimeFormatterBuilder,2644>, <org.joda.time.format.DateTimeFormatterBuilder,2645>, <org.joda.time.format.DateTimeFormatterBuilder,2646>, <org.joda.time.format.DateTimeFormatterBuilder,2647>, <org.joda.time.format.DateTimeFormatterBuilder,2649>, <org.joda.time.format.DateTimeFormatterBuilder,2651>, <org.joda.time.format.DateTimeFormatterBuilder,2654>, <org.joda.time.format.DateTimeFormatterBuilder,2660>, <org.joda.time.format.DateTimeFormatterBuilder,2661>, <org.joda.time.format.DateTimeFormatterBuilder,2665>, <org.joda.time.format.DateTimeFormatterBuilder,2667>, <org.joda.time.format.DateTimeFormatterBuilder,2670>, <org.joda.time.format.DateTimeFormatterBuilder,2671>, <org.joda.time.format.DateTimeFormatterBuilder,2672>, <org.joda.time.format.DateTimeFormatterBuilder,2674>, <org.joda.time.format.DateTimeFormatterBuilder,2730>, <org.joda.time.format.DateTimeFormatterBuilder,2747>, <org.joda.time.format.DateTimeFormatterBuilder,2751>, <org.joda.time.format.DateTimeFormatterBuilder,2759>, <org.joda.time.format.DateTimeFormatterBuilder,2760>, <org.joda.time.format.DateTimeFormatterBuilder,2761>, <org.joda.time.format.DateTimeFormatterBuilder,2762>, <org.joda.time.format.DateTimeFormatterBuilder,2763>, <org.joda.time.format.DateTimeFormatterBuilder,2765>, <org.joda.time.format.DateTimeFormatterBuilder,2768>, <org.joda.time.format.DateTimeFormatterBuilder,2769>, <org.joda.time.format.DateTimeFormatterBuilder,2770>, <org.joda.time.format.DateTimeFormatterBuilder,2772>, <org.joda.time.format.DateTimeFormatterBuilder,2775>, <org.joda.time.format.DateTimeFormatterBuilder,2778>, <org.joda.time.format.DateTimeFormatterBuilder,2779>, <org.joda.time.format.DateTimeFormatterBuilder,2780>, <org.joda.time.format.DateTimeFormatterBuilder,2783>, <org.joda.time.format.DateTimeFormatter,137>, <org.joda.time.format.DateTimeFormatter,138>, <org.joda.time.format.DateTimeFormatter,139>, <org.joda.time.format.DateTimeFormatter,140>, <org.joda.time.format.DateTimeFormatter,141>, <org.joda.time.format.DateTimeFormatter,142>, <org.joda.time.format.DateTimeFormatter,143>, <org.joda.time.format.DateTimeFormatter,144>, <org.joda.time.format.DateTimeFormatter,145>, <org.joda.time.format.DateTimeFormatter,146>, <org.joda.time.format.DateTimeFormatter,164>, <org.joda.time.format.DateTimeFormatter,182>, <org.joda.time.format.DateTimeFormatter,310>, <org.joda.time.format.DateTimeFormatter,330>, <org.joda.time.format.DateTimeFormatter,333>, <org.joda.time.format.FormatUtils,31>, <org.joda.time.format.FormatUtils,50>, <org.joda.time.format.FormatUtils,62>, <org.joda.time.format.FormatUtils,63>, <org.joda.time.format.FormatUtils,64>, <org.joda.time.format.FormatUtils,66>, <org.joda.time.format.FormatUtils,67>, <org.joda.time.format.FormatUtils,80>, <org.joda.time.format.FormatUtils,82>, <org.joda.time.format.FormatUtils,83>, <org.joda.time.format.FormatUtils,87>]
======================org.joda.time.DateTimeZone,931
========
if(instantAdjusted-prev<=instant){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-prev<=diff){
return prev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-millis<=diff){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-prev<=prev){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instantAdjusted-prev<=end){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-prev<=diff){
return offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instantAdjusted-prev<=MIN_VALUE){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.BasicGJChronology,190
========
if(isSupported(year)){
dayOfYear++;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getFieldType(year)){
dayOfYear++;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(get(year)){
dayOfYear++;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,year,0,getMaximumValue());
if(isLeapYear(year)){
dayOfYear++;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.base.BaseDateTime,223
org.joda.time.base.BaseDateTime,225
Find no block!
org.joda.time.chrono.ZonedChronology,315
========
int offset=getOffsetToAdd(serialVersionUID);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iJulianField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,get(instant),offset,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iGregorianField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iGregorianChronology.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return serialVersionUID-offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return prev-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return next-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant+(value-get(instant))*serialVersionUID;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
FieldUtils.verifyValueBounds(this,value,getMinimumValue(),getMaximumValue());
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetFromLocal(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant-offset)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case ROUND_CEILING :

int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case ROUND_HALF_CEILING :

int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getMillisOfDay(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(value==serialVersionUID){
return add(instant,i_months);
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
FieldUtils.verifyValueBounds(this,value,getMinimumValue(),getMaximumValueForSet(instant,value));
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getYear(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getWeekyear(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
FieldUtils.verifyValueBounds(this,value,1,offset);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
if(instant>=instant){
return iField.getMaximumValue(instant);
}
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getDivided(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getRemainder(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return yearStart-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return MILLIS_PER_DAY-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instant^offset)>=0){
iZone=DateTimeZone.UTC;
offset=0;
adjustedInstant=instant;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=get(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant+(offset-get(instant))*getUnitMillis();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
FieldUtils.verifyValueBounds(this,value,1,getMaximumValue());
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getDayOfWeek(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return instant;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
checkLimits(instant,null);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkLimits(instant,"resulting");
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.setYear(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
if(offset>offset){
setToWeek=maxOutWeeks;
}
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getWeekOfWeekyear(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value>1){
instant-=((long)DateTimeConstants.MILLIS_PER_WEEK)*(wow-1);
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offset==0){
return instant;
}
int offset=getYear(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=field.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=getMillisOfDay(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return instant;
}
int offset=getMillisOfDay(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return instant;
}
long offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return instant;
}
long offset=getMillisOfDay(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=minuteOfHour().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
iZone=DateTimeUtils.getZone(zone);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return (instant+1)%serialVersionUID+iUnitMillis-1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return iUnitMillis-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
if(offset>(31+28)){
if(isLeapYear(value)){
if(!isLeapYear(offset)){
dayOfYear--;
}
}else {
if(isLeapYear(year)){
dayOfYear++;
}
}
}
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant+=offset;
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return value;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return firstWeekMillis1-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return MILLIS_PER_WEEK-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant<instant){
return getWeeksInYear(value-1);
}
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant>=getFirstWeekOfYearMillis(value+1)){
return 1;
}
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
if(instant<instant){
return iField.getMinimumValue(instant);
}
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().monthOfYear().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().monthOfYear().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().monthOfYear().set(instant,offset);
instant=getChronology().dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().monthOfYear().set(instant,offset);
instant=getChronology().dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return iTimeField?instant:instant-serialVersionUID;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return iTimeField?instant+serialVersionUID:instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant<instant||instant>=serialVersionUID){
return instant;
}
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant<instant||instant>=serialVersionUID){
return instant;
}
return iTimeField?instant:instant-serialVersionUID;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant<instant||instant>=serialVersionUID){
return instant;
}
return iTimeField?instant+serialVersionUID:instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 0
TESTING : time_3
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.joda.time.TestMutablePeriod_Updates::testAdd_RInterval2
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_RP_RI1
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_RI_RP1
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int1
  - org.joda.time.TestInterval_Constructors::testConstructor_RP_RI1
  - org.joda.time.TestInterval_Constructors::testConstructor_RI_RP1
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Gaza
Failing tests: 13
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return millis-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().secondOfMinute().set(instant,offset);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().secondOfMinute().set(instant,offset);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().secondOfMinute().set(instant,offset);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().secondOfMinute().set(instant,offset);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=dayOfMonth().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=hourOfDay().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=minuteOfHour().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=minuteOfHour().set(instant,value);
instant=secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=minuteOfHour().set(instant,value);
instant=secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset!=getZone().getOffset(instant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return this;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value==getValue(offset)){
return this;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,get(instant),value,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instant^offset)>=0){
iZone=DateTimeZone.UTC;
offset=0;
adjustedInstant=instant;
}
int offset=getOffset(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
int offset=getOffset(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.ZonedChronology,316
org.joda.time.chrono.ZonedChronology,317
org.joda.time.chrono.ZonedChronology,341
UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

========
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantUTC^sum)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantUTC^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^sum)<0&&(instantLocal^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instantLocal^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((val1^sum)<0&&(val1^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^serialVersionUID)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((val1^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(val1^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^val2)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^serialVersionUID)>=0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("Specified date does not exist");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return 1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==null){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0||offset==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==Integer.MIN_VALUE){
return subtract(instant,(long)value);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant<sum){
return getWeeksInYear(offset-1);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<0&&sum>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instant<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&sum>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(sum<0&&instant>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(sum<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&instant>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>Long.MIN_VALUE){
return instant-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
return instant;
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==offset){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(serialVersionUID<=sum){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==sum){
return add(instant,i_months);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant<sum){
return iField.getMinimumValue(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.getMaximumValue(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant==0||sum==0){
return this;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return (int)(instant%DateTimeConstants.MILLIS_PER_DAY);
}else {
return (DateTimeConstants.MILLIS_PER_DAY-1)+(int)((instant+1)%DateTimeConstants.MILLIS_PER_DAY);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<sum||instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instant<sum&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant<sum||instant>=serialVersionUID){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<sum&&instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("The offset cannot be zero");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==0){
return DateTimeZone.UTC;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0){
return this;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(serialVersionUID<sum){
return prev;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,0,getMaximumValue());
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+offset);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>Long.MIN_VALUE){
return prev-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.get(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.isLeap(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.getLeapAmount(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return getYear(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,1,sum);
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getYearMonthDayMillis(offset,1,sum);
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant+=offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
instant=getYearMonthDayMillis(offset,1,sum);
instant+=offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return instant%sum;
}else {
return (instant+1)%iUnitMillis+iUnitMillis-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),null,null);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant+sum<instant){
instant=gregorianToJulian(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant-sum>=instant){
instant=julianToGregorian(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
id=printOffset(offset);
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
convId=printOffset(offset);
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(serialVersionUID<-3){
return 7+(int)((daysSince19700101+4)%7);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
daysSince19700101=(instant-(DateTimeConstants.MILLIS_PER_DAY-1))/DateTimeConstants.MILLIS_PER_DAY;
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return (int)((instant/getUnitMillis())%sum);
}else {
return iRange-1+(int)(((instant+1)/getUnitMillis())%iRange);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<sum&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<sum&&(instant^offset)>=0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=offset){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
FieldUtils.verifyValueBounds(this,offset,DateTimeConstants.BCE,DateTimeConstants.CE);
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return instant-instant%instant;
}else {
instant+=1;
return instant-instant%iUnitMillis-iUnitMillis;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
instant+=1;
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>0){
instant-=1;
return instant-instant%instant+iUnitMillis;
}else {
return instant-instant%iUnitMillis;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
instant-=1;
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalInstantException("Illegal instant due to time zone offset transition ("+iZone);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum>=serialVersionUID){
return iTimeField?instant:instant-diff;
}else {
return earlierOrLater?instant+diff:instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum<=serialVersionUID-instant){
return serialVersionUID;
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(serialVersionUID-instant<=sum){
return serialVersionUID;
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalInstantException(serialVersionUID,iZone.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(sum),new IllegalInstantException(serialVersionUID,iZone.getID()).getMessage());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
new IllegalFieldValueException(iField.getType(),Integer.valueOf(sum),new IllegalInstantException(serialVersionUID,iZone.getID()).getMessage()).initCause(new IllegalInstantException(serialVersionUID,iZone.getID()));
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
serialVersionUID=iField.set(localInstant,sum);
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
UNKNOWN ASTNode type : catch (IllegalFieldValueException ex) {
  if (monthOfYear != 2 || dayOfMonth != 29) {
    throw ex;
  }
  instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,28,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
  if (instant >= iCutoverMillis) {
    throw ex;
  }
}

========
int offset=this.iZone.getOffset(instant);
long sum=instantUTC+offset;
if((instantUTC^sum)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instantUTC^sum)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instantUTC+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instantUTC^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+MILLIS_PER_HOUR;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(getOffset(instant)<=sum){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instantLocal^sum)<0&&(instantLocal^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instantLocal^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instantLocal^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==Integer.MIN_VALUE){
iOffset=iZone.getOffset(sum);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=val1+offset;
if((val1^sum)<0&&(val1^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+val2;
if((instant^sum)<0&&(instant^val2)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((val1^sum)<0&&(val1^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=val1+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+val2;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^serialVersionUID)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((val1^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(val1^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^val2)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return sum;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^serialVersionUID)>=0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(serialVersionUID);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instantLocal+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offsetOriginal;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==offset){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetToAdd(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=iField.add(instant+sum,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
instant+=offset;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalInstantException(instant,getZone().getID());
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
instant-=sum;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long sum=instant+offset;
instant-=sum;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,offset,ERA_VALUE,ERA_VALUE);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&instant>serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
serialVersionUID=instant;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(serialVersionUID);
long sum=instant+offset;
if((instant^sum)<0&&instant>serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant<sum){
return getWeeksInYear(offset-1);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return 1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return sum<0?-year:year;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return year;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
id=printOffset(offset);
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
convId=printOffset(offset);
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return (offset>sum||value<1)?getMaximumValue(instant):maxLessOne;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return maxLessOne;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getWeekyear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return value;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0||offset==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.get(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.isLeap(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.getLeapAmount(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum<instant){
return prev;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
FieldUtils.verifyValueBounds(this,sum,1,getMaximumValue());
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(serialVersionUID==0||sum==0){
return this;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>Long.MIN_VALUE){
return instant-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
return instant;
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return (int)((instant-sum)/DateTimeConstants.MILLIS_PER_DAY)+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return yearStart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return MILLIS_PER_DAY;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
sum-=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
FieldUtils.verifyValueBounds(this,offset,1,sum);
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
FieldUtils.verifyValueBounds(this,offset,0,getMaximumValue());
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().addWrapField(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().set(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.get(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().roundFloor(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().roundCeiling(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().roundHalfFloor(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().roundHalfCeiling(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().roundHalfEven(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().remainder(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return iLeapMonth;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(serialVersionUID,"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=super.add(instant,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,get(instant),offset,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+MILLIS_PER_SECOND;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
int sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<0&&sum>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&sum>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum>Long.MIN_VALUE){
return prev-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getWeekOfWeekyear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sum-=2;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return position;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum>23){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
offset++;
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum>23){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
offset++;
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getBase().getDateTimeMillis(instant,offset,offset,offset,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,"resulting");
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(instant,"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(instant,"resulting");
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return prev;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return next;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return iUnitMillis;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,offset,getMinimumValue(),getMaximumValue());
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=offset){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return getYear(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.get(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,offset,getMinimumValue(),getMaximumValueForSet(instant,value));
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,DateTimeConstants.BCE,DateTimeConstants.CE);
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant==null){
return getOffset(DateTimeUtils.currentTimeMillis());
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0){
return DateTimeZone.UTC;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("The offset cannot be zero");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
sum=offset;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset<(iField.getMinimumValue()+offset)){
offset=field.getMinimumValue()+offset;
}else {
iMin=minValue;
}
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getDivided(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0){
return this;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return wrappedValue;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return thisValue;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return instant%serialVersionUID;
}else {
return (instant+1)%iUnitMillis+iUnitMillis-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("Specified date does not exist");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum>=0){
return instant-instant%instant;
}else {
instant+=1;
return instant-instant%iUnitMillis-iUnitMillis;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
instant+=1;
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum>0){
instant-=1;
return instant-instant%instant+iUnitMillis;
}else {
return instant-instant%iUnitMillis;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
instant-=1;
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=~i;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getRemainder(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,offset,offset);
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+floor;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum<=roundCeiling(instant)-instant){
return roundFloor(instant);
}else {
return roundCeiling(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(roundCeiling(instant)-instant<=sum){
return roundCeiling(instant);
}else {
return roundFloor(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getMillisOfDay(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+months;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffset(instant);
int sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
int sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffset(instant);
int sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.get(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==offset){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=ceiling+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant+=getMillisOfDay(instant);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant+=getMillisOfDay(instant);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant+=getMillisOfDay(instant);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
instant+=getMillisOfDay(instant);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant+=getMillisOfDay(instant);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
instant+=getMillisOfDay(instant);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
instant+=getMillisOfDay(instant);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
instant+=getMillisOfDay(instant);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return max;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum>=instant){
return iField.getMaximumValue(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
sum=iField.set(instant,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
if(sum>=instant){
offset=iField.get(iJulianField.add(iCutover,-1));
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==instant){
return add(instant,i_months);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getMillisOfDay(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getMillisOfDay(instant);
long sum=instant+months;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffset(instant);
long sum=instant+months;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getMillisOfDay(instant);
long sum=instant+months;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return min;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum<instant){
return iField.getMinimumValue(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
if(sum<instant){
offset=iField.get(iCutover);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return (int)((instant/getUnitMillis())%offset);
}else {
return iRange-1+(int)(((instant+1)/getUnitMillis())%iRange);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+MILLIS_YEAR_1;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return (int)((sum*CYCLE)+1L);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offset<-59||minutesOffset>59){
throw new IllegalArgumentException("Minutes out of range: "+minutesOffset);
}
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+overlapStart;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<serialVersionUID||instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<serialVersionUID&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return diff;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant<serialVersionUID||instant>=serialVersionUID){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<serialVersionUID||instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<serialVersionUID&&instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<serialVersionUID&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<serialVersionUID&&instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return millis;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),new IllegalInstantException(iZone.convertUTCToLocal(instant),iZone.getID()).getMessage());
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),new IllegalInstantException(iZone.convertUTCToLocal(instant),iZone.getID()).getMessage()).initCause(new IllegalInstantException(iZone.convertUTCToLocal(instant),iZone.getID()));
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
serialVersionUID=iField.set(localInstant,offset);
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return datePart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return timePart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("Specified date does not exist");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalInstantException(instant,getID());
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return (int)(instant%DateTimeConstants.MILLIS_PER_DAY);
}else {
return (DateTimeConstants.MILLIS_PER_DAY-1)+(int)((instant+1)%DateTimeConstants.MILLIS_PER_DAY);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),null,null);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
instant=iField.set(instant,offset);
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum<-3){
return 7+(int)((daysSince19700101+4)%7);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
daysSince19700101=(instant-(DateTimeConstants.MILLIS_PER_DAY-1))/DateTimeConstants.MILLIS_PER_DAY;
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return newInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=periodStart+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&iZone.nextTransition(instant)>sum){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
enclosing.iZone=this.iZone;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
enclosing.iOffset=this.iOffset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
enclosing.iSavedFields=this.iSavedFields;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
enclosing.iSavedFieldsCount=this.iSavedFieldsCount;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=iField.add(instant+sum,serialVersionUID);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetToAdd(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetToAdd(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=iField.add(instant+sum,serialVersionUID);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=iField.add(instant+sum,serialVersionUID);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetToAdd(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=iField.add(instant+sum,serialVersionUID);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=super.add(instant,serialVersionUID);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,get(instant),offset,offset);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,offset),"resulting");
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,offset),"resulting");
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.ZonedChronology,342
org.joda.time.chrono.ZonedChronology,344
org.joda.time.chrono.ZonedChronology,347
org.joda.time.chrono.ZonedChronology,351
UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantUTC^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantUTC^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((val1^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((val1^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^val2)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("Specified date does not exist");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return 1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==null){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0||offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==Integer.MIN_VALUE){
return subtract(instant,(long)value);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff){
return getWeeksInYear(offset-1);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&diff<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&instant<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instant<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(diff<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>Long.MIN_VALUE){
return instant-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
return instant;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==offset){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<=diff){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset==diff){
return add(instant,i_months);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff){
return iField.getMinimumValue(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.getMaximumValue(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant==0||diff==0){
return this;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return (int)(instant%DateTimeConstants.MILLIS_PER_DAY);
}else {
return (DateTimeConstants.MILLIS_PER_DAY-1)+(int)((instant+1)%DateTimeConstants.MILLIS_PER_DAY);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff||instant>=serialVersionUID){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("The offset cannot be zero");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset==0){
return DateTimeZone.UTC;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0){
return this;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<diff){
return prev;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,0,getMaximumValue());
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&offset<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Timeout!
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy/src/test/java/org/joda/time/TestMutableDateTime_Adds.java

# FAILING TESTS: 1
TIMEOUT : 3000000
===========
locations= [<org.joda.time.DateTimeZone,931>, <org.joda.time.chrono.BasicGJChronology,190>, <org.joda.time.base.BaseDateTime,223>, <org.joda.time.base.BaseDateTime,225>, <org.joda.time.chrono.ZonedChronology,315>, <org.joda.time.chrono.ZonedChronology,316>, <org.joda.time.chrono.ZonedChronology,317>, <org.joda.time.chrono.ZonedChronology,341>, <org.joda.time.chrono.ZonedChronology,342>, <org.joda.time.chrono.ZonedChronology,344>, <org.joda.time.chrono.ZonedChronology,347>, <org.joda.time.chrono.ZonedChronology,351>, <org.joda.time.chrono.ZonedChronology,352>, <org.joda.time.chrono.ZonedChronology,354>, <org.joda.time.chrono.ZonedChronology,357>, <org.joda.time.tz.CachedDateTimeZone,202>, <org.joda.time.format.FormatUtils,68>, <org.joda.time.format.FormatUtils,74>, <org.joda.time.format.FormatUtils,75>, <org.joda.time.format.FormatUtils,77>, <org.joda.time.format.FormatUtils,78>, <org.joda.time.MutableDateTime,351>, <org.joda.time.MutableDateTime,353>, <org.joda.time.MutableDateTime,785>, <org.joda.time.MutableDateTime,786>, <org.joda.time.chrono.BasicChronology,443>, <org.joda.time.field.PreciseDurationDateTimeField,127>, <org.joda.time.field.PreciseDurationDateTimeField,128>, <org.joda.time.DateTimeFieldType,496>, <org.joda.time.DateTimeFieldType,498>, <org.joda.time.DateTimeFieldType,516>, <org.joda.time.DateTimeFieldType,520>, <org.joda.time.DateTimeFieldType,522>, <org.joda.time.chrono.BasicGJChronology,188>, <org.joda.time.chrono.BasicMonthOfYearDateTimeField,73>, <org.joda.time.format.DateTimeFormatterBuilder,153>, <org.joda.time.format.DateTimeFormatterBuilder,154>, <org.joda.time.format.DateTimeFormatterBuilder,155>, <org.joda.time.format.DateTimeFormatterBuilder,217>, <org.joda.time.format.DateTimeFormatterBuilder,220>, <org.joda.time.format.DateTimeFormatterBuilder,257>, <org.joda.time.format.DateTimeFormatterBuilder,258>, <org.joda.time.format.DateTimeFormatterBuilder,305>, <org.joda.time.format.DateTimeFormatterBuilder,308>, <org.joda.time.format.DateTimeFormatterBuilder,311>, <org.joda.time.format.DateTimeFormatterBuilder,312>, <org.joda.time.format.DateTimeFormatterBuilder,319>, <org.joda.time.format.DateTimeFormatterBuilder,321>, <org.joda.time.format.DateTimeFormatterBuilder,322>, <org.joda.time.format.DateTimeFormatterBuilder,326>, <org.joda.time.format.DateTimeFormatterBuilder,328>, <org.joda.time.format.DateTimeFormatterBuilder,345>, <org.joda.time.format.DateTimeFormatterBuilder,346>, <org.joda.time.format.DateTimeFormatterBuilder,347>, <org.joda.time.format.DateTimeFormatterBuilder,357>, <org.joda.time.format.DateTimeFormatterBuilder,360>, <org.joda.time.format.DateTimeFormatterBuilder,383>, <org.joda.time.format.DateTimeFormatterBuilder,384>, <org.joda.time.format.DateTimeFormatterBuilder,385>, <org.joda.time.format.DateTimeFormatterBuilder,386>, <org.joda.time.format.DateTimeFormatterBuilder,397>, <org.joda.time.format.DateTimeFormatterBuilder,408>, <org.joda.time.format.DateTimeFormatterBuilder,411>, <org.joda.time.format.DateTimeFormatterBuilder,417>, <org.joda.time.format.DateTimeFormatterBuilder,434>, <org.joda.time.format.DateTimeFormatterBuilder,437>, <org.joda.time.format.DateTimeFormatterBuilder,440>, <org.joda.time.format.DateTimeFormatterBuilder,443>, <org.joda.time.format.DateTimeFormatterBuilder,444>, <org.joda.time.format.DateTimeFormatterBuilder,446>, <org.joda.time.format.DateTimeFormatterBuilder,464>, <org.joda.time.format.DateTimeFormatterBuilder,467>, <org.joda.time.format.DateTimeFormatterBuilder,470>, <org.joda.time.format.DateTimeFormatterBuilder,486>, <org.joda.time.format.DateTimeFormatterBuilder,489>, <org.joda.time.format.DateTimeFormatterBuilder,492>, <org.joda.time.format.DateTimeFormatterBuilder,495>, <org.joda.time.format.DateTimeFormatterBuilder,498>, <org.joda.time.format.DateTimeFormatterBuilder,570>, <org.joda.time.format.DateTimeFormatterBuilder,573>, <org.joda.time.format.DateTimeFormatterBuilder,576>, <org.joda.time.format.DateTimeFormatterBuilder,579>, <org.joda.time.format.DateTimeFormatterBuilder,597>, <org.joda.time.format.DateTimeFormatterBuilder,614>, <org.joda.time.format.DateTimeFormatterBuilder,631>, <org.joda.time.format.DateTimeFormatterBuilder,685>, <org.joda.time.format.DateTimeFormatterBuilder,705>, <org.joda.time.format.DateTimeFormatterBuilder,725>, <org.joda.time.format.DateTimeFormatterBuilder,765>, <org.joda.time.format.DateTimeFormatterBuilder,775>, <org.joda.time.format.DateTimeFormatterBuilder,785>, <org.joda.time.format.DateTimeFormatterBuilder,795>, <org.joda.time.format.DateTimeFormatterBuilder,807>, <org.joda.time.format.DateTimeFormatterBuilder,817>, <org.joda.time.format.DateTimeFormatterBuilder,829>, <org.joda.time.format.DateTimeFormatterBuilder,1091>, <org.joda.time.format.DateTimeFormatterBuilder,1150>, <org.joda.time.format.DateTimeFormatterBuilder,1155>, <org.joda.time.format.DateTimeFormatterBuilder,1167>, <org.joda.time.format.DateTimeFormatterBuilder,1171>, <org.joda.time.format.DateTimeFormatterBuilder,1177>, <org.joda.time.format.DateTimeFormatterBuilder,1319>, <org.joda.time.format.DateTimeFormatterBuilder,1320>, <org.joda.time.format.DateTimeFormatterBuilder,1321>, <org.joda.time.format.DateTimeFormatterBuilder,1322>, <org.joda.time.format.DateTimeFormatterBuilder,1323>, <org.joda.time.format.DateTimeFormatterBuilder,1326>, <org.joda.time.format.DateTimeFormatterBuilder,1463>, <org.joda.time.format.DateTimeFormatterBuilder,1464>, <org.joda.time.format.DateTimeFormatterBuilder,1465>, <org.joda.time.format.DateTimeFormatterBuilder,1468>, <org.joda.time.format.DateTimeFormatterBuilder,1475>, <org.joda.time.format.DateTimeFormatterBuilder,1476>, <org.joda.time.format.DateTimeFormatterBuilder,1479>, <org.joda.time.format.DateTimeFormatterBuilder,1480>, <org.joda.time.format.DateTimeFormatterBuilder,1207>, <org.joda.time.format.DateTimeFormatterBuilder,1208>, <org.joda.time.format.DateTimeFormatterBuilder,1209>, <org.joda.time.format.DateTimeFormatterBuilder,1212>, <org.joda.time.format.DateTimeFormatterBuilder,1218>, <org.joda.time.format.DateTimeFormatterBuilder,1219>, <org.joda.time.format.DateTimeFormatterBuilder,1236>, <org.joda.time.format.DateTimeFormatterBuilder,2615>, <org.joda.time.format.DateTimeFormatterBuilder,2617>, <org.joda.time.format.DateTimeFormatterBuilder,2618>, <org.joda.time.format.DateTimeFormatterBuilder,2620>, <org.joda.time.format.DateTimeFormatterBuilder,2622>, <org.joda.time.format.DateTimeFormatterBuilder,2623>, <org.joda.time.format.DateTimeFormatterBuilder,2624>, <org.joda.time.format.DateTimeFormatterBuilder,2626>, <org.joda.time.format.DateTimeFormatterBuilder,2627>, <org.joda.time.format.DateTimeFormatterBuilder,2628>, <org.joda.time.format.DateTimeFormatterBuilder,2629>, <org.joda.time.format.DateTimeFormatterBuilder,2630>, <org.joda.time.format.DateTimeFormatterBuilder,2631>, <org.joda.time.format.DateTimeFormatterBuilder,2632>, <org.joda.time.format.DateTimeFormatterBuilder,2634>, <org.joda.time.format.DateTimeFormatterBuilder,2637>, <org.joda.time.format.DateTimeFormatterBuilder,2641>, <org.joda.time.format.DateTimeFormatterBuilder,2642>, <org.joda.time.format.DateTimeFormatterBuilder,2643>, <org.joda.time.format.DateTimeFormatterBuilder,2644>, <org.joda.time.format.DateTimeFormatterBuilder,2645>, <org.joda.time.format.DateTimeFormatterBuilder,2646>, <org.joda.time.format.DateTimeFormatterBuilder,2647>, <org.joda.time.format.DateTimeFormatterBuilder,2649>, <org.joda.time.format.DateTimeFormatterBuilder,2651>, <org.joda.time.format.DateTimeFormatterBuilder,2654>, <org.joda.time.format.DateTimeFormatterBuilder,2660>, <org.joda.time.format.DateTimeFormatterBuilder,2661>, <org.joda.time.format.DateTimeFormatterBuilder,2665>, <org.joda.time.format.DateTimeFormatterBuilder,2667>, <org.joda.time.format.DateTimeFormatterBuilder,2670>, <org.joda.time.format.DateTimeFormatterBuilder,2671>, <org.joda.time.format.DateTimeFormatterBuilder,2672>, <org.joda.time.format.DateTimeFormatterBuilder,2674>, <org.joda.time.format.DateTimeFormatterBuilder,2730>, <org.joda.time.format.DateTimeFormatterBuilder,2747>, <org.joda.time.format.DateTimeFormatterBuilder,2751>, <org.joda.time.format.DateTimeFormatterBuilder,2759>, <org.joda.time.format.DateTimeFormatterBuilder,2760>, <org.joda.time.format.DateTimeFormatterBuilder,2761>, <org.joda.time.format.DateTimeFormatterBuilder,2762>, <org.joda.time.format.DateTimeFormatterBuilder,2763>, <org.joda.time.format.DateTimeFormatterBuilder,2765>, <org.joda.time.format.DateTimeFormatterBuilder,2768>, <org.joda.time.format.DateTimeFormatterBuilder,2769>, <org.joda.time.format.DateTimeFormatterBuilder,2770>, <org.joda.time.format.DateTimeFormatterBuilder,2772>, <org.joda.time.format.DateTimeFormatterBuilder,2775>, <org.joda.time.format.DateTimeFormatterBuilder,2778>, <org.joda.time.format.DateTimeFormatterBuilder,2779>, <org.joda.time.format.DateTimeFormatterBuilder,2780>, <org.joda.time.format.DateTimeFormatterBuilder,2783>, <org.joda.time.format.DateTimeFormatter,137>, <org.joda.time.format.DateTimeFormatter,138>, <org.joda.time.format.DateTimeFormatter,139>, <org.joda.time.format.DateTimeFormatter,140>, <org.joda.time.format.DateTimeFormatter,141>, <org.joda.time.format.DateTimeFormatter,142>, <org.joda.time.format.DateTimeFormatter,143>, <org.joda.time.format.DateTimeFormatter,144>, <org.joda.time.format.DateTimeFormatter,145>, <org.joda.time.format.DateTimeFormatter,146>, <org.joda.time.format.DateTimeFormatter,164>, <org.joda.time.format.DateTimeFormatter,182>, <org.joda.time.format.DateTimeFormatter,310>, <org.joda.time.format.DateTimeFormatter,330>, <org.joda.time.format.DateTimeFormatter,333>, <org.joda.time.format.FormatUtils,31>, <org.joda.time.format.FormatUtils,50>, <org.joda.time.format.FormatUtils,62>, <org.joda.time.format.FormatUtils,63>, <org.joda.time.format.FormatUtils,64>, <org.joda.time.format.FormatUtils,66>, <org.joda.time.format.FormatUtils,67>, <org.joda.time.format.FormatUtils,80>, <org.joda.time.format.FormatUtils,82>, <org.joda.time.format.FormatUtils,83>, <org.joda.time.format.FormatUtils,87>]
======================org.joda.time.DateTimeZone,931
========
if(instantAdjusted-prev<=instant){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-prev<=diff){
return prev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-millis<=diff){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-prev<=prev){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instantAdjusted-prev<=end){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-prev<=diff){
return offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instantAdjusted-prev<=MIN_VALUE){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.BasicGJChronology,190
========
if(isSupported(year)){
dayOfYear++;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getFieldType(year)){
dayOfYear++;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(get(year)){
dayOfYear++;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,year,0,getMaximumValue());
if(isLeapYear(year)){
dayOfYear++;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.base.BaseDateTime,223
org.joda.time.base.BaseDateTime,225
Find no block!
org.joda.time.chrono.ZonedChronology,315
========
int offset=getOffsetToAdd(serialVersionUID);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iJulianField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,get(instant),offset,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iGregorianField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iGregorianChronology.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return serialVersionUID-offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return prev-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return next-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant+(value-get(instant))*serialVersionUID;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
FieldUtils.verifyValueBounds(this,value,getMinimumValue(),getMaximumValue());
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetFromLocal(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant-offset)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case ROUND_CEILING :

int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case ROUND_HALF_CEILING :

int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getMillisOfDay(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(value==serialVersionUID){
return add(instant,i_months);
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
FieldUtils.verifyValueBounds(this,value,getMinimumValue(),getMaximumValueForSet(instant,value));
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getYear(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getWeekyear(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
FieldUtils.verifyValueBounds(this,value,1,offset);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
if(instant>=instant){
return iField.getMaximumValue(instant);
}
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getDivided(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getRemainder(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return yearStart-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return MILLIS_PER_DAY-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instant^offset)>=0){
iZone=DateTimeZone.UTC;
offset=0;
adjustedInstant=instant;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=get(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant+(offset-get(instant))*getUnitMillis();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
FieldUtils.verifyValueBounds(this,value,1,getMaximumValue());
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getDayOfWeek(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return instant;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
checkLimits(instant,null);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkLimits(instant,"resulting");
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.setYear(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
if(offset>offset){
setToWeek=maxOutWeeks;
}
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getWeekOfWeekyear(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value>1){
instant-=((long)DateTimeConstants.MILLIS_PER_WEEK)*(wow-1);
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offset==0){
return instant;
}
int offset=getYear(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=field.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=getMillisOfDay(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return instant;
}
int offset=getMillisOfDay(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return instant;
}
long offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return instant;
}
long offset=getMillisOfDay(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=minuteOfHour().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
iZone=DateTimeUtils.getZone(zone);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return (instant+1)%serialVersionUID+iUnitMillis-1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return iUnitMillis-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
if(offset>(31+28)){
if(isLeapYear(value)){
if(!isLeapYear(offset)){
dayOfYear--;
}
}else {
if(isLeapYear(year)){
dayOfYear++;
}
}
}
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant+=offset;
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return value;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return firstWeekMillis1-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return MILLIS_PER_WEEK-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant<instant){
return getWeeksInYear(value-1);
}
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant>=getFirstWeekOfYearMillis(value+1)){
return 1;
}
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
if(instant<instant){
return iField.getMinimumValue(instant);
}
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().monthOfYear().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().monthOfYear().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().monthOfYear().set(instant,offset);
instant=getChronology().dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().monthOfYear().set(instant,offset);
instant=getChronology().dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return iTimeField?instant:instant-serialVersionUID;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return iTimeField?instant+serialVersionUID:instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant<instant||instant>=serialVersionUID){
return instant;
}
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant<instant||instant>=serialVersionUID){
return instant;
}
return iTimeField?instant:instant-serialVersionUID;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant<instant||instant>=serialVersionUID){
return instant;
}
return iTimeField?instant+serialVersionUID:instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 0
TESTING : time_3
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.joda.time.TestMutablePeriod_Updates::testAdd_RInterval2
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_RP_RI1
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_RI_RP1
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int1
  - org.joda.time.TestInterval_Constructors::testConstructor_RP_RI1
  - org.joda.time.TestInterval_Constructors::testConstructor_RI_RP1
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Gaza
Failing tests: 13
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return millis-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().secondOfMinute().set(instant,offset);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().secondOfMinute().set(instant,offset);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().secondOfMinute().set(instant,offset);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().secondOfMinute().set(instant,offset);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=dayOfMonth().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=hourOfDay().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=minuteOfHour().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=minuteOfHour().set(instant,value);
instant=secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=minuteOfHour().set(instant,value);
instant=secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset!=getZone().getOffset(instant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return this;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value==getValue(offset)){
return this;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,get(instant),value,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instant^offset)>=0){
iZone=DateTimeZone.UTC;
offset=0;
adjustedInstant=instant;
}
int offset=getOffset(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
int offset=getOffset(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.ZonedChronology,316
org.joda.time.chrono.ZonedChronology,317
org.joda.time.chrono.ZonedChronology,341
UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

========
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantUTC^sum)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantUTC^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^sum)<0&&(instantLocal^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instantLocal^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((val1^sum)<0&&(val1^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^serialVersionUID)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((val1^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(val1^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^val2)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^serialVersionUID)>=0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("Specified date does not exist");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return 1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==null){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0||offset==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==Integer.MIN_VALUE){
return subtract(instant,(long)value);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant<sum){
return getWeeksInYear(offset-1);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<0&&sum>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instant<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&sum>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(sum<0&&instant>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(sum<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&instant>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>Long.MIN_VALUE){
return instant-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
return instant;
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==offset){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(serialVersionUID<=sum){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==sum){
return add(instant,i_months);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant<sum){
return iField.getMinimumValue(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.getMaximumValue(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant==0||sum==0){
return this;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return (int)(instant%DateTimeConstants.MILLIS_PER_DAY);
}else {
return (DateTimeConstants.MILLIS_PER_DAY-1)+(int)((instant+1)%DateTimeConstants.MILLIS_PER_DAY);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<sum||instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instant<sum&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant<sum||instant>=serialVersionUID){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<sum&&instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("The offset cannot be zero");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==0){
return DateTimeZone.UTC;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0){
return this;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(serialVersionUID<sum){
return prev;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,0,getMaximumValue());
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+offset);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>Long.MIN_VALUE){
return prev-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.get(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.isLeap(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.getLeapAmount(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return getYear(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,1,sum);
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getYearMonthDayMillis(offset,1,sum);
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant+=offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
instant=getYearMonthDayMillis(offset,1,sum);
instant+=offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return instant%sum;
}else {
return (instant+1)%iUnitMillis+iUnitMillis-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),null,null);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant+sum<instant){
instant=gregorianToJulian(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant-sum>=instant){
instant=julianToGregorian(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
id=printOffset(offset);
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
convId=printOffset(offset);
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(serialVersionUID<-3){
return 7+(int)((daysSince19700101+4)%7);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
daysSince19700101=(instant-(DateTimeConstants.MILLIS_PER_DAY-1))/DateTimeConstants.MILLIS_PER_DAY;
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return (int)((instant/getUnitMillis())%sum);
}else {
return iRange-1+(int)(((instant+1)/getUnitMillis())%iRange);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<sum&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<sum&&(instant^offset)>=0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=offset){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
FieldUtils.verifyValueBounds(this,offset,DateTimeConstants.BCE,DateTimeConstants.CE);
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return instant-instant%instant;
}else {
instant+=1;
return instant-instant%iUnitMillis-iUnitMillis;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
instant+=1;
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>0){
instant-=1;
return instant-instant%instant+iUnitMillis;
}else {
return instant-instant%iUnitMillis;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
instant-=1;
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalInstantException("Illegal instant due to time zone offset transition ("+iZone);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum>=serialVersionUID){
return iTimeField?instant:instant-diff;
}else {
return earlierOrLater?instant+diff:instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum<=serialVersionUID-instant){
return serialVersionUID;
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(serialVersionUID-instant<=sum){
return serialVersionUID;
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalInstantException(serialVersionUID,iZone.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(sum),new IllegalInstantException(serialVersionUID,iZone.getID()).getMessage());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
new IllegalFieldValueException(iField.getType(),Integer.valueOf(sum),new IllegalInstantException(serialVersionUID,iZone.getID()).getMessage()).initCause(new IllegalInstantException(serialVersionUID,iZone.getID()));
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
serialVersionUID=iField.set(localInstant,sum);
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
UNKNOWN ASTNode type : catch (IllegalFieldValueException ex) {
  if (monthOfYear != 2 || dayOfMonth != 29) {
    throw ex;
  }
  instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,28,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
  if (instant >= iCutoverMillis) {
    throw ex;
  }
}

========
int offset=this.iZone.getOffset(instant);
long sum=instantUTC+offset;
if((instantUTC^sum)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instantUTC^sum)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instantUTC+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instantUTC^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+MILLIS_PER_HOUR;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(getOffset(instant)<=sum){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instantLocal^sum)<0&&(instantLocal^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instantLocal^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instantLocal^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==Integer.MIN_VALUE){
iOffset=iZone.getOffset(sum);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=val1+offset;
if((val1^sum)<0&&(val1^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+val2;
if((instant^sum)<0&&(instant^val2)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((val1^sum)<0&&(val1^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=val1+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+val2;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^serialVersionUID)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((val1^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(val1^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^val2)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return sum;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^serialVersionUID)>=0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(serialVersionUID);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instantLocal+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offsetOriginal;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==offset){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetToAdd(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=iField.add(instant+sum,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
instant+=offset;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalInstantException(instant,getZone().getID());
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
instant-=sum;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long sum=instant+offset;
instant-=sum;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,offset,ERA_VALUE,ERA_VALUE);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&instant>serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
serialVersionUID=instant;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(serialVersionUID);
long sum=instant+offset;
if((instant^sum)<0&&instant>serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant<sum){
return getWeeksInYear(offset-1);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return 1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return sum<0?-year:year;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return year;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
id=printOffset(offset);
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
convId=printOffset(offset);
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return (offset>sum||value<1)?getMaximumValue(instant):maxLessOne;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return maxLessOne;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getWeekyear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return value;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0||offset==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.get(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.isLeap(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.getLeapAmount(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum<instant){
return prev;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
FieldUtils.verifyValueBounds(this,sum,1,getMaximumValue());
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(serialVersionUID==0||sum==0){
return this;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>Long.MIN_VALUE){
return instant-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
return instant;
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return (int)((instant-sum)/DateTimeConstants.MILLIS_PER_DAY)+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return yearStart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return MILLIS_PER_DAY;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
sum-=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
FieldUtils.verifyValueBounds(this,offset,1,sum);
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
FieldUtils.verifyValueBounds(this,offset,0,getMaximumValue());
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().addWrapField(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().set(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.get(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().roundFloor(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().roundCeiling(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().roundHalfFloor(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().roundHalfCeiling(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().roundHalfEven(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().remainder(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return iLeapMonth;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(serialVersionUID,"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=super.add(instant,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,get(instant),offset,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+MILLIS_PER_SECOND;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
int sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<0&&sum>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&sum>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum>Long.MIN_VALUE){
return prev-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getWeekOfWeekyear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sum-=2;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return position;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum>23){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
offset++;
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum>23){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
offset++;
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getBase().getDateTimeMillis(instant,offset,offset,offset,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,"resulting");
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(instant,"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(instant,"resulting");
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return prev;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return next;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return iUnitMillis;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,offset,getMinimumValue(),getMaximumValue());
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=offset){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return getYear(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.get(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,offset,getMinimumValue(),getMaximumValueForSet(instant,value));
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,DateTimeConstants.BCE,DateTimeConstants.CE);
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant==null){
return getOffset(DateTimeUtils.currentTimeMillis());
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0){
return DateTimeZone.UTC;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("The offset cannot be zero");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
sum=offset;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset<(iField.getMinimumValue()+offset)){
offset=field.getMinimumValue()+offset;
}else {
iMin=minValue;
}
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getDivided(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0){
return this;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return wrappedValue;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return thisValue;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return instant%serialVersionUID;
}else {
return (instant+1)%iUnitMillis+iUnitMillis-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("Specified date does not exist");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum>=0){
return instant-instant%instant;
}else {
instant+=1;
return instant-instant%iUnitMillis-iUnitMillis;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
instant+=1;
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum>0){
instant-=1;
return instant-instant%instant+iUnitMillis;
}else {
return instant-instant%iUnitMillis;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
instant-=1;
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=~i;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getRemainder(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,offset,offset);
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+floor;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum<=roundCeiling(instant)-instant){
return roundFloor(instant);
}else {
return roundCeiling(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(roundCeiling(instant)-instant<=sum){
return roundCeiling(instant);
}else {
return roundFloor(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getMillisOfDay(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+months;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffset(instant);
int sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
int sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffset(instant);
int sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.get(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==offset){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=ceiling+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant+=getMillisOfDay(instant);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant+=getMillisOfDay(instant);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant+=getMillisOfDay(instant);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
instant+=getMillisOfDay(instant);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant+=getMillisOfDay(instant);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
instant+=getMillisOfDay(instant);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
instant+=getMillisOfDay(instant);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
instant+=getMillisOfDay(instant);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return max;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum>=instant){
return iField.getMaximumValue(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
sum=iField.set(instant,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
if(sum>=instant){
offset=iField.get(iJulianField.add(iCutover,-1));
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==instant){
return add(instant,i_months);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getMillisOfDay(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getMillisOfDay(instant);
long sum=instant+months;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffset(instant);
long sum=instant+months;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getMillisOfDay(instant);
long sum=instant+months;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return min;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum<instant){
return iField.getMinimumValue(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
if(sum<instant){
offset=iField.get(iCutover);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return (int)((instant/getUnitMillis())%offset);
}else {
return iRange-1+(int)(((instant+1)/getUnitMillis())%iRange);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+MILLIS_YEAR_1;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return (int)((sum*CYCLE)+1L);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offset<-59||minutesOffset>59){
throw new IllegalArgumentException("Minutes out of range: "+minutesOffset);
}
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+overlapStart;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<serialVersionUID||instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<serialVersionUID&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return diff;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant<serialVersionUID||instant>=serialVersionUID){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<serialVersionUID||instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<serialVersionUID&&instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<serialVersionUID&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<serialVersionUID&&instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return millis;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),new IllegalInstantException(iZone.convertUTCToLocal(instant),iZone.getID()).getMessage());
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),new IllegalInstantException(iZone.convertUTCToLocal(instant),iZone.getID()).getMessage()).initCause(new IllegalInstantException(iZone.convertUTCToLocal(instant),iZone.getID()));
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
serialVersionUID=iField.set(localInstant,offset);
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return datePart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return timePart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("Specified date does not exist");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalInstantException(instant,getID());
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return (int)(instant%DateTimeConstants.MILLIS_PER_DAY);
}else {
return (DateTimeConstants.MILLIS_PER_DAY-1)+(int)((instant+1)%DateTimeConstants.MILLIS_PER_DAY);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),null,null);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
instant=iField.set(instant,offset);
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum<-3){
return 7+(int)((daysSince19700101+4)%7);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
daysSince19700101=(instant-(DateTimeConstants.MILLIS_PER_DAY-1))/DateTimeConstants.MILLIS_PER_DAY;
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return newInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=periodStart+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&iZone.nextTransition(instant)>sum){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
enclosing.iZone=this.iZone;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
enclosing.iOffset=this.iOffset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
enclosing.iSavedFields=this.iSavedFields;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
enclosing.iSavedFieldsCount=this.iSavedFieldsCount;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=iField.add(instant+sum,serialVersionUID);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetToAdd(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetToAdd(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=iField.add(instant+sum,serialVersionUID);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=iField.add(instant+sum,serialVersionUID);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetToAdd(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=iField.add(instant+sum,serialVersionUID);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=super.add(instant,serialVersionUID);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,get(instant),offset,offset);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,offset),"resulting");
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,offset),"resulting");
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.ZonedChronology,342
org.joda.time.chrono.ZonedChronology,344
org.joda.time.chrono.ZonedChronology,347
org.joda.time.chrono.ZonedChronology,351
UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantUTC^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantUTC^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((val1^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((val1^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^val2)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Timeout!
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy/src/test/java/org/joda/time/TestMutableDateTime_Adds.java

# FAILING TESTS: 1
TIMEOUT : 3000000
===========
locations= [<org.joda.time.DateTimeZone,931>, <org.joda.time.chrono.BasicGJChronology,190>, <org.joda.time.base.BaseDateTime,223>, <org.joda.time.base.BaseDateTime,225>, <org.joda.time.chrono.ZonedChronology,315>, <org.joda.time.chrono.ZonedChronology,316>, <org.joda.time.chrono.ZonedChronology,317>, <org.joda.time.chrono.ZonedChronology,341>, <org.joda.time.chrono.ZonedChronology,342>, <org.joda.time.chrono.ZonedChronology,344>, <org.joda.time.chrono.ZonedChronology,347>, <org.joda.time.chrono.ZonedChronology,351>, <org.joda.time.chrono.ZonedChronology,352>, <org.joda.time.chrono.ZonedChronology,354>, <org.joda.time.chrono.ZonedChronology,357>, <org.joda.time.tz.CachedDateTimeZone,202>, <org.joda.time.format.FormatUtils,68>, <org.joda.time.format.FormatUtils,74>, <org.joda.time.format.FormatUtils,75>, <org.joda.time.format.FormatUtils,77>, <org.joda.time.format.FormatUtils,78>, <org.joda.time.MutableDateTime,351>, <org.joda.time.MutableDateTime,353>, <org.joda.time.MutableDateTime,785>, <org.joda.time.MutableDateTime,786>, <org.joda.time.chrono.BasicChronology,443>, <org.joda.time.field.PreciseDurationDateTimeField,127>, <org.joda.time.field.PreciseDurationDateTimeField,128>, <org.joda.time.DateTimeFieldType,496>, <org.joda.time.DateTimeFieldType,498>, <org.joda.time.DateTimeFieldType,516>, <org.joda.time.DateTimeFieldType,520>, <org.joda.time.DateTimeFieldType,522>, <org.joda.time.chrono.BasicGJChronology,188>, <org.joda.time.chrono.BasicMonthOfYearDateTimeField,73>, <org.joda.time.format.DateTimeFormatterBuilder,153>, <org.joda.time.format.DateTimeFormatterBuilder,154>, <org.joda.time.format.DateTimeFormatterBuilder,155>, <org.joda.time.format.DateTimeFormatterBuilder,217>, <org.joda.time.format.DateTimeFormatterBuilder,220>, <org.joda.time.format.DateTimeFormatterBuilder,257>, <org.joda.time.format.DateTimeFormatterBuilder,258>, <org.joda.time.format.DateTimeFormatterBuilder,305>, <org.joda.time.format.DateTimeFormatterBuilder,308>, <org.joda.time.format.DateTimeFormatterBuilder,311>, <org.joda.time.format.DateTimeFormatterBuilder,312>, <org.joda.time.format.DateTimeFormatterBuilder,319>, <org.joda.time.format.DateTimeFormatterBuilder,321>, <org.joda.time.format.DateTimeFormatterBuilder,322>, <org.joda.time.format.DateTimeFormatterBuilder,326>, <org.joda.time.format.DateTimeFormatterBuilder,328>, <org.joda.time.format.DateTimeFormatterBuilder,345>, <org.joda.time.format.DateTimeFormatterBuilder,346>, <org.joda.time.format.DateTimeFormatterBuilder,347>, <org.joda.time.format.DateTimeFormatterBuilder,357>, <org.joda.time.format.DateTimeFormatterBuilder,360>, <org.joda.time.format.DateTimeFormatterBuilder,383>, <org.joda.time.format.DateTimeFormatterBuilder,384>, <org.joda.time.format.DateTimeFormatterBuilder,385>, <org.joda.time.format.DateTimeFormatterBuilder,386>, <org.joda.time.format.DateTimeFormatterBuilder,397>, <org.joda.time.format.DateTimeFormatterBuilder,408>, <org.joda.time.format.DateTimeFormatterBuilder,411>, <org.joda.time.format.DateTimeFormatterBuilder,417>, <org.joda.time.format.DateTimeFormatterBuilder,434>, <org.joda.time.format.DateTimeFormatterBuilder,437>, <org.joda.time.format.DateTimeFormatterBuilder,440>, <org.joda.time.format.DateTimeFormatterBuilder,443>, <org.joda.time.format.DateTimeFormatterBuilder,444>, <org.joda.time.format.DateTimeFormatterBuilder,446>, <org.joda.time.format.DateTimeFormatterBuilder,464>, <org.joda.time.format.DateTimeFormatterBuilder,467>, <org.joda.time.format.DateTimeFormatterBuilder,470>, <org.joda.time.format.DateTimeFormatterBuilder,486>, <org.joda.time.format.DateTimeFormatterBuilder,489>, <org.joda.time.format.DateTimeFormatterBuilder,492>, <org.joda.time.format.DateTimeFormatterBuilder,495>, <org.joda.time.format.DateTimeFormatterBuilder,498>, <org.joda.time.format.DateTimeFormatterBuilder,570>, <org.joda.time.format.DateTimeFormatterBuilder,573>, <org.joda.time.format.DateTimeFormatterBuilder,576>, <org.joda.time.format.DateTimeFormatterBuilder,579>, <org.joda.time.format.DateTimeFormatterBuilder,597>, <org.joda.time.format.DateTimeFormatterBuilder,614>, <org.joda.time.format.DateTimeFormatterBuilder,631>, <org.joda.time.format.DateTimeFormatterBuilder,685>, <org.joda.time.format.DateTimeFormatterBuilder,705>, <org.joda.time.format.DateTimeFormatterBuilder,725>, <org.joda.time.format.DateTimeFormatterBuilder,765>, <org.joda.time.format.DateTimeFormatterBuilder,775>, <org.joda.time.format.DateTimeFormatterBuilder,785>, <org.joda.time.format.DateTimeFormatterBuilder,795>, <org.joda.time.format.DateTimeFormatterBuilder,807>, <org.joda.time.format.DateTimeFormatterBuilder,817>, <org.joda.time.format.DateTimeFormatterBuilder,829>, <org.joda.time.format.DateTimeFormatterBuilder,1091>, <org.joda.time.format.DateTimeFormatterBuilder,1150>, <org.joda.time.format.DateTimeFormatterBuilder,1155>, <org.joda.time.format.DateTimeFormatterBuilder,1167>, <org.joda.time.format.DateTimeFormatterBuilder,1171>, <org.joda.time.format.DateTimeFormatterBuilder,1177>, <org.joda.time.format.DateTimeFormatterBuilder,1319>, <org.joda.time.format.DateTimeFormatterBuilder,1320>, <org.joda.time.format.DateTimeFormatterBuilder,1321>, <org.joda.time.format.DateTimeFormatterBuilder,1322>, <org.joda.time.format.DateTimeFormatterBuilder,1323>, <org.joda.time.format.DateTimeFormatterBuilder,1326>, <org.joda.time.format.DateTimeFormatterBuilder,1463>, <org.joda.time.format.DateTimeFormatterBuilder,1464>, <org.joda.time.format.DateTimeFormatterBuilder,1465>, <org.joda.time.format.DateTimeFormatterBuilder,1468>, <org.joda.time.format.DateTimeFormatterBuilder,1475>, <org.joda.time.format.DateTimeFormatterBuilder,1476>, <org.joda.time.format.DateTimeFormatterBuilder,1479>, <org.joda.time.format.DateTimeFormatterBuilder,1480>, <org.joda.time.format.DateTimeFormatterBuilder,1207>, <org.joda.time.format.DateTimeFormatterBuilder,1208>, <org.joda.time.format.DateTimeFormatterBuilder,1209>, <org.joda.time.format.DateTimeFormatterBuilder,1212>, <org.joda.time.format.DateTimeFormatterBuilder,1218>, <org.joda.time.format.DateTimeFormatterBuilder,1219>, <org.joda.time.format.DateTimeFormatterBuilder,1236>, <org.joda.time.format.DateTimeFormatterBuilder,2615>, <org.joda.time.format.DateTimeFormatterBuilder,2617>, <org.joda.time.format.DateTimeFormatterBuilder,2618>, <org.joda.time.format.DateTimeFormatterBuilder,2620>, <org.joda.time.format.DateTimeFormatterBuilder,2622>, <org.joda.time.format.DateTimeFormatterBuilder,2623>, <org.joda.time.format.DateTimeFormatterBuilder,2624>, <org.joda.time.format.DateTimeFormatterBuilder,2626>, <org.joda.time.format.DateTimeFormatterBuilder,2627>, <org.joda.time.format.DateTimeFormatterBuilder,2628>, <org.joda.time.format.DateTimeFormatterBuilder,2629>, <org.joda.time.format.DateTimeFormatterBuilder,2630>, <org.joda.time.format.DateTimeFormatterBuilder,2631>, <org.joda.time.format.DateTimeFormatterBuilder,2632>, <org.joda.time.format.DateTimeFormatterBuilder,2634>, <org.joda.time.format.DateTimeFormatterBuilder,2637>, <org.joda.time.format.DateTimeFormatterBuilder,2641>, <org.joda.time.format.DateTimeFormatterBuilder,2642>, <org.joda.time.format.DateTimeFormatterBuilder,2643>, <org.joda.time.format.DateTimeFormatterBuilder,2644>, <org.joda.time.format.DateTimeFormatterBuilder,2645>, <org.joda.time.format.DateTimeFormatterBuilder,2646>, <org.joda.time.format.DateTimeFormatterBuilder,2647>, <org.joda.time.format.DateTimeFormatterBuilder,2649>, <org.joda.time.format.DateTimeFormatterBuilder,2651>, <org.joda.time.format.DateTimeFormatterBuilder,2654>, <org.joda.time.format.DateTimeFormatterBuilder,2660>, <org.joda.time.format.DateTimeFormatterBuilder,2661>, <org.joda.time.format.DateTimeFormatterBuilder,2665>, <org.joda.time.format.DateTimeFormatterBuilder,2667>, <org.joda.time.format.DateTimeFormatterBuilder,2670>, <org.joda.time.format.DateTimeFormatterBuilder,2671>, <org.joda.time.format.DateTimeFormatterBuilder,2672>, <org.joda.time.format.DateTimeFormatterBuilder,2674>, <org.joda.time.format.DateTimeFormatterBuilder,2730>, <org.joda.time.format.DateTimeFormatterBuilder,2747>, <org.joda.time.format.DateTimeFormatterBuilder,2751>, <org.joda.time.format.DateTimeFormatterBuilder,2759>, <org.joda.time.format.DateTimeFormatterBuilder,2760>, <org.joda.time.format.DateTimeFormatterBuilder,2761>, <org.joda.time.format.DateTimeFormatterBuilder,2762>, <org.joda.time.format.DateTimeFormatterBuilder,2763>, <org.joda.time.format.DateTimeFormatterBuilder,2765>, <org.joda.time.format.DateTimeFormatterBuilder,2768>, <org.joda.time.format.DateTimeFormatterBuilder,2769>, <org.joda.time.format.DateTimeFormatterBuilder,2770>, <org.joda.time.format.DateTimeFormatterBuilder,2772>, <org.joda.time.format.DateTimeFormatterBuilder,2775>, <org.joda.time.format.DateTimeFormatterBuilder,2778>, <org.joda.time.format.DateTimeFormatterBuilder,2779>, <org.joda.time.format.DateTimeFormatterBuilder,2780>, <org.joda.time.format.DateTimeFormatterBuilder,2783>, <org.joda.time.format.DateTimeFormatter,137>, <org.joda.time.format.DateTimeFormatter,138>, <org.joda.time.format.DateTimeFormatter,139>, <org.joda.time.format.DateTimeFormatter,140>, <org.joda.time.format.DateTimeFormatter,141>, <org.joda.time.format.DateTimeFormatter,142>, <org.joda.time.format.DateTimeFormatter,143>, <org.joda.time.format.DateTimeFormatter,144>, <org.joda.time.format.DateTimeFormatter,145>, <org.joda.time.format.DateTimeFormatter,146>, <org.joda.time.format.DateTimeFormatter,164>, <org.joda.time.format.DateTimeFormatter,182>, <org.joda.time.format.DateTimeFormatter,310>, <org.joda.time.format.DateTimeFormatter,330>, <org.joda.time.format.DateTimeFormatter,333>, <org.joda.time.format.FormatUtils,31>, <org.joda.time.format.FormatUtils,50>, <org.joda.time.format.FormatUtils,62>, <org.joda.time.format.FormatUtils,63>, <org.joda.time.format.FormatUtils,64>, <org.joda.time.format.FormatUtils,66>, <org.joda.time.format.FormatUtils,67>, <org.joda.time.format.FormatUtils,80>, <org.joda.time.format.FormatUtils,82>, <org.joda.time.format.FormatUtils,83>, <org.joda.time.format.FormatUtils,87>]
======================org.joda.time.DateTimeZone,931
========
if(instantAdjusted-prev<=instant){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-prev<=diff){
return prev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-millis<=diff){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-prev<=prev){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instantAdjusted-prev<=end){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-prev<=diff){
return offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instantAdjusted-prev<=MIN_VALUE){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.BasicGJChronology,190
========
if(isSupported(year)){
dayOfYear++;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getFieldType(year)){
dayOfYear++;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(get(year)){
dayOfYear++;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,year,0,getMaximumValue());
if(isLeapYear(year)){
dayOfYear++;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.base.BaseDateTime,223
org.joda.time.base.BaseDateTime,225
Find no block!
org.joda.time.chrono.ZonedChronology,315
========
int offset=getOffsetToAdd(serialVersionUID);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iJulianField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,get(instant),offset,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iGregorianField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iGregorianChronology.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return serialVersionUID-offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return prev-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return next-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant+(value-get(instant))*serialVersionUID;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
FieldUtils.verifyValueBounds(this,value,getMinimumValue(),getMaximumValue());
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetFromLocal(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant-offset)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case ROUND_CEILING :

int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case ROUND_HALF_CEILING :

int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getMillisOfDay(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(value==serialVersionUID){
return add(instant,i_months);
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
FieldUtils.verifyValueBounds(this,value,getMinimumValue(),getMaximumValueForSet(instant,value));
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getYear(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getWeekyear(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
FieldUtils.verifyValueBounds(this,value,1,offset);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
if(instant>=instant){
return iField.getMaximumValue(instant);
}
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getDivided(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getRemainder(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return yearStart-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return MILLIS_PER_DAY-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instant^offset)>=0){
iZone=DateTimeZone.UTC;
offset=0;
adjustedInstant=instant;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=get(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant+(offset-get(instant))*getUnitMillis();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
FieldUtils.verifyValueBounds(this,value,1,getMaximumValue());
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getDayOfWeek(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return instant;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
checkLimits(instant,null);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkLimits(instant,"resulting");
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.setYear(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
if(offset>offset){
setToWeek=maxOutWeeks;
}
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getWeekOfWeekyear(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value>1){
instant-=((long)DateTimeConstants.MILLIS_PER_WEEK)*(wow-1);
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offset==0){
return instant;
}
int offset=getYear(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=field.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=getMillisOfDay(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return instant;
}
int offset=getMillisOfDay(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return instant;
}
long offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return instant;
}
long offset=getMillisOfDay(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=minuteOfHour().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
iZone=DateTimeUtils.getZone(zone);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return (instant+1)%serialVersionUID+iUnitMillis-1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return iUnitMillis-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
if(offset>(31+28)){
if(isLeapYear(value)){
if(!isLeapYear(offset)){
dayOfYear--;
}
}else {
if(isLeapYear(year)){
dayOfYear++;
}
}
}
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant+=offset;
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return value;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return firstWeekMillis1-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return MILLIS_PER_WEEK-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant<instant){
return getWeeksInYear(value-1);
}
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant>=getFirstWeekOfYearMillis(value+1)){
return 1;
}
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
if(instant<instant){
return iField.getMinimumValue(instant);
}
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().monthOfYear().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().monthOfYear().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().monthOfYear().set(instant,offset);
instant=getChronology().dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().monthOfYear().set(instant,offset);
instant=getChronology().dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return iTimeField?instant:instant-serialVersionUID;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return iTimeField?instant+serialVersionUID:instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant<instant||instant>=serialVersionUID){
return instant;
}
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant<instant||instant>=serialVersionUID){
return instant;
}
return iTimeField?instant:instant-serialVersionUID;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant<instant||instant>=serialVersionUID){
return instant;
}
return iTimeField?instant+serialVersionUID:instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 0
TESTING : time_3
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.joda.time.TestMutablePeriod_Updates::testAdd_RInterval2
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_RP_RI1
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_RI_RP1
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int1
  - org.joda.time.TestInterval_Constructors::testConstructor_RP_RI1
  - org.joda.time.TestInterval_Constructors::testConstructor_RI_RP1
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Gaza
Failing tests: 13
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return millis-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().secondOfMinute().set(instant,offset);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().secondOfMinute().set(instant,offset);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().secondOfMinute().set(instant,offset);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().secondOfMinute().set(instant,offset);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=dayOfMonth().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=hourOfDay().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=minuteOfHour().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=minuteOfHour().set(instant,value);
instant=secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=minuteOfHour().set(instant,value);
instant=secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset!=getZone().getOffset(instant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return this;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value==getValue(offset)){
return this;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,get(instant),value,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instant^offset)>=0){
iZone=DateTimeZone.UTC;
offset=0;
adjustedInstant=instant;
}
int offset=getOffset(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
int offset=getOffset(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.ZonedChronology,316
org.joda.time.chrono.ZonedChronology,317
org.joda.time.chrono.ZonedChronology,341
UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

========
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantUTC^sum)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantUTC^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^sum)<0&&(instantLocal^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instantLocal^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((val1^sum)<0&&(val1^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^serialVersionUID)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((val1^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(val1^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^val2)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^serialVersionUID)>=0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("Specified date does not exist");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return 1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==null){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0||offset==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==Integer.MIN_VALUE){
return subtract(instant,(long)value);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant<sum){
return getWeeksInYear(offset-1);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<0&&sum>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instant<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&sum>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(sum<0&&instant>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(sum<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&instant>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>Long.MIN_VALUE){
return instant-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
return instant;
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==offset){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(serialVersionUID<=sum){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==sum){
return add(instant,i_months);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant<sum){
return iField.getMinimumValue(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.getMaximumValue(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant==0||sum==0){
return this;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return (int)(instant%DateTimeConstants.MILLIS_PER_DAY);
}else {
return (DateTimeConstants.MILLIS_PER_DAY-1)+(int)((instant+1)%DateTimeConstants.MILLIS_PER_DAY);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<sum||instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instant<sum&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant<sum||instant>=serialVersionUID){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<sum&&instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("The offset cannot be zero");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==0){
return DateTimeZone.UTC;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0){
return this;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(serialVersionUID<sum){
return prev;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,0,getMaximumValue());
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+offset);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>Long.MIN_VALUE){
return prev-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.get(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.isLeap(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.getLeapAmount(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return getYear(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,1,sum);
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getYearMonthDayMillis(offset,1,sum);
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant+=offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
instant=getYearMonthDayMillis(offset,1,sum);
instant+=offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return instant%sum;
}else {
return (instant+1)%iUnitMillis+iUnitMillis-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),null,null);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant+sum<instant){
instant=gregorianToJulian(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant-sum>=instant){
instant=julianToGregorian(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
id=printOffset(offset);
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
convId=printOffset(offset);
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(serialVersionUID<-3){
return 7+(int)((daysSince19700101+4)%7);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
daysSince19700101=(instant-(DateTimeConstants.MILLIS_PER_DAY-1))/DateTimeConstants.MILLIS_PER_DAY;
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return (int)((instant/getUnitMillis())%sum);
}else {
return iRange-1+(int)(((instant+1)/getUnitMillis())%iRange);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<sum&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<sum&&(instant^offset)>=0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=offset){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
FieldUtils.verifyValueBounds(this,offset,DateTimeConstants.BCE,DateTimeConstants.CE);
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return instant-instant%instant;
}else {
instant+=1;
return instant-instant%iUnitMillis-iUnitMillis;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
instant+=1;
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>0){
instant-=1;
return instant-instant%instant+iUnitMillis;
}else {
return instant-instant%iUnitMillis;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
instant-=1;
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalInstantException("Illegal instant due to time zone offset transition ("+iZone);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum>=serialVersionUID){
return iTimeField?instant:instant-diff;
}else {
return earlierOrLater?instant+diff:instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum<=serialVersionUID-instant){
return serialVersionUID;
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(serialVersionUID-instant<=sum){
return serialVersionUID;
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalInstantException(serialVersionUID,iZone.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(sum),new IllegalInstantException(serialVersionUID,iZone.getID()).getMessage());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
new IllegalFieldValueException(iField.getType(),Integer.valueOf(sum),new IllegalInstantException(serialVersionUID,iZone.getID()).getMessage()).initCause(new IllegalInstantException(serialVersionUID,iZone.getID()));
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
serialVersionUID=iField.set(localInstant,sum);
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
UNKNOWN ASTNode type : catch (IllegalFieldValueException ex) {
  if (monthOfYear != 2 || dayOfMonth != 29) {
    throw ex;
  }
  instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,28,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
  if (instant >= iCutoverMillis) {
    throw ex;
  }
}

========
int offset=this.iZone.getOffset(instant);
long sum=instantUTC+offset;
if((instantUTC^sum)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instantUTC^sum)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instantUTC+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instantUTC^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+MILLIS_PER_HOUR;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(getOffset(instant)<=sum){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instantLocal^sum)<0&&(instantLocal^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instantLocal^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instantLocal^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==Integer.MIN_VALUE){
iOffset=iZone.getOffset(sum);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=val1+offset;
if((val1^sum)<0&&(val1^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+val2;
if((instant^sum)<0&&(instant^val2)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((val1^sum)<0&&(val1^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=val1+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+val2;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^serialVersionUID)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((val1^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(val1^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^val2)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return sum;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^serialVersionUID)>=0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(serialVersionUID);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instantLocal+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offsetOriginal;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==offset){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetToAdd(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=iField.add(instant+sum,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
instant+=offset;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalInstantException(instant,getZone().getID());
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
instant-=sum;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long sum=instant+offset;
instant-=sum;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,offset,ERA_VALUE,ERA_VALUE);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&instant>serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
serialVersionUID=instant;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(serialVersionUID);
long sum=instant+offset;
if((instant^sum)<0&&instant>serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant<sum){
return getWeeksInYear(offset-1);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return 1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return sum<0?-year:year;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return year;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
id=printOffset(offset);
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
convId=printOffset(offset);
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return (offset>sum||value<1)?getMaximumValue(instant):maxLessOne;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return maxLessOne;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getWeekyear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return value;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0||offset==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.get(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.isLeap(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.getLeapAmount(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum<instant){
return prev;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
FieldUtils.verifyValueBounds(this,sum,1,getMaximumValue());
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(serialVersionUID==0||sum==0){
return this;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>Long.MIN_VALUE){
return instant-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
return instant;
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return (int)((instant-sum)/DateTimeConstants.MILLIS_PER_DAY)+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return yearStart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return MILLIS_PER_DAY;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
sum-=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
FieldUtils.verifyValueBounds(this,offset,1,sum);
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
FieldUtils.verifyValueBounds(this,offset,0,getMaximumValue());
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().addWrapField(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().set(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.get(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().roundFloor(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().roundCeiling(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().roundHalfFloor(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().roundHalfCeiling(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().roundHalfEven(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().remainder(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return iLeapMonth;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(serialVersionUID,"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=super.add(instant,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,get(instant),offset,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+MILLIS_PER_SECOND;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
int sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<0&&sum>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&sum>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum>Long.MIN_VALUE){
return prev-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getWeekOfWeekyear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sum-=2;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return position;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum>23){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
offset++;
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum>23){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
offset++;
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getBase().getDateTimeMillis(instant,offset,offset,offset,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,"resulting");
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(instant,"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(instant,"resulting");
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return prev;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return next;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return iUnitMillis;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,offset,getMinimumValue(),getMaximumValue());
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=offset){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return getYear(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.get(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,offset,getMinimumValue(),getMaximumValueForSet(instant,value));
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,DateTimeConstants.BCE,DateTimeConstants.CE);
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant==null){
return getOffset(DateTimeUtils.currentTimeMillis());
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0){
return DateTimeZone.UTC;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("The offset cannot be zero");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
sum=offset;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset<(iField.getMinimumValue()+offset)){
offset=field.getMinimumValue()+offset;
}else {
iMin=minValue;
}
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getDivided(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0){
return this;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return wrappedValue;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return thisValue;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return instant%serialVersionUID;
}else {
return (instant+1)%iUnitMillis+iUnitMillis-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("Specified date does not exist");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum>=0){
return instant-instant%instant;
}else {
instant+=1;
return instant-instant%iUnitMillis-iUnitMillis;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
instant+=1;
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum>0){
instant-=1;
return instant-instant%instant+iUnitMillis;
}else {
return instant-instant%iUnitMillis;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
instant-=1;
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=~i;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getRemainder(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,offset,offset);
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+floor;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum<=roundCeiling(instant)-instant){
return roundFloor(instant);
}else {
return roundCeiling(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(roundCeiling(instant)-instant<=sum){
return roundCeiling(instant);
}else {
return roundFloor(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getMillisOfDay(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+months;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffset(instant);
int sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
int sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffset(instant);
int sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.get(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==offset){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=ceiling+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant+=getMillisOfDay(instant);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant+=getMillisOfDay(instant);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant+=getMillisOfDay(instant);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
instant+=getMillisOfDay(instant);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant+=getMillisOfDay(instant);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
instant+=getMillisOfDay(instant);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
instant+=getMillisOfDay(instant);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
instant+=getMillisOfDay(instant);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return max;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum>=instant){
return iField.getMaximumValue(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
sum=iField.set(instant,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
if(sum>=instant){
offset=iField.get(iJulianField.add(iCutover,-1));
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==instant){
return add(instant,i_months);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getMillisOfDay(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getMillisOfDay(instant);
long sum=instant+months;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffset(instant);
long sum=instant+months;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getMillisOfDay(instant);
long sum=instant+months;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return min;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum<instant){
return iField.getMinimumValue(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
if(sum<instant){
offset=iField.get(iCutover);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return (int)((instant/getUnitMillis())%offset);
}else {
return iRange-1+(int)(((instant+1)/getUnitMillis())%iRange);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+MILLIS_YEAR_1;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return (int)((sum*CYCLE)+1L);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offset<-59||minutesOffset>59){
throw new IllegalArgumentException("Minutes out of range: "+minutesOffset);
}
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+overlapStart;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<serialVersionUID||instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<serialVersionUID&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return diff;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant<serialVersionUID||instant>=serialVersionUID){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<serialVersionUID||instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<serialVersionUID&&instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<serialVersionUID&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<serialVersionUID&&instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return millis;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),new IllegalInstantException(iZone.convertUTCToLocal(instant),iZone.getID()).getMessage());
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),new IllegalInstantException(iZone.convertUTCToLocal(instant),iZone.getID()).getMessage()).initCause(new IllegalInstantException(iZone.convertUTCToLocal(instant),iZone.getID()));
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
serialVersionUID=iField.set(localInstant,offset);
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return datePart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return timePart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("Specified date does not exist");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalInstantException(instant,getID());
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return (int)(instant%DateTimeConstants.MILLIS_PER_DAY);
}else {
return (DateTimeConstants.MILLIS_PER_DAY-1)+(int)((instant+1)%DateTimeConstants.MILLIS_PER_DAY);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),null,null);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
instant=iField.set(instant,offset);
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum<-3){
return 7+(int)((daysSince19700101+4)%7);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
daysSince19700101=(instant-(DateTimeConstants.MILLIS_PER_DAY-1))/DateTimeConstants.MILLIS_PER_DAY;
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return newInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=periodStart+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&iZone.nextTransition(instant)>sum){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
enclosing.iZone=this.iZone;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
enclosing.iOffset=this.iOffset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
enclosing.iSavedFields=this.iSavedFields;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
enclosing.iSavedFieldsCount=this.iSavedFieldsCount;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=iField.add(instant+sum,serialVersionUID);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetToAdd(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetToAdd(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=iField.add(instant+sum,serialVersionUID);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=iField.add(instant+sum,serialVersionUID);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetToAdd(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=iField.add(instant+sum,serialVersionUID);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=super.add(instant,serialVersionUID);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,get(instant),offset,offset);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,offset),"resulting");
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,offset),"resulting");
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.ZonedChronology,342
org.joda.time.chrono.ZonedChronology,344
org.joda.time.chrono.ZonedChronology,347
org.joda.time.chrono.ZonedChronology,351
UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantUTC^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantUTC^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((val1^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((val1^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^val2)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("Specified date does not exist");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return 1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
UNKNOWN ASTNode type : catch (IllegalFieldValueException ex) {
  if (monthOfYear != 2 || dayOfMonth != 29) {
    throw ex;
  }
  instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,28,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
  if (instant >= iCutoverMillis) {
    throw ex;
  }
}

Timeout!
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy/src/test/java/org/joda/time/TestMutableDateTime_Adds.java

# FAILING TESTS: 1
TIMEOUT : 3000000
===========
locations= [<org.joda.time.DateTimeZone,931>, <org.joda.time.chrono.BasicGJChronology,190>, <org.joda.time.base.BaseDateTime,223>, <org.joda.time.base.BaseDateTime,225>, <org.joda.time.chrono.ZonedChronology,315>, <org.joda.time.chrono.ZonedChronology,316>, <org.joda.time.chrono.ZonedChronology,317>, <org.joda.time.chrono.ZonedChronology,341>, <org.joda.time.chrono.ZonedChronology,342>, <org.joda.time.chrono.ZonedChronology,344>, <org.joda.time.chrono.ZonedChronology,347>, <org.joda.time.chrono.ZonedChronology,351>, <org.joda.time.chrono.ZonedChronology,352>, <org.joda.time.chrono.ZonedChronology,354>, <org.joda.time.chrono.ZonedChronology,357>, <org.joda.time.tz.CachedDateTimeZone,202>, <org.joda.time.format.FormatUtils,68>, <org.joda.time.format.FormatUtils,74>, <org.joda.time.format.FormatUtils,75>, <org.joda.time.format.FormatUtils,77>, <org.joda.time.format.FormatUtils,78>, <org.joda.time.MutableDateTime,351>, <org.joda.time.MutableDateTime,353>, <org.joda.time.MutableDateTime,785>, <org.joda.time.MutableDateTime,786>, <org.joda.time.chrono.BasicChronology,443>, <org.joda.time.field.PreciseDurationDateTimeField,127>, <org.joda.time.field.PreciseDurationDateTimeField,128>, <org.joda.time.DateTimeFieldType,496>, <org.joda.time.DateTimeFieldType,498>, <org.joda.time.DateTimeFieldType,516>, <org.joda.time.DateTimeFieldType,520>, <org.joda.time.DateTimeFieldType,522>, <org.joda.time.chrono.BasicGJChronology,188>, <org.joda.time.chrono.BasicMonthOfYearDateTimeField,73>, <org.joda.time.format.DateTimeFormatterBuilder,153>, <org.joda.time.format.DateTimeFormatterBuilder,154>, <org.joda.time.format.DateTimeFormatterBuilder,155>, <org.joda.time.format.DateTimeFormatterBuilder,217>, <org.joda.time.format.DateTimeFormatterBuilder,220>, <org.joda.time.format.DateTimeFormatterBuilder,257>, <org.joda.time.format.DateTimeFormatterBuilder,258>, <org.joda.time.format.DateTimeFormatterBuilder,305>, <org.joda.time.format.DateTimeFormatterBuilder,308>, <org.joda.time.format.DateTimeFormatterBuilder,311>, <org.joda.time.format.DateTimeFormatterBuilder,312>, <org.joda.time.format.DateTimeFormatterBuilder,319>, <org.joda.time.format.DateTimeFormatterBuilder,321>, <org.joda.time.format.DateTimeFormatterBuilder,322>, <org.joda.time.format.DateTimeFormatterBuilder,326>, <org.joda.time.format.DateTimeFormatterBuilder,328>, <org.joda.time.format.DateTimeFormatterBuilder,345>, <org.joda.time.format.DateTimeFormatterBuilder,346>, <org.joda.time.format.DateTimeFormatterBuilder,347>, <org.joda.time.format.DateTimeFormatterBuilder,357>, <org.joda.time.format.DateTimeFormatterBuilder,360>, <org.joda.time.format.DateTimeFormatterBuilder,383>, <org.joda.time.format.DateTimeFormatterBuilder,384>, <org.joda.time.format.DateTimeFormatterBuilder,385>, <org.joda.time.format.DateTimeFormatterBuilder,386>, <org.joda.time.format.DateTimeFormatterBuilder,397>, <org.joda.time.format.DateTimeFormatterBuilder,408>, <org.joda.time.format.DateTimeFormatterBuilder,411>, <org.joda.time.format.DateTimeFormatterBuilder,417>, <org.joda.time.format.DateTimeFormatterBuilder,434>, <org.joda.time.format.DateTimeFormatterBuilder,437>, <org.joda.time.format.DateTimeFormatterBuilder,440>, <org.joda.time.format.DateTimeFormatterBuilder,443>, <org.joda.time.format.DateTimeFormatterBuilder,444>, <org.joda.time.format.DateTimeFormatterBuilder,446>, <org.joda.time.format.DateTimeFormatterBuilder,464>, <org.joda.time.format.DateTimeFormatterBuilder,467>, <org.joda.time.format.DateTimeFormatterBuilder,470>, <org.joda.time.format.DateTimeFormatterBuilder,486>, <org.joda.time.format.DateTimeFormatterBuilder,489>, <org.joda.time.format.DateTimeFormatterBuilder,492>, <org.joda.time.format.DateTimeFormatterBuilder,495>, <org.joda.time.format.DateTimeFormatterBuilder,498>, <org.joda.time.format.DateTimeFormatterBuilder,570>, <org.joda.time.format.DateTimeFormatterBuilder,573>, <org.joda.time.format.DateTimeFormatterBuilder,576>, <org.joda.time.format.DateTimeFormatterBuilder,579>, <org.joda.time.format.DateTimeFormatterBuilder,597>, <org.joda.time.format.DateTimeFormatterBuilder,614>, <org.joda.time.format.DateTimeFormatterBuilder,631>, <org.joda.time.format.DateTimeFormatterBuilder,685>, <org.joda.time.format.DateTimeFormatterBuilder,705>, <org.joda.time.format.DateTimeFormatterBuilder,725>, <org.joda.time.format.DateTimeFormatterBuilder,765>, <org.joda.time.format.DateTimeFormatterBuilder,775>, <org.joda.time.format.DateTimeFormatterBuilder,785>, <org.joda.time.format.DateTimeFormatterBuilder,795>, <org.joda.time.format.DateTimeFormatterBuilder,807>, <org.joda.time.format.DateTimeFormatterBuilder,817>, <org.joda.time.format.DateTimeFormatterBuilder,829>, <org.joda.time.format.DateTimeFormatterBuilder,1091>, <org.joda.time.format.DateTimeFormatterBuilder,1150>, <org.joda.time.format.DateTimeFormatterBuilder,1155>, <org.joda.time.format.DateTimeFormatterBuilder,1167>, <org.joda.time.format.DateTimeFormatterBuilder,1171>, <org.joda.time.format.DateTimeFormatterBuilder,1177>, <org.joda.time.format.DateTimeFormatterBuilder,1319>, <org.joda.time.format.DateTimeFormatterBuilder,1320>, <org.joda.time.format.DateTimeFormatterBuilder,1321>, <org.joda.time.format.DateTimeFormatterBuilder,1322>, <org.joda.time.format.DateTimeFormatterBuilder,1323>, <org.joda.time.format.DateTimeFormatterBuilder,1326>, <org.joda.time.format.DateTimeFormatterBuilder,1463>, <org.joda.time.format.DateTimeFormatterBuilder,1464>, <org.joda.time.format.DateTimeFormatterBuilder,1465>, <org.joda.time.format.DateTimeFormatterBuilder,1468>, <org.joda.time.format.DateTimeFormatterBuilder,1475>, <org.joda.time.format.DateTimeFormatterBuilder,1476>, <org.joda.time.format.DateTimeFormatterBuilder,1479>, <org.joda.time.format.DateTimeFormatterBuilder,1480>, <org.joda.time.format.DateTimeFormatterBuilder,1207>, <org.joda.time.format.DateTimeFormatterBuilder,1208>, <org.joda.time.format.DateTimeFormatterBuilder,1209>, <org.joda.time.format.DateTimeFormatterBuilder,1212>, <org.joda.time.format.DateTimeFormatterBuilder,1218>, <org.joda.time.format.DateTimeFormatterBuilder,1219>, <org.joda.time.format.DateTimeFormatterBuilder,1236>, <org.joda.time.format.DateTimeFormatterBuilder,2615>, <org.joda.time.format.DateTimeFormatterBuilder,2617>, <org.joda.time.format.DateTimeFormatterBuilder,2618>, <org.joda.time.format.DateTimeFormatterBuilder,2620>, <org.joda.time.format.DateTimeFormatterBuilder,2622>, <org.joda.time.format.DateTimeFormatterBuilder,2623>, <org.joda.time.format.DateTimeFormatterBuilder,2624>, <org.joda.time.format.DateTimeFormatterBuilder,2626>, <org.joda.time.format.DateTimeFormatterBuilder,2627>, <org.joda.time.format.DateTimeFormatterBuilder,2628>, <org.joda.time.format.DateTimeFormatterBuilder,2629>, <org.joda.time.format.DateTimeFormatterBuilder,2630>, <org.joda.time.format.DateTimeFormatterBuilder,2631>, <org.joda.time.format.DateTimeFormatterBuilder,2632>, <org.joda.time.format.DateTimeFormatterBuilder,2634>, <org.joda.time.format.DateTimeFormatterBuilder,2637>, <org.joda.time.format.DateTimeFormatterBuilder,2641>, <org.joda.time.format.DateTimeFormatterBuilder,2642>, <org.joda.time.format.DateTimeFormatterBuilder,2643>, <org.joda.time.format.DateTimeFormatterBuilder,2644>, <org.joda.time.format.DateTimeFormatterBuilder,2645>, <org.joda.time.format.DateTimeFormatterBuilder,2646>, <org.joda.time.format.DateTimeFormatterBuilder,2647>, <org.joda.time.format.DateTimeFormatterBuilder,2649>, <org.joda.time.format.DateTimeFormatterBuilder,2651>, <org.joda.time.format.DateTimeFormatterBuilder,2654>, <org.joda.time.format.DateTimeFormatterBuilder,2660>, <org.joda.time.format.DateTimeFormatterBuilder,2661>, <org.joda.time.format.DateTimeFormatterBuilder,2665>, <org.joda.time.format.DateTimeFormatterBuilder,2667>, <org.joda.time.format.DateTimeFormatterBuilder,2670>, <org.joda.time.format.DateTimeFormatterBuilder,2671>, <org.joda.time.format.DateTimeFormatterBuilder,2672>, <org.joda.time.format.DateTimeFormatterBuilder,2674>, <org.joda.time.format.DateTimeFormatterBuilder,2730>, <org.joda.time.format.DateTimeFormatterBuilder,2747>, <org.joda.time.format.DateTimeFormatterBuilder,2751>, <org.joda.time.format.DateTimeFormatterBuilder,2759>, <org.joda.time.format.DateTimeFormatterBuilder,2760>, <org.joda.time.format.DateTimeFormatterBuilder,2761>, <org.joda.time.format.DateTimeFormatterBuilder,2762>, <org.joda.time.format.DateTimeFormatterBuilder,2763>, <org.joda.time.format.DateTimeFormatterBuilder,2765>, <org.joda.time.format.DateTimeFormatterBuilder,2768>, <org.joda.time.format.DateTimeFormatterBuilder,2769>, <org.joda.time.format.DateTimeFormatterBuilder,2770>, <org.joda.time.format.DateTimeFormatterBuilder,2772>, <org.joda.time.format.DateTimeFormatterBuilder,2775>, <org.joda.time.format.DateTimeFormatterBuilder,2778>, <org.joda.time.format.DateTimeFormatterBuilder,2779>, <org.joda.time.format.DateTimeFormatterBuilder,2780>, <org.joda.time.format.DateTimeFormatterBuilder,2783>, <org.joda.time.format.DateTimeFormatter,137>, <org.joda.time.format.DateTimeFormatter,138>, <org.joda.time.format.DateTimeFormatter,139>, <org.joda.time.format.DateTimeFormatter,140>, <org.joda.time.format.DateTimeFormatter,141>, <org.joda.time.format.DateTimeFormatter,142>, <org.joda.time.format.DateTimeFormatter,143>, <org.joda.time.format.DateTimeFormatter,144>, <org.joda.time.format.DateTimeFormatter,145>, <org.joda.time.format.DateTimeFormatter,146>, <org.joda.time.format.DateTimeFormatter,164>, <org.joda.time.format.DateTimeFormatter,182>, <org.joda.time.format.DateTimeFormatter,310>, <org.joda.time.format.DateTimeFormatter,330>, <org.joda.time.format.DateTimeFormatter,333>, <org.joda.time.format.FormatUtils,31>, <org.joda.time.format.FormatUtils,50>, <org.joda.time.format.FormatUtils,62>, <org.joda.time.format.FormatUtils,63>, <org.joda.time.format.FormatUtils,64>, <org.joda.time.format.FormatUtils,66>, <org.joda.time.format.FormatUtils,67>, <org.joda.time.format.FormatUtils,80>, <org.joda.time.format.FormatUtils,82>, <org.joda.time.format.FormatUtils,83>, <org.joda.time.format.FormatUtils,87>]
======================org.joda.time.DateTimeZone,931
========
if(instantAdjusted-prev<=instant){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-prev<=diff){
return prev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-millis<=diff){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-prev<=prev){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instantAdjusted-prev<=end){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-prev<=diff){
return offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instantAdjusted-prev<=MIN_VALUE){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.BasicGJChronology,190
========
if(isSupported(year)){
dayOfYear++;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getFieldType(year)){
dayOfYear++;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(get(year)){
dayOfYear++;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,year,0,getMaximumValue());
if(isLeapYear(year)){
dayOfYear++;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.base.BaseDateTime,223
org.joda.time.base.BaseDateTime,225
Find no block!
org.joda.time.chrono.ZonedChronology,315
========
int offset=getOffsetToAdd(serialVersionUID);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iJulianField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,get(instant),offset,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iGregorianField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iGregorianChronology.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return serialVersionUID-offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return prev-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return next-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant+(value-get(instant))*serialVersionUID;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
FieldUtils.verifyValueBounds(this,value,getMinimumValue(),getMaximumValue());
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetFromLocal(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant-offset)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case ROUND_CEILING :

int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case ROUND_HALF_CEILING :

int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getMillisOfDay(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(value==serialVersionUID){
return add(instant,i_months);
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
FieldUtils.verifyValueBounds(this,value,getMinimumValue(),getMaximumValueForSet(instant,value));
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getYear(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getWeekyear(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
FieldUtils.verifyValueBounds(this,value,1,offset);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
if(instant>=instant){
return iField.getMaximumValue(instant);
}
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getDivided(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getRemainder(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return yearStart-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return MILLIS_PER_DAY-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instant^offset)>=0){
iZone=DateTimeZone.UTC;
offset=0;
adjustedInstant=instant;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=get(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant+(offset-get(instant))*getUnitMillis();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
FieldUtils.verifyValueBounds(this,value,1,getMaximumValue());
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getDayOfWeek(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return instant;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
checkLimits(instant,null);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkLimits(instant,"resulting");
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.setYear(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
if(offset>offset){
setToWeek=maxOutWeeks;
}
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getWeekOfWeekyear(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value>1){
instant-=((long)DateTimeConstants.MILLIS_PER_WEEK)*(wow-1);
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offset==0){
return instant;
}
int offset=getYear(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=field.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=getMillisOfDay(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return instant;
}
int offset=getMillisOfDay(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return instant;
}
long offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return instant;
}
long offset=getMillisOfDay(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=minuteOfHour().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
iZone=DateTimeUtils.getZone(zone);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return (instant+1)%serialVersionUID+iUnitMillis-1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return iUnitMillis-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
if(offset>(31+28)){
if(isLeapYear(value)){
if(!isLeapYear(offset)){
dayOfYear--;
}
}else {
if(isLeapYear(year)){
dayOfYear++;
}
}
}
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant+=offset;
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return value;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return firstWeekMillis1-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return MILLIS_PER_WEEK-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant<instant){
return getWeeksInYear(value-1);
}
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant>=getFirstWeekOfYearMillis(value+1)){
return 1;
}
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
if(instant<instant){
return iField.getMinimumValue(instant);
}
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().monthOfYear().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().monthOfYear().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().monthOfYear().set(instant,offset);
instant=getChronology().dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().monthOfYear().set(instant,offset);
instant=getChronology().dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return iTimeField?instant:instant-serialVersionUID;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return iTimeField?instant+serialVersionUID:instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant<instant||instant>=serialVersionUID){
return instant;
}
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant<instant||instant>=serialVersionUID){
return instant;
}
return iTimeField?instant:instant-serialVersionUID;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant<instant||instant>=serialVersionUID){
return instant;
}
return iTimeField?instant+serialVersionUID:instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 0
TESTING : time_3
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.joda.time.TestMutablePeriod_Updates::testAdd_RInterval2
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_RP_RI1
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_RI_RP1
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int1
  - org.joda.time.TestInterval_Constructors::testConstructor_RP_RI1
  - org.joda.time.TestInterval_Constructors::testConstructor_RI_RP1
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Gaza
Failing tests: 13
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return millis-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().secondOfMinute().set(instant,offset);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().secondOfMinute().set(instant,offset);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().secondOfMinute().set(instant,offset);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().secondOfMinute().set(instant,offset);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=dayOfMonth().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=hourOfDay().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=minuteOfHour().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=minuteOfHour().set(instant,value);
instant=secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=minuteOfHour().set(instant,value);
instant=secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset!=getZone().getOffset(instant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return this;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value==getValue(offset)){
return this;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,get(instant),value,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instant^offset)>=0){
iZone=DateTimeZone.UTC;
offset=0;
adjustedInstant=instant;
}
int offset=getOffset(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
int offset=getOffset(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.ZonedChronology,316
org.joda.time.chrono.ZonedChronology,317
org.joda.time.chrono.ZonedChronology,341
UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

========
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantUTC^sum)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantUTC^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^sum)<0&&(instantLocal^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instantLocal^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((val1^sum)<0&&(val1^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^serialVersionUID)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((val1^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(val1^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^val2)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^serialVersionUID)>=0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("Specified date does not exist");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return 1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==null){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0||offset==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==Integer.MIN_VALUE){
return subtract(instant,(long)value);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant<sum){
return getWeeksInYear(offset-1);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<0&&sum>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instant<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&sum>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(sum<0&&instant>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(sum<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&instant>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>Long.MIN_VALUE){
return instant-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
return instant;
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==offset){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(serialVersionUID<=sum){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==sum){
return add(instant,i_months);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant<sum){
return iField.getMinimumValue(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.getMaximumValue(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant==0||sum==0){
return this;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return (int)(instant%DateTimeConstants.MILLIS_PER_DAY);
}else {
return (DateTimeConstants.MILLIS_PER_DAY-1)+(int)((instant+1)%DateTimeConstants.MILLIS_PER_DAY);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<sum||instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instant<sum&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant<sum||instant>=serialVersionUID){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<sum&&instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("The offset cannot be zero");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==0){
return DateTimeZone.UTC;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0){
return this;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(serialVersionUID<sum){
return prev;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,0,getMaximumValue());
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+offset);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>Long.MIN_VALUE){
return prev-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.get(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.isLeap(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.getLeapAmount(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return getYear(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,1,sum);
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getYearMonthDayMillis(offset,1,sum);
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant+=offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
instant=getYearMonthDayMillis(offset,1,sum);
instant+=offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return instant%sum;
}else {
return (instant+1)%iUnitMillis+iUnitMillis-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),null,null);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant+sum<instant){
instant=gregorianToJulian(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant-sum>=instant){
instant=julianToGregorian(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
id=printOffset(offset);
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
convId=printOffset(offset);
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(serialVersionUID<-3){
return 7+(int)((daysSince19700101+4)%7);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
daysSince19700101=(instant-(DateTimeConstants.MILLIS_PER_DAY-1))/DateTimeConstants.MILLIS_PER_DAY;
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return (int)((instant/getUnitMillis())%sum);
}else {
return iRange-1+(int)(((instant+1)/getUnitMillis())%iRange);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<sum&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<sum&&(instant^offset)>=0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=offset){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
FieldUtils.verifyValueBounds(this,offset,DateTimeConstants.BCE,DateTimeConstants.CE);
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return instant-instant%instant;
}else {
instant+=1;
return instant-instant%iUnitMillis-iUnitMillis;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
instant+=1;
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>0){
instant-=1;
return instant-instant%instant+iUnitMillis;
}else {
return instant-instant%iUnitMillis;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
instant-=1;
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalInstantException("Illegal instant due to time zone offset transition ("+iZone);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum>=serialVersionUID){
return iTimeField?instant:instant-diff;
}else {
return earlierOrLater?instant+diff:instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum<=serialVersionUID-instant){
return serialVersionUID;
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(serialVersionUID-instant<=sum){
return serialVersionUID;
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalInstantException(serialVersionUID,iZone.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(sum),new IllegalInstantException(serialVersionUID,iZone.getID()).getMessage());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
new IllegalFieldValueException(iField.getType(),Integer.valueOf(sum),new IllegalInstantException(serialVersionUID,iZone.getID()).getMessage()).initCause(new IllegalInstantException(serialVersionUID,iZone.getID()));
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
serialVersionUID=iField.set(localInstant,sum);
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
UNKNOWN ASTNode type : catch (IllegalFieldValueException ex) {
  if (monthOfYear != 2 || dayOfMonth != 29) {
    throw ex;
  }
  instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,28,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
  if (instant >= iCutoverMillis) {
    throw ex;
  }
}

========
int offset=this.iZone.getOffset(instant);
long sum=instantUTC+offset;
if((instantUTC^sum)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instantUTC^sum)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instantUTC+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instantUTC^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+MILLIS_PER_HOUR;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(getOffset(instant)<=sum){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instantLocal^sum)<0&&(instantLocal^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instantLocal^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instantLocal^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==Integer.MIN_VALUE){
iOffset=iZone.getOffset(sum);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=val1+offset;
if((val1^sum)<0&&(val1^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+val2;
if((instant^sum)<0&&(instant^val2)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((val1^sum)<0&&(val1^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=val1+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+val2;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^serialVersionUID)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((val1^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(val1^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^val2)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return sum;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^serialVersionUID)>=0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(serialVersionUID);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instantLocal+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offsetOriginal;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==offset){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetToAdd(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=iField.add(instant+sum,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
instant+=offset;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalInstantException(instant,getZone().getID());
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
instant-=sum;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long sum=instant+offset;
instant-=sum;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,offset,ERA_VALUE,ERA_VALUE);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&instant>serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
serialVersionUID=instant;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(serialVersionUID);
long sum=instant+offset;
if((instant^sum)<0&&instant>serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant<sum){
return getWeeksInYear(offset-1);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return 1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return sum<0?-year:year;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return year;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
id=printOffset(offset);
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
convId=printOffset(offset);
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return (offset>sum||value<1)?getMaximumValue(instant):maxLessOne;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return maxLessOne;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getWeekyear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return value;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0||offset==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.get(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.isLeap(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.getLeapAmount(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum<instant){
return prev;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
FieldUtils.verifyValueBounds(this,sum,1,getMaximumValue());
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(serialVersionUID==0||sum==0){
return this;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>Long.MIN_VALUE){
return instant-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
return instant;
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return (int)((instant-sum)/DateTimeConstants.MILLIS_PER_DAY)+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return yearStart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return MILLIS_PER_DAY;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
sum-=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
FieldUtils.verifyValueBounds(this,offset,1,sum);
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
FieldUtils.verifyValueBounds(this,offset,0,getMaximumValue());
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().addWrapField(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().set(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.get(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().roundFloor(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().roundCeiling(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().roundHalfFloor(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().roundHalfCeiling(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().roundHalfEven(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().remainder(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return iLeapMonth;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(serialVersionUID,"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=super.add(instant,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,get(instant),offset,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+MILLIS_PER_SECOND;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
int sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<0&&sum>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&sum>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum>Long.MIN_VALUE){
return prev-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getWeekOfWeekyear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sum-=2;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return position;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum>23){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
offset++;
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum>23){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
offset++;
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getBase().getDateTimeMillis(instant,offset,offset,offset,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,"resulting");
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(instant,"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(instant,"resulting");
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return prev;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return next;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return iUnitMillis;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,offset,getMinimumValue(),getMaximumValue());
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=offset){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return getYear(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.get(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,offset,getMinimumValue(),getMaximumValueForSet(instant,value));
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,DateTimeConstants.BCE,DateTimeConstants.CE);
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant==null){
return getOffset(DateTimeUtils.currentTimeMillis());
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0){
return DateTimeZone.UTC;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("The offset cannot be zero");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
sum=offset;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset<(iField.getMinimumValue()+offset)){
offset=field.getMinimumValue()+offset;
}else {
iMin=minValue;
}
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getDivided(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0){
return this;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return wrappedValue;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return thisValue;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return instant%serialVersionUID;
}else {
return (instant+1)%iUnitMillis+iUnitMillis-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("Specified date does not exist");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum>=0){
return instant-instant%instant;
}else {
instant+=1;
return instant-instant%iUnitMillis-iUnitMillis;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
instant+=1;
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum>0){
instant-=1;
return instant-instant%instant+iUnitMillis;
}else {
return instant-instant%iUnitMillis;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
instant-=1;
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=~i;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getRemainder(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,offset,offset);
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+floor;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum<=roundCeiling(instant)-instant){
return roundFloor(instant);
}else {
return roundCeiling(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(roundCeiling(instant)-instant<=sum){
return roundCeiling(instant);
}else {
return roundFloor(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getMillisOfDay(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+months;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffset(instant);
int sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
int sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffset(instant);
int sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.get(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==offset){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=ceiling+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant+=getMillisOfDay(instant);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant+=getMillisOfDay(instant);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant+=getMillisOfDay(instant);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
instant+=getMillisOfDay(instant);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant+=getMillisOfDay(instant);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
instant+=getMillisOfDay(instant);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
instant+=getMillisOfDay(instant);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
instant+=getMillisOfDay(instant);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return max;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum>=instant){
return iField.getMaximumValue(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
sum=iField.set(instant,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
if(sum>=instant){
offset=iField.get(iJulianField.add(iCutover,-1));
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==instant){
return add(instant,i_months);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getMillisOfDay(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getMillisOfDay(instant);
long sum=instant+months;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffset(instant);
long sum=instant+months;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getMillisOfDay(instant);
long sum=instant+months;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return min;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum<instant){
return iField.getMinimumValue(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
if(sum<instant){
offset=iField.get(iCutover);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return (int)((instant/getUnitMillis())%offset);
}else {
return iRange-1+(int)(((instant+1)/getUnitMillis())%iRange);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+MILLIS_YEAR_1;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return (int)((sum*CYCLE)+1L);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offset<-59||minutesOffset>59){
throw new IllegalArgumentException("Minutes out of range: "+minutesOffset);
}
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+overlapStart;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<serialVersionUID||instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<serialVersionUID&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return diff;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant<serialVersionUID||instant>=serialVersionUID){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<serialVersionUID||instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<serialVersionUID&&instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<serialVersionUID&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<serialVersionUID&&instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return millis;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),new IllegalInstantException(iZone.convertUTCToLocal(instant),iZone.getID()).getMessage());
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),new IllegalInstantException(iZone.convertUTCToLocal(instant),iZone.getID()).getMessage()).initCause(new IllegalInstantException(iZone.convertUTCToLocal(instant),iZone.getID()));
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
serialVersionUID=iField.set(localInstant,offset);
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return datePart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return timePart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("Specified date does not exist");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalInstantException(instant,getID());
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return (int)(instant%DateTimeConstants.MILLIS_PER_DAY);
}else {
return (DateTimeConstants.MILLIS_PER_DAY-1)+(int)((instant+1)%DateTimeConstants.MILLIS_PER_DAY);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),null,null);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
instant=iField.set(instant,offset);
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum<-3){
return 7+(int)((daysSince19700101+4)%7);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
daysSince19700101=(instant-(DateTimeConstants.MILLIS_PER_DAY-1))/DateTimeConstants.MILLIS_PER_DAY;
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return newInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=periodStart+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&iZone.nextTransition(instant)>sum){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
enclosing.iZone=this.iZone;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
enclosing.iOffset=this.iOffset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
enclosing.iSavedFields=this.iSavedFields;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
enclosing.iSavedFieldsCount=this.iSavedFieldsCount;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=iField.add(instant+sum,serialVersionUID);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetToAdd(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetToAdd(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=iField.add(instant+sum,serialVersionUID);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=iField.add(instant+sum,serialVersionUID);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetToAdd(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=iField.add(instant+sum,serialVersionUID);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=super.add(instant,serialVersionUID);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,get(instant),offset,offset);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,offset),"resulting");
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,offset),"resulting");
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.ZonedChronology,342
org.joda.time.chrono.ZonedChronology,344
org.joda.time.chrono.ZonedChronology,347
org.joda.time.chrono.ZonedChronology,351
UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantUTC^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantUTC^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((val1^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((val1^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^val2)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("Specified date does not exist");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return 1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==null){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0||offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==Integer.MIN_VALUE){
return subtract(instant,(long)value);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff){
return getWeeksInYear(offset-1);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&diff<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&instant<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instant<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(diff<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>Long.MIN_VALUE){
return instant-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
return instant;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==offset){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<=diff){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset==diff){
return add(instant,i_months);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff){
return iField.getMinimumValue(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.getMaximumValue(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant==0||diff==0){
return this;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return (int)(instant%DateTimeConstants.MILLIS_PER_DAY);
}else {
return (DateTimeConstants.MILLIS_PER_DAY-1)+(int)((instant+1)%DateTimeConstants.MILLIS_PER_DAY);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff||instant>=serialVersionUID){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("The offset cannot be zero");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset==0){
return DateTimeZone.UTC;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0){
return this;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<diff){
return prev;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,0,getMaximumValue());
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&offset<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+offset);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&offset<0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+offset);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>Long.MIN_VALUE){
return prev-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.get(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.isLeap(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.getLeapAmount(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return getYear(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff>=serialVersionUID){
return iTimeField?instant:instant-diff;
}else {
return earlierOrLater?instant+diff:instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,1,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getYearMonthDayMillis(offset,1,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant+=offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
instant=getYearMonthDayMillis(offset,1,diff);
instant+=offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return instant%diff;
}else {
return (instant+1)%iUnitMillis+iUnitMillis-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),null,null);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant+diff<instant){
instant=gregorianToJulian(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant-diff>=instant){
instant=julianToGregorian(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
id=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
convId=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<-3){
return 7+(int)((daysSince19700101+4)%7);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
daysSince19700101=(instant-(DateTimeConstants.MILLIS_PER_DAY-1))/DateTimeConstants.MILLIS_PER_DAY;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Timeout!
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy/src/test/java/org/joda/time/TestMutableDateTime_Adds.java

# FAILING TESTS: 1
TIMEOUT : 3000000
===========
locations= [<org.joda.time.DateTimeZone,931>, <org.joda.time.chrono.BasicGJChronology,190>, <org.joda.time.base.BaseDateTime,223>, <org.joda.time.base.BaseDateTime,225>, <org.joda.time.chrono.ZonedChronology,315>, <org.joda.time.chrono.ZonedChronology,316>, <org.joda.time.chrono.ZonedChronology,317>, <org.joda.time.chrono.ZonedChronology,341>, <org.joda.time.chrono.ZonedChronology,342>, <org.joda.time.chrono.ZonedChronology,344>, <org.joda.time.chrono.ZonedChronology,347>, <org.joda.time.chrono.ZonedChronology,351>, <org.joda.time.chrono.ZonedChronology,352>, <org.joda.time.chrono.ZonedChronology,354>, <org.joda.time.chrono.ZonedChronology,357>, <org.joda.time.tz.CachedDateTimeZone,202>, <org.joda.time.format.FormatUtils,68>, <org.joda.time.format.FormatUtils,74>, <org.joda.time.format.FormatUtils,75>, <org.joda.time.format.FormatUtils,77>, <org.joda.time.format.FormatUtils,78>, <org.joda.time.MutableDateTime,351>, <org.joda.time.MutableDateTime,353>, <org.joda.time.MutableDateTime,785>, <org.joda.time.MutableDateTime,786>, <org.joda.time.chrono.BasicChronology,443>, <org.joda.time.field.PreciseDurationDateTimeField,127>, <org.joda.time.field.PreciseDurationDateTimeField,128>, <org.joda.time.DateTimeFieldType,496>, <org.joda.time.DateTimeFieldType,498>, <org.joda.time.DateTimeFieldType,516>, <org.joda.time.DateTimeFieldType,520>, <org.joda.time.DateTimeFieldType,522>, <org.joda.time.chrono.BasicGJChronology,188>, <org.joda.time.chrono.BasicMonthOfYearDateTimeField,73>, <org.joda.time.format.DateTimeFormatterBuilder,153>, <org.joda.time.format.DateTimeFormatterBuilder,154>, <org.joda.time.format.DateTimeFormatterBuilder,155>, <org.joda.time.format.DateTimeFormatterBuilder,217>, <org.joda.time.format.DateTimeFormatterBuilder,220>, <org.joda.time.format.DateTimeFormatterBuilder,257>, <org.joda.time.format.DateTimeFormatterBuilder,258>, <org.joda.time.format.DateTimeFormatterBuilder,305>, <org.joda.time.format.DateTimeFormatterBuilder,308>, <org.joda.time.format.DateTimeFormatterBuilder,311>, <org.joda.time.format.DateTimeFormatterBuilder,312>, <org.joda.time.format.DateTimeFormatterBuilder,319>, <org.joda.time.format.DateTimeFormatterBuilder,321>, <org.joda.time.format.DateTimeFormatterBuilder,322>, <org.joda.time.format.DateTimeFormatterBuilder,326>, <org.joda.time.format.DateTimeFormatterBuilder,328>, <org.joda.time.format.DateTimeFormatterBuilder,345>, <org.joda.time.format.DateTimeFormatterBuilder,346>, <org.joda.time.format.DateTimeFormatterBuilder,347>, <org.joda.time.format.DateTimeFormatterBuilder,357>, <org.joda.time.format.DateTimeFormatterBuilder,360>, <org.joda.time.format.DateTimeFormatterBuilder,383>, <org.joda.time.format.DateTimeFormatterBuilder,384>, <org.joda.time.format.DateTimeFormatterBuilder,385>, <org.joda.time.format.DateTimeFormatterBuilder,386>, <org.joda.time.format.DateTimeFormatterBuilder,397>, <org.joda.time.format.DateTimeFormatterBuilder,408>, <org.joda.time.format.DateTimeFormatterBuilder,411>, <org.joda.time.format.DateTimeFormatterBuilder,417>, <org.joda.time.format.DateTimeFormatterBuilder,434>, <org.joda.time.format.DateTimeFormatterBuilder,437>, <org.joda.time.format.DateTimeFormatterBuilder,440>, <org.joda.time.format.DateTimeFormatterBuilder,443>, <org.joda.time.format.DateTimeFormatterBuilder,444>, <org.joda.time.format.DateTimeFormatterBuilder,446>, <org.joda.time.format.DateTimeFormatterBuilder,464>, <org.joda.time.format.DateTimeFormatterBuilder,467>, <org.joda.time.format.DateTimeFormatterBuilder,470>, <org.joda.time.format.DateTimeFormatterBuilder,486>, <org.joda.time.format.DateTimeFormatterBuilder,489>, <org.joda.time.format.DateTimeFormatterBuilder,492>, <org.joda.time.format.DateTimeFormatterBuilder,495>, <org.joda.time.format.DateTimeFormatterBuilder,498>, <org.joda.time.format.DateTimeFormatterBuilder,570>, <org.joda.time.format.DateTimeFormatterBuilder,573>, <org.joda.time.format.DateTimeFormatterBuilder,576>, <org.joda.time.format.DateTimeFormatterBuilder,579>, <org.joda.time.format.DateTimeFormatterBuilder,597>, <org.joda.time.format.DateTimeFormatterBuilder,614>, <org.joda.time.format.DateTimeFormatterBuilder,631>, <org.joda.time.format.DateTimeFormatterBuilder,685>, <org.joda.time.format.DateTimeFormatterBuilder,705>, <org.joda.time.format.DateTimeFormatterBuilder,725>, <org.joda.time.format.DateTimeFormatterBuilder,765>, <org.joda.time.format.DateTimeFormatterBuilder,775>, <org.joda.time.format.DateTimeFormatterBuilder,785>, <org.joda.time.format.DateTimeFormatterBuilder,795>, <org.joda.time.format.DateTimeFormatterBuilder,807>, <org.joda.time.format.DateTimeFormatterBuilder,817>, <org.joda.time.format.DateTimeFormatterBuilder,829>, <org.joda.time.format.DateTimeFormatterBuilder,1091>, <org.joda.time.format.DateTimeFormatterBuilder,1150>, <org.joda.time.format.DateTimeFormatterBuilder,1155>, <org.joda.time.format.DateTimeFormatterBuilder,1167>, <org.joda.time.format.DateTimeFormatterBuilder,1171>, <org.joda.time.format.DateTimeFormatterBuilder,1177>, <org.joda.time.format.DateTimeFormatterBuilder,1319>, <org.joda.time.format.DateTimeFormatterBuilder,1320>, <org.joda.time.format.DateTimeFormatterBuilder,1321>, <org.joda.time.format.DateTimeFormatterBuilder,1322>, <org.joda.time.format.DateTimeFormatterBuilder,1323>, <org.joda.time.format.DateTimeFormatterBuilder,1326>, <org.joda.time.format.DateTimeFormatterBuilder,1463>, <org.joda.time.format.DateTimeFormatterBuilder,1464>, <org.joda.time.format.DateTimeFormatterBuilder,1465>, <org.joda.time.format.DateTimeFormatterBuilder,1468>, <org.joda.time.format.DateTimeFormatterBuilder,1475>, <org.joda.time.format.DateTimeFormatterBuilder,1476>, <org.joda.time.format.DateTimeFormatterBuilder,1479>, <org.joda.time.format.DateTimeFormatterBuilder,1480>, <org.joda.time.format.DateTimeFormatterBuilder,1207>, <org.joda.time.format.DateTimeFormatterBuilder,1208>, <org.joda.time.format.DateTimeFormatterBuilder,1209>, <org.joda.time.format.DateTimeFormatterBuilder,1212>, <org.joda.time.format.DateTimeFormatterBuilder,1218>, <org.joda.time.format.DateTimeFormatterBuilder,1219>, <org.joda.time.format.DateTimeFormatterBuilder,1236>, <org.joda.time.format.DateTimeFormatterBuilder,2615>, <org.joda.time.format.DateTimeFormatterBuilder,2617>, <org.joda.time.format.DateTimeFormatterBuilder,2618>, <org.joda.time.format.DateTimeFormatterBuilder,2620>, <org.joda.time.format.DateTimeFormatterBuilder,2622>, <org.joda.time.format.DateTimeFormatterBuilder,2623>, <org.joda.time.format.DateTimeFormatterBuilder,2624>, <org.joda.time.format.DateTimeFormatterBuilder,2626>, <org.joda.time.format.DateTimeFormatterBuilder,2627>, <org.joda.time.format.DateTimeFormatterBuilder,2628>, <org.joda.time.format.DateTimeFormatterBuilder,2629>, <org.joda.time.format.DateTimeFormatterBuilder,2630>, <org.joda.time.format.DateTimeFormatterBuilder,2631>, <org.joda.time.format.DateTimeFormatterBuilder,2632>, <org.joda.time.format.DateTimeFormatterBuilder,2634>, <org.joda.time.format.DateTimeFormatterBuilder,2637>, <org.joda.time.format.DateTimeFormatterBuilder,2641>, <org.joda.time.format.DateTimeFormatterBuilder,2642>, <org.joda.time.format.DateTimeFormatterBuilder,2643>, <org.joda.time.format.DateTimeFormatterBuilder,2644>, <org.joda.time.format.DateTimeFormatterBuilder,2645>, <org.joda.time.format.DateTimeFormatterBuilder,2646>, <org.joda.time.format.DateTimeFormatterBuilder,2647>, <org.joda.time.format.DateTimeFormatterBuilder,2649>, <org.joda.time.format.DateTimeFormatterBuilder,2651>, <org.joda.time.format.DateTimeFormatterBuilder,2654>, <org.joda.time.format.DateTimeFormatterBuilder,2660>, <org.joda.time.format.DateTimeFormatterBuilder,2661>, <org.joda.time.format.DateTimeFormatterBuilder,2665>, <org.joda.time.format.DateTimeFormatterBuilder,2667>, <org.joda.time.format.DateTimeFormatterBuilder,2670>, <org.joda.time.format.DateTimeFormatterBuilder,2671>, <org.joda.time.format.DateTimeFormatterBuilder,2672>, <org.joda.time.format.DateTimeFormatterBuilder,2674>, <org.joda.time.format.DateTimeFormatterBuilder,2730>, <org.joda.time.format.DateTimeFormatterBuilder,2747>, <org.joda.time.format.DateTimeFormatterBuilder,2751>, <org.joda.time.format.DateTimeFormatterBuilder,2759>, <org.joda.time.format.DateTimeFormatterBuilder,2760>, <org.joda.time.format.DateTimeFormatterBuilder,2761>, <org.joda.time.format.DateTimeFormatterBuilder,2762>, <org.joda.time.format.DateTimeFormatterBuilder,2763>, <org.joda.time.format.DateTimeFormatterBuilder,2765>, <org.joda.time.format.DateTimeFormatterBuilder,2768>, <org.joda.time.format.DateTimeFormatterBuilder,2769>, <org.joda.time.format.DateTimeFormatterBuilder,2770>, <org.joda.time.format.DateTimeFormatterBuilder,2772>, <org.joda.time.format.DateTimeFormatterBuilder,2775>, <org.joda.time.format.DateTimeFormatterBuilder,2778>, <org.joda.time.format.DateTimeFormatterBuilder,2779>, <org.joda.time.format.DateTimeFormatterBuilder,2780>, <org.joda.time.format.DateTimeFormatterBuilder,2783>, <org.joda.time.format.DateTimeFormatter,137>, <org.joda.time.format.DateTimeFormatter,138>, <org.joda.time.format.DateTimeFormatter,139>, <org.joda.time.format.DateTimeFormatter,140>, <org.joda.time.format.DateTimeFormatter,141>, <org.joda.time.format.DateTimeFormatter,142>, <org.joda.time.format.DateTimeFormatter,143>, <org.joda.time.format.DateTimeFormatter,144>, <org.joda.time.format.DateTimeFormatter,145>, <org.joda.time.format.DateTimeFormatter,146>, <org.joda.time.format.DateTimeFormatter,164>, <org.joda.time.format.DateTimeFormatter,182>, <org.joda.time.format.DateTimeFormatter,310>, <org.joda.time.format.DateTimeFormatter,330>, <org.joda.time.format.DateTimeFormatter,333>, <org.joda.time.format.FormatUtils,31>, <org.joda.time.format.FormatUtils,50>, <org.joda.time.format.FormatUtils,62>, <org.joda.time.format.FormatUtils,63>, <org.joda.time.format.FormatUtils,64>, <org.joda.time.format.FormatUtils,66>, <org.joda.time.format.FormatUtils,67>, <org.joda.time.format.FormatUtils,80>, <org.joda.time.format.FormatUtils,82>, <org.joda.time.format.FormatUtils,83>, <org.joda.time.format.FormatUtils,87>]
======================org.joda.time.DateTimeZone,931
========
if(instantAdjusted-prev<=instant){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-prev<=diff){
return prev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-millis<=diff){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-prev<=prev){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instantAdjusted-prev<=end){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantAdjusted-prev<=diff){
return offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instantAdjusted-prev<=MIN_VALUE){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.BasicGJChronology,190
========
if(isSupported(year)){
dayOfYear++;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getFieldType(year)){
dayOfYear++;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(get(year)){
dayOfYear++;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,year,0,getMaximumValue());
if(isLeapYear(year)){
dayOfYear++;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.base.BaseDateTime,223
org.joda.time.base.BaseDateTime,225
Find no block!
org.joda.time.chrono.ZonedChronology,315
========
int offset=getOffsetToAdd(serialVersionUID);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iJulianField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,get(instant),offset,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iGregorianField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iGregorianChronology.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return serialVersionUID-offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return prev-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return next-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant+(value-get(instant))*serialVersionUID;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
FieldUtils.verifyValueBounds(this,value,getMinimumValue(),getMaximumValue());
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffset(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetFromLocal(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant-offset)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case ROUND_CEILING :

int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case ROUND_HALF_CEILING :

int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getMillisOfDay(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(value==serialVersionUID){
return add(instant,i_months);
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
FieldUtils.verifyValueBounds(this,value,getMinimumValue(),getMaximumValueForSet(instant,value));
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getYear(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getWeekyear(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
FieldUtils.verifyValueBounds(this,value,1,offset);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
if(instant>=instant){
return iField.getMaximumValue(instant);
}
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getDivided(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getRemainder(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return yearStart-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return MILLIS_PER_DAY-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instant^offset)>=0){
iZone=DateTimeZone.UTC;
offset=0;
adjustedInstant=instant;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=get(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant+(offset-get(instant))*getUnitMillis();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
FieldUtils.verifyValueBounds(this,value,1,getMaximumValue());
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getDayOfWeek(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return instant;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
checkLimits(instant,null);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkLimits(instant,"resulting");
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.setYear(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
if(offset>offset){
setToWeek=maxOutWeeks;
}
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getWeekOfWeekyear(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value>1){
instant-=((long)DateTimeConstants.MILLIS_PER_WEEK)*(wow-1);
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offset==0){
return instant;
}
int offset=getYear(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=field.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=getMillisOfDay(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return instant;
}
int offset=getMillisOfDay(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return instant;
}
long offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return instant;
}
long offset=getMillisOfDay(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=minuteOfHour().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
iZone=DateTimeUtils.getZone(zone);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return (instant+1)%serialVersionUID+iUnitMillis-1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return iUnitMillis-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
if(offset>(31+28)){
if(isLeapYear(value)){
if(!isLeapYear(offset)){
dayOfYear--;
}
}else {
if(isLeapYear(year)){
dayOfYear++;
}
}
}
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant+=offset;
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return value;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return firstWeekMillis1-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return MILLIS_PER_WEEK-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant<instant){
return getWeeksInYear(value-1);
}
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant>=getFirstWeekOfYearMillis(value+1)){
return 1;
}
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
if(instant<instant){
return iField.getMinimumValue(instant);
}
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().monthOfYear().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().monthOfYear().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().monthOfYear().set(instant,offset);
instant=getChronology().dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().monthOfYear().set(instant,offset);
instant=getChronology().dayOfMonth().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return iTimeField?instant:instant-serialVersionUID;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return iTimeField?instant+serialVersionUID:instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant<instant||instant>=serialVersionUID){
return instant;
}
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant<instant||instant>=serialVersionUID){
return instant;
}
return iTimeField?instant:instant-serialVersionUID;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
if(instant<instant||instant>=serialVersionUID){
return instant;
}
return iTimeField?instant+serialVersionUID:instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 0
TESTING : time_3
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.joda.time.TestMutablePeriod_Updates::testAdd_RInterval2
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_RP_RI1
  - org.joda.time.TestMutableInterval_Constructors::testConstructor_RI_RP1
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int1
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int1
  - org.joda.time.TestInterval_Constructors::testConstructor_RP_RI1
  - org.joda.time.TestInterval_Constructors::testConstructor_RI_RP1
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Turk
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Gaza
Failing tests: 13
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return millis-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().secondOfMinute().set(instant,offset);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().secondOfMinute().set(instant,offset);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().secondOfMinute().set(instant,offset);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getChronology().minuteOfHour().set(instant,value);
instant=getChronology().secondOfMinute().set(instant,offset);
instant=getChronology().millisOfSecond().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=dayOfMonth().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=hourOfDay().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=minuteOfHour().set(instant,value);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=minuteOfHour().set(instant,value);
instant=secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=minuteOfHour().set(instant,value);
instant=secondOfMinute().set(instant,offset);
int offset=getOffsetToAdd(instant);
instant=iField.set(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset!=getZone().getOffset(instant)){
throw new IllegalInstantException(localInstant,zone.getID());
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset==0){
return this;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value==getValue(offset)){
return this;
}
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,get(instant),value,offset);
int offset=getOffsetToAdd(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instant^offset)>=0){
iZone=DateTimeZone.UTC;
offset=0;
adjustedInstant=instant;
}
int offset=getOffset(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^instant+offset)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
int offset=getOffset(instant);
instant=iField.add(instant+offset,value);
return instant-(iTimeField?offset:getOffsetFromLocalToSubtract(instant));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.ZonedChronology,316
org.joda.time.chrono.ZonedChronology,317
org.joda.time.chrono.ZonedChronology,341
UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

========
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantUTC^sum)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantUTC^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^sum)<0&&(instantLocal^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instantLocal^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((val1^sum)<0&&(val1^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^serialVersionUID)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((val1^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(val1^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^val2)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^serialVersionUID)>=0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("Specified date does not exist");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return 1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==null){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0||offset==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==Integer.MIN_VALUE){
return subtract(instant,(long)value);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant<sum){
return getWeeksInYear(offset-1);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<0&&sum>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instant<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&sum>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(sum<0&&instant>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(sum<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&instant>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>Long.MIN_VALUE){
return instant-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
return instant;
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==offset){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(serialVersionUID<=sum){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==sum){
return add(instant,i_months);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant<sum){
return iField.getMinimumValue(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.getMaximumValue(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant==0||sum==0){
return this;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return (int)(instant%DateTimeConstants.MILLIS_PER_DAY);
}else {
return (DateTimeConstants.MILLIS_PER_DAY-1)+(int)((instant+1)%DateTimeConstants.MILLIS_PER_DAY);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<sum||instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instant<sum&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant<sum||instant>=serialVersionUID){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<sum&&instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("The offset cannot be zero");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==0){
return DateTimeZone.UTC;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0){
return this;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(serialVersionUID<sum){
return prev;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,0,getMaximumValue());
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+offset);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>Long.MIN_VALUE){
return prev-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.get(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.isLeap(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.getLeapAmount(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return getYear(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,1,sum);
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getYearMonthDayMillis(offset,1,sum);
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant+=offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
instant=getYearMonthDayMillis(offset,1,sum);
instant+=offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return instant%sum;
}else {
return (instant+1)%iUnitMillis+iUnitMillis-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),null,null);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant+sum<instant){
instant=gregorianToJulian(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant-sum>=instant){
instant=julianToGregorian(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
id=printOffset(offset);
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
convId=printOffset(offset);
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(serialVersionUID<-3){
return 7+(int)((daysSince19700101+4)%7);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
daysSince19700101=(instant-(DateTimeConstants.MILLIS_PER_DAY-1))/DateTimeConstants.MILLIS_PER_DAY;
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
offset-=2;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return (int)((instant/getUnitMillis())%sum);
}else {
return iRange-1+(int)(((instant+1)/getUnitMillis())%iRange);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<sum&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<sum&&(instant^offset)>=0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=offset){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
FieldUtils.verifyValueBounds(this,offset,DateTimeConstants.BCE,DateTimeConstants.CE);
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return instant-instant%instant;
}else {
instant+=1;
return instant-instant%iUnitMillis-iUnitMillis;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
instant+=1;
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>0){
instant-=1;
return instant-instant%instant+iUnitMillis;
}else {
return instant-instant%iUnitMillis;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
instant-=1;
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalInstantException("Illegal instant due to time zone offset transition ("+iZone);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum>=serialVersionUID){
return iTimeField?instant:instant-diff;
}else {
return earlierOrLater?instant+diff:instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(sum<=serialVersionUID-instant){
return serialVersionUID;
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
if(serialVersionUID-instant<=sum){
return serialVersionUID;
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalInstantException(serialVersionUID,iZone.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(sum),new IllegalInstantException(serialVersionUID,iZone.getID()).getMessage());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^sum)<0&&(instant^offset)>=0){
new IllegalFieldValueException(iField.getType(),Integer.valueOf(sum),new IllegalInstantException(serialVersionUID,iZone.getID()).getMessage()).initCause(new IllegalInstantException(serialVersionUID,iZone.getID()));
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
serialVersionUID=iField.set(localInstant,sum);
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
UNKNOWN ASTNode type : catch (IllegalFieldValueException ex) {
  if (monthOfYear != 2 || dayOfMonth != 29) {
    throw ex;
  }
  instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,28,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
  if (instant >= iCutoverMillis) {
    throw ex;
  }
}

========
int offset=this.iZone.getOffset(instant);
long sum=instantUTC+offset;
if((instantUTC^sum)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instantUTC^sum)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instantUTC+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instantUTC^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instantUTC^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+MILLIS_PER_HOUR;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(getOffset(instant)<=sum){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instantLocal^sum)<0&&(instantLocal^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instantLocal^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instantLocal^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==Integer.MIN_VALUE){
iOffset=iZone.getOffset(sum);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=val1+offset;
if((val1^sum)<0&&(val1^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+val2;
if((instant^sum)<0&&(instant^val2)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((val1^sum)<0&&(val1^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=val1+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+val2;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^serialVersionUID)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((val1^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(val1^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^val2)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return sum;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^serialVersionUID)>=0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(serialVersionUID);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instantLocal+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offsetOriginal;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==offset){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetToAdd(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=iField.add(instant+sum,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
instant+=offset;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalInstantException(instant,getZone().getID());
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
instant-=sum;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long sum=instant+offset;
instant-=sum;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,offset,ERA_VALUE,ERA_VALUE);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&instant>serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
serialVersionUID=instant;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(serialVersionUID);
long sum=instant+offset;
if((instant^sum)<0&&instant>serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant<sum){
return getWeeksInYear(offset-1);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return 1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return sum<0?-year:year;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return year;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
id=printOffset(offset);
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
convId=printOffset(offset);
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return (offset>sum||value<1)?getMaximumValue(instant):maxLessOne;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return maxLessOne;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getWeekyear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return value;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0||offset==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.get(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.isLeap(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=sum){
return iField.getLeapAmount(instant);
}else error
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum<instant){
return prev;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
FieldUtils.verifyValueBounds(this,sum,1,getMaximumValue());
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(serialVersionUID==0||sum==0){
return this;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>Long.MIN_VALUE){
return instant-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
return instant;
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return (int)((instant-sum)/DateTimeConstants.MILLIS_PER_DAY)+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return yearStart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return MILLIS_PER_DAY;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
sum-=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
FieldUtils.verifyValueBounds(this,offset,1,sum);
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
FieldUtils.verifyValueBounds(this,offset,0,getMaximumValue());
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().addWrapField(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().set(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.get(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().roundFloor(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().roundCeiling(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().roundHalfFloor(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().roundHalfCeiling(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().roundHalfEven(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().remainder(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return iLeapMonth;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(serialVersionUID,"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=super.add(instant,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,get(instant),offset,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+MILLIS_PER_SECOND;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
int sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<0&&sum>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&sum>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum>Long.MIN_VALUE){
return prev-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getWeekOfWeekyear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sum-=2;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return position;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum>23){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
offset++;
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum>23){
return ~offset;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
offset++;
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getBase().getDateTimeMillis(instant,offset,offset,offset,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,"resulting");
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(instant,"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(instant,"resulting");
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return prev;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return next;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return iUnitMillis;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,offset,getMinimumValue(),getMaximumValue());
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=offset){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return getYear(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.get(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,offset,getMinimumValue(),getMaximumValueForSet(instant,value));
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,DateTimeConstants.BCE,DateTimeConstants.CE);
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant==null){
return getOffset(DateTimeUtils.currentTimeMillis());
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0){
return DateTimeZone.UTC;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("The offset cannot be zero");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
sum=offset;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset<(iField.getMinimumValue()+offset)){
offset=field.getMinimumValue()+offset;
}else {
iMin=minValue;
}
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getDivided(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==0){
return this;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return wrappedValue;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return thisValue;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return instant%serialVersionUID;
}else {
return (instant+1)%iUnitMillis+iUnitMillis-1;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("Specified date does not exist");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum>=0){
return instant-instant%instant;
}else {
instant+=1;
return instant-instant%iUnitMillis-iUnitMillis;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
instant+=1;
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum>0){
instant-=1;
return instant-instant%instant+iUnitMillis;
}else {
return instant-instant%iUnitMillis;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
instant-=1;
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=~i;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getRemainder(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,offset,offset);
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+floor;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum<=roundCeiling(instant)-instant){
return roundFloor(instant);
}else {
return roundCeiling(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(roundCeiling(instant)-instant<=sum){
return roundCeiling(instant);
}else {
return roundFloor(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getMillisOfDay(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+months;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffset(instant);
int sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
int sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffset(instant);
int sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.get(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum==offset){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=ceiling+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant+=getMillisOfDay(instant);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant+=getMillisOfDay(instant);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant+=getMillisOfDay(instant);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
instant+=getMillisOfDay(instant);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant+=getMillisOfDay(instant);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
instant+=getMillisOfDay(instant);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
instant+=getMillisOfDay(instant);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=getYearMonthDayMillis(offset,1,sum);
instant+=getMillisOfDay(instant);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return max;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum>=instant){
return iField.getMaximumValue(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
sum=iField.set(instant,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
if(sum>=instant){
offset=iField.get(iJulianField.add(iCutover,-1));
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(offset==instant){
return add(instant,i_months);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getMillisOfDay(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getMillisOfDay(instant);
long sum=instant+months;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getOffset(instant);
long sum=instant+months;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long offset=this.iZone.getMillisOfDay(instant);
long sum=instant+months;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return min;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum<instant){
return iField.getMinimumValue(instant);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
if(sum<instant){
offset=iField.get(iCutover);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return (int)((instant/getUnitMillis())%offset);
}else {
return iRange-1+(int)(((instant+1)/getUnitMillis())%iRange);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+MILLIS_YEAR_1;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return (int)((sum*CYCLE)+1L);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offset<-59||minutesOffset>59){
throw new IllegalArgumentException("Minutes out of range: "+minutesOffset);
}
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+overlapStart;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<serialVersionUID||instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<serialVersionUID&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return diff;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant<serialVersionUID||instant>=serialVersionUID){
return instant;
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<serialVersionUID||instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<serialVersionUID&&instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<serialVersionUID&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if(instant<serialVersionUID&&instant>=serialVersionUID){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return millis;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),new IllegalInstantException(iZone.convertUTCToLocal(instant),iZone.getID()).getMessage());
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),new IllegalInstantException(iZone.convertUTCToLocal(instant),iZone.getID()).getMessage()).initCause(new IllegalInstantException(iZone.convertUTCToLocal(instant),iZone.getID()));
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
serialVersionUID=iField.set(localInstant,offset);
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return datePart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return timePart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalArgumentException("Specified date does not exist");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalInstantException(instant,getID());
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(instant>=0){
return (int)(instant%DateTimeConstants.MILLIS_PER_DAY);
}else {
return (DateTimeConstants.MILLIS_PER_DAY-1)+(int)((instant+1)%DateTimeConstants.MILLIS_PER_DAY);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),null,null);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
instant=iField.set(instant,offset);
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
if(sum<-3){
return 7+(int)((daysSince19700101+4)%7);
}
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
daysSince19700101=(instant-(DateTimeConstants.MILLIS_PER_DAY-1))/DateTimeConstants.MILLIS_PER_DAY;
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return newInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=periodStart+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&iZone.nextTransition(instant)>sum){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
enclosing.iZone=this.iZone;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
enclosing.iOffset=this.iOffset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
enclosing.iSavedFields=this.iSavedFields;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
enclosing.iSavedFieldsCount=this.iSavedFieldsCount;
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=iField.add(instant+sum,serialVersionUID);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetToAdd(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetToAdd(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=iField.add(instant+sum,serialVersionUID);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=iField.add(instant+sum,serialVersionUID);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetToAdd(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=iField.add(instant+sum,serialVersionUID);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
instant=super.add(instant,serialVersionUID);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,get(instant),offset,offset);
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,offset),"resulting");
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,offset),"resulting");
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffset(instant);
long sum=instant+offset;
if((instant^sum)<0&&(instant^offset)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
checkLimits(instant,null);
checkLimits(getWrappedField().add(instant,serialVersionUID),"resulting");
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.ZonedChronology,342
org.joda.time.chrono.ZonedChronology,344
org.joda.time.chrono.ZonedChronology,347
org.joda.time.chrono.ZonedChronology,351
UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantUTC^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantUTC^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((val1^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((val1^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^val2)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("Specified date does not exist");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return 1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==null){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0||offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==Integer.MIN_VALUE){
return subtract(instant,(long)value);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff){
return getWeeksInYear(offset-1);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&diff<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&instant<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instant<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(diff<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>Long.MIN_VALUE){
return instant-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
return instant;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==offset){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<=diff){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset==diff){
return add(instant,i_months);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff){
return iField.getMinimumValue(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.getMaximumValue(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant==0||diff==0){
return this;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return (int)(instant%DateTimeConstants.MILLIS_PER_DAY);
}else {
return (DateTimeConstants.MILLIS_PER_DAY-1)+(int)((instant+1)%DateTimeConstants.MILLIS_PER_DAY);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff||instant>=serialVersionUID){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("The offset cannot be zero");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset==0){
return DateTimeZone.UTC;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0){
return this;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<diff){
return prev;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,0,getMaximumValue());
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&offset<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+offset);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&offset<0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+offset);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>Long.MIN_VALUE){
return prev-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.get(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.isLeap(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.getLeapAmount(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return getYear(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff>=serialVersionUID){
return iTimeField?instant:instant-diff;
}else {
return earlierOrLater?instant+diff:instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,1,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getYearMonthDayMillis(offset,1,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant+=offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
instant=getYearMonthDayMillis(offset,1,diff);
instant+=offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return instant%diff;
}else {
return (instant+1)%iUnitMillis+iUnitMillis-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),null,null);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant+diff<instant){
instant=gregorianToJulian(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant-diff>=instant){
instant=julianToGregorian(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
id=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
convId=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<-3){
return 7+(int)((daysSince19700101+4)%7);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
daysSince19700101=(instant-(DateTimeConstants.MILLIS_PER_DAY-1))/DateTimeConstants.MILLIS_PER_DAY;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return (int)((instant/getUnitMillis())%diff);
}else {
return iRange-1+(int)(((instant+1)/getUnitMillis())%iRange);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<diff&&(instant^offset)<0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<offset){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
FieldUtils.verifyValueBounds(this,offset,DateTimeConstants.BCE,DateTimeConstants.CE);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return instant-instant%instant;
}else {
instant+=1;
return instant-instant%iUnitMillis-iUnitMillis;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
instant+=1;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>0){
instant-=1;
return instant-instant%instant+iUnitMillis;
}else {
return instant-instant%iUnitMillis;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
instant-=1;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
UNKNOWN ASTNode type : catch (IllegalFieldValueException ex) {
  if (monthOfYear != 2 || dayOfMonth != 29) {
    throw ex;
  }
  instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,28,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
  if (instant >= iCutoverMillis) {
    throw ex;
  }
}

Timeout!
