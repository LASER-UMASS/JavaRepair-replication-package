java version "1.7.0_231"
OpenJDK Runtime Environment (rhel-2.6.19.1.el7_6-x86_64 u231-b01)
OpenJDK 64-Bit Server VM (build 24.231-b01, mixed mode)
Check out 8d109fe1 to /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/ OK
Init local repository...................................................... OK
Tag post-fix revision...................................................... OK
Run post-checkout hook..................................................... OK
Initialize fixed program version........................................... OK
Apply patch................................................................ OK
Initialize buggy program version........................................... OK
Diff 8d109fe1:3ba9ba79..................................................... OK
Apply patch................................................................ OK
Tag pre-fix revision....................................................... OK
Check out program version: Time-3b......................................... OK
Running ant (compile)...................................................... OK
Running ant (compile.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Running ant (run.dev.tests)................................................ OK
Failing tests: 5
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero
/home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2
PURIFY IS TRUE
=================================================
Project : time_3	start : 19/10/27 15:49

readFailedTest: path is /mnt/nfs/work1/brun/mmotwani/SimFix/d4j-info/failed_tests/time/3.txtTESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
Running ant (compile.tests)................................................ 
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Running ant (compile.tests)................................................ 
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_1
Running ant (compile.tests)................................................ 
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Running ant (compile.tests)................................................ 
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_1
Running ant (compile.tests)................................................ 
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Running ant (compile.tests)................................................ 
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_1
Running ant (compile.tests)................................................ 
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Running ant (compile.tests)................................................ 
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_1
Running ant (compile.tests)................................................ 
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Running ant (compile.tests)................................................ 
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy/src/test/java/org/joda/time/TestMutableDateTime_Adds.java

# FAILING TESTS: 1
TIMEOUT : 1800000
===========
locations= [<org.joda.time.MutableDateTime,785>, <org.joda.time.MutableDateTime,786>, <org.joda.time.chrono.ZonedChronology,351>, <org.joda.time.chrono.ZonedChronology,352>, <org.joda.time.chrono.ZonedChronology,354>, <org.joda.time.chrono.ZonedChronology,357>, <org.joda.time.DateTimeZone,931>, <org.joda.time.field.ImpreciseDateTimeField,183>, <org.joda.time.chrono.ZonedChronology,315>, <org.joda.time.chrono.ZonedChronology,316>, <org.joda.time.chrono.ZonedChronology,317>, <org.joda.time.tz.CachedDateTimeZone,202>, <org.joda.time.chrono.ZonedChronology,341>, <org.joda.time.chrono.ZonedChronology,342>, <org.joda.time.chrono.ZonedChronology,344>, <org.joda.time.chrono.ZonedChronology,347>, <org.joda.time.chrono.BasicYearDateTimeField,60>, <org.joda.time.chrono.BasicGJChronology,190>, <org.joda.time.chrono.BasicMonthOfYearDateTimeField,94>, <org.joda.time.MutableDateTime,660>, <org.joda.time.MutableDateTime,661>, <org.joda.time.MutableDateTime,351>, <org.joda.time.MutableDateTime,353>, <org.joda.time.format.DateTimeFormatterBuilder,1962>, <org.joda.time.format.DateTimeFormatterBuilder,1963>, <org.joda.time.format.DateTimeFormatterBuilder,1964>, <org.joda.time.format.DateTimeFormatterBuilder,1971>, <org.joda.time.base.BaseDateTime,223>, <org.joda.time.base.BaseDateTime,225>, <org.joda.time.format.FormatUtils,68>, <org.joda.time.format.FormatUtils,74>, <org.joda.time.format.FormatUtils,75>, <org.joda.time.format.FormatUtils,77>, <org.joda.time.format.FormatUtils,78>, <org.joda.time.MutableDateTime,639>, <org.joda.time.MutableDateTime,640>, <org.joda.time.MutableDateTime,702>, <org.joda.time.MutableDateTime,703>, <org.joda.time.MutableDateTime,723>, <org.joda.time.MutableDateTime,724>, <org.joda.time.MutableDateTime,764>, <org.joda.time.MutableDateTime,765>, <org.joda.time.format.DateTimeFormatterBuilder,2158>, <org.joda.time.format.DateTimeFormatterBuilder,2157>, <org.joda.time.format.DateTimeFormatterBuilder,2164>, <org.joda.time.format.DateTimeFormatterBuilder,2165>, <org.joda.time.format.DateTimeFormatterBuilder,2166>, <org.joda.time.format.DateTimeFormatterBuilder,2169>, <org.joda.time.format.DateTimeFormatterBuilder,2170>, <org.joda.time.format.DateTimeFormatterBuilder,2174>, <org.joda.time.format.DateTimeFormatterBuilder,2175>, <org.joda.time.format.DateTimeFormatterBuilder,2176>, <org.joda.time.format.DateTimeFormatterBuilder,2178>, <org.joda.time.format.DateTimeFormatterBuilder,2179>, <org.joda.time.format.DateTimeFormatterBuilder,2182>, <org.joda.time.format.DateTimeFormatterBuilder,2183>, <org.joda.time.format.DateTimeFormatterBuilder,2184>, <org.joda.time.field.PreciseDurationDateTimeField,128>, <org.joda.time.format.DateTimeFormatterBuilder,2667>, <org.joda.time.format.ISODateTimeFormat,725>, <org.joda.time.format.DateTimeFormatterBuilder,1913>, <org.joda.time.format.DateTimeFormatterBuilder,1916>, <org.joda.time.format.DateTimeFormatterBuilder,1917>, <org.joda.time.format.DateTimeFormatterBuilder,1946>, <org.joda.time.format.DateTimeFormatterBuilder,1947>, <org.joda.time.format.DateTimeFormatterBuilder,1951>, <org.joda.time.format.DateTimeFormatterBuilder,1959>, <org.joda.time.format.DateTimeFormatterBuilder,1961>, <org.joda.time.format.DateTimeFormatterBuilder,2150>, <org.joda.time.format.DateTimeFormatterBuilder,2153>, <org.joda.time.MutableDateTime,1229>, <org.joda.time.field.PreciseDurationDateTimeField,127>, <org.joda.time.DateTimeFieldType,522>, <org.joda.time.format.FormatUtils,63>, <org.joda.time.format.FormatUtils,64>, <org.joda.time.format.FormatUtils,66>, <org.joda.time.format.FormatUtils,80>, <org.joda.time.format.FormatUtils,82>, <org.joda.time.format.FormatUtils,83>, <org.joda.time.format.FormatUtils,87>, <org.joda.time.format.FormatUtils,90>, <org.joda.time.format.FormatUtils,67>, <org.joda.time.chrono.BasicGJChronology,121>, <org.joda.time.chrono.BasicGJChronology,140>, <org.joda.time.format.DateTimeFormatterBuilder,1475>, <org.joda.time.format.DateTimeFormatterBuilder,1476>, <org.joda.time.format.DateTimeFormatterBuilder,1479>, <org.joda.time.format.DateTimeFormatterBuilder,1480>, <org.joda.time.format.DateTimeFormatterBuilder,1218>, <org.joda.time.format.DateTimeFormatterBuilder,1219>, <org.joda.time.format.DateTimeFormatterBuilder,2654>, <org.joda.time.format.DateTimeFormatterBuilder,2660>, <org.joda.time.format.DateTimeFormatterBuilder,2661>, <org.joda.time.format.DateTimeFormatterBuilder,2665>, <org.joda.time.format.DateTimeFormatterBuilder,2670>, <org.joda.time.format.DateTimeFormatterBuilder,2671>, <org.joda.time.format.DateTimeFormatterBuilder,2672>, <org.joda.time.format.DateTimeFormatterBuilder,2674>, <org.joda.time.format.DateTimeFormatter,469>, <org.joda.time.format.DateTimeFormatter,470>, <org.joda.time.format.DateTimeFormatter,471>, <org.joda.time.format.DateTimeFormatter,472>, <org.joda.time.format.DateTimeFormatter,592>, <org.joda.time.format.DateTimeFormatter,593>, <org.joda.time.format.DateTimeFormatter,594>, <org.joda.time.format.DateTimeFormatter,628>, <org.joda.time.format.DateTimeFormatter,629>, <org.joda.time.format.DateTimeFormatter,632>, <org.joda.time.format.DateTimeFormatter,633>, <org.joda.time.format.DateTimeFormatter,634>, <org.joda.time.format.DateTimeFormatter,635>, <org.joda.time.format.DateTimeFormatter,641>, <org.joda.time.format.DateTimeFormatter,642>, <org.joda.time.format.DateTimeFormatter,667>, <org.joda.time.format.DateTimeFormatter,668>, <org.joda.time.format.DateTimeFormatter,671>, <org.joda.time.format.FormatUtils,50>, <org.joda.time.format.FormatUtils,62>, <org.joda.time.format.FormatUtils,92>, <org.joda.time.DateTimeFieldType,524>, <org.joda.time.DateTimeUtils,199>, <org.joda.time.DateTimeUtils,200>, <org.joda.time.DateTimeUtils,203>, <org.joda.time.DateTimeFieldType,520>, <org.joda.time.DateTimeUtils,196>, <org.joda.time.DateTimeFieldType,516>, <org.joda.time.chrono.GregorianChronology,213>, <org.joda.time.format.FormatUtils,31>, <org.joda.time.DateTimeUtils,181>, <org.joda.time.DateTimeUtils,178>, <org.joda.time.format.DateTimeFormatterBuilder,153>, <org.joda.time.format.DateTimeFormatterBuilder,154>, <org.joda.time.format.DateTimeFormatterBuilder,155>, <org.joda.time.format.DateTimeFormatterBuilder,217>, <org.joda.time.format.DateTimeFormatterBuilder,220>, <org.joda.time.format.DateTimeFormatterBuilder,257>, <org.joda.time.format.DateTimeFormatterBuilder,258>, <org.joda.time.format.DateTimeFormatterBuilder,305>, <org.joda.time.format.DateTimeFormatterBuilder,308>, <org.joda.time.format.DateTimeFormatterBuilder,311>, <org.joda.time.format.DateTimeFormatterBuilder,312>, <org.joda.time.format.DateTimeFormatterBuilder,319>, <org.joda.time.format.DateTimeFormatterBuilder,321>, <org.joda.time.format.DateTimeFormatterBuilder,322>, <org.joda.time.format.DateTimeFormatterBuilder,326>, <org.joda.time.format.DateTimeFormatterBuilder,328>, <org.joda.time.format.DateTimeFormatterBuilder,345>, <org.joda.time.format.DateTimeFormatterBuilder,346>, <org.joda.time.format.DateTimeFormatterBuilder,347>, <org.joda.time.format.DateTimeFormatterBuilder,357>, <org.joda.time.format.DateTimeFormatterBuilder,360>, <org.joda.time.format.DateTimeFormatterBuilder,383>, <org.joda.time.format.DateTimeFormatterBuilder,384>, <org.joda.time.format.DateTimeFormatterBuilder,385>, <org.joda.time.format.DateTimeFormatterBuilder,386>, <org.joda.time.format.DateTimeFormatterBuilder,464>, <org.joda.time.format.DateTimeFormatterBuilder,467>, <org.joda.time.format.DateTimeFormatterBuilder,470>, <org.joda.time.format.DateTimeFormatterBuilder,570>, <org.joda.time.format.DateTimeFormatterBuilder,573>, <org.joda.time.format.DateTimeFormatterBuilder,576>, <org.joda.time.format.DateTimeFormatterBuilder,579>, <org.joda.time.format.DateTimeFormatterBuilder,597>, <org.joda.time.format.DateTimeFormatterBuilder,614>, <org.joda.time.format.DateTimeFormatterBuilder,631>, <org.joda.time.format.DateTimeFormatterBuilder,685>, <org.joda.time.format.DateTimeFormatterBuilder,765>, <org.joda.time.format.DateTimeFormatterBuilder,785>, <org.joda.time.format.DateTimeFormatterBuilder,795>, <org.joda.time.format.DateTimeFormatterBuilder,807>, <org.joda.time.format.DateTimeFormatterBuilder,1091>, <org.joda.time.format.DateTimeFormatterBuilder,1150>, <org.joda.time.format.DateTimeFormatterBuilder,1171>, <org.joda.time.format.DateTimeFormatterBuilder,2623>, <org.joda.time.format.DateTimeFormatterBuilder,2624>, <org.joda.time.format.DateTimeFormatterBuilder,2730>, <org.joda.time.format.DateTimeFormatterBuilder,2763>, <org.joda.time.format.DateTimeFormatterBuilder,2770>, <org.joda.time.format.DateTimeFormatterBuilder,2778>, <org.joda.time.format.DateTimeFormatterBuilder,2779>, <org.joda.time.format.DateTimeFormatterBuilder,2780>, <org.joda.time.format.DateTimeFormatterBuilder,2783>, <org.joda.time.format.DateTimeFormatter,164>, <org.joda.time.format.DateTimeFormatter,182>, <org.joda.time.format.ISODateTimeFormat,662>, <org.joda.time.format.ISODateTimeFormat,784>, <org.joda.time.format.ISODateTimeFormat,995>, <org.joda.time.format.ISODateTimeFormat,1033>, <org.joda.time.format.ISODateTimeFormat,1138>, <org.joda.time.format.ISODateTimeFormat,1139>, <org.joda.time.format.ISODateTimeFormat,1140>, <org.joda.time.format.ISODateTimeFormat,1141>, <org.joda.time.format.ISODateTimeFormat,1142>, <org.joda.time.format.ISODateTimeFormat,1143>, <org.joda.time.format.ISODateTimeFormat,1144>, <org.joda.time.format.ISODateTimeFormat,1145>, <org.joda.time.format.ISODateTimeFormat,1146>, <org.joda.time.format.ISODateTimeFormat,1147>, <org.joda.time.format.ISODateTimeFormat,1148>, <org.joda.time.format.ISODateTimeFormat,1149>]
======================org.joda.time.MutableDateTime,785
========
setEndMillis(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_1
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
Running ant (compile.tests)................................................ 
========
setStartMillis(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_1
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
Running ant (compile.tests)................................................ 
========
setChronology(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
add(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setValues(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.MutableDateTime,786
Find no block!
Timeout!
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy/src/test/java/org/joda/time/TestMutableDateTime_Adds.java

# FAILING TESTS: 1
TIMEOUT : 1800000
===========
locations= [<org.joda.time.MutableDateTime,785>, <org.joda.time.MutableDateTime,786>, <org.joda.time.chrono.ZonedChronology,351>, <org.joda.time.chrono.ZonedChronology,352>, <org.joda.time.chrono.ZonedChronology,354>, <org.joda.time.chrono.ZonedChronology,357>, <org.joda.time.DateTimeZone,931>, <org.joda.time.field.ImpreciseDateTimeField,183>, <org.joda.time.chrono.ZonedChronology,315>, <org.joda.time.chrono.ZonedChronology,316>, <org.joda.time.chrono.ZonedChronology,317>, <org.joda.time.tz.CachedDateTimeZone,202>, <org.joda.time.chrono.ZonedChronology,341>, <org.joda.time.chrono.ZonedChronology,342>, <org.joda.time.chrono.ZonedChronology,344>, <org.joda.time.chrono.ZonedChronology,347>, <org.joda.time.chrono.BasicYearDateTimeField,60>, <org.joda.time.chrono.BasicGJChronology,190>, <org.joda.time.chrono.BasicMonthOfYearDateTimeField,94>, <org.joda.time.MutableDateTime,660>, <org.joda.time.MutableDateTime,661>, <org.joda.time.MutableDateTime,351>, <org.joda.time.MutableDateTime,353>, <org.joda.time.format.DateTimeFormatterBuilder,1962>, <org.joda.time.format.DateTimeFormatterBuilder,1963>, <org.joda.time.format.DateTimeFormatterBuilder,1964>, <org.joda.time.format.DateTimeFormatterBuilder,1971>, <org.joda.time.base.BaseDateTime,223>, <org.joda.time.base.BaseDateTime,225>, <org.joda.time.format.FormatUtils,68>, <org.joda.time.format.FormatUtils,74>, <org.joda.time.format.FormatUtils,75>, <org.joda.time.format.FormatUtils,77>, <org.joda.time.format.FormatUtils,78>, <org.joda.time.MutableDateTime,639>, <org.joda.time.MutableDateTime,640>, <org.joda.time.MutableDateTime,702>, <org.joda.time.MutableDateTime,703>, <org.joda.time.MutableDateTime,723>, <org.joda.time.MutableDateTime,724>, <org.joda.time.MutableDateTime,764>, <org.joda.time.MutableDateTime,765>, <org.joda.time.format.DateTimeFormatterBuilder,2158>, <org.joda.time.format.DateTimeFormatterBuilder,2157>, <org.joda.time.format.DateTimeFormatterBuilder,2164>, <org.joda.time.format.DateTimeFormatterBuilder,2165>, <org.joda.time.format.DateTimeFormatterBuilder,2166>, <org.joda.time.format.DateTimeFormatterBuilder,2169>, <org.joda.time.format.DateTimeFormatterBuilder,2170>, <org.joda.time.format.DateTimeFormatterBuilder,2174>, <org.joda.time.format.DateTimeFormatterBuilder,2175>, <org.joda.time.format.DateTimeFormatterBuilder,2176>, <org.joda.time.format.DateTimeFormatterBuilder,2178>, <org.joda.time.format.DateTimeFormatterBuilder,2179>, <org.joda.time.format.DateTimeFormatterBuilder,2182>, <org.joda.time.format.DateTimeFormatterBuilder,2183>, <org.joda.time.format.DateTimeFormatterBuilder,2184>, <org.joda.time.field.PreciseDurationDateTimeField,128>, <org.joda.time.format.DateTimeFormatterBuilder,2667>, <org.joda.time.format.ISODateTimeFormat,725>, <org.joda.time.format.DateTimeFormatterBuilder,1913>, <org.joda.time.format.DateTimeFormatterBuilder,1916>, <org.joda.time.format.DateTimeFormatterBuilder,1917>, <org.joda.time.format.DateTimeFormatterBuilder,1946>, <org.joda.time.format.DateTimeFormatterBuilder,1947>, <org.joda.time.format.DateTimeFormatterBuilder,1951>, <org.joda.time.format.DateTimeFormatterBuilder,1959>, <org.joda.time.format.DateTimeFormatterBuilder,1961>, <org.joda.time.format.DateTimeFormatterBuilder,2150>, <org.joda.time.format.DateTimeFormatterBuilder,2153>, <org.joda.time.MutableDateTime,1229>, <org.joda.time.field.PreciseDurationDateTimeField,127>, <org.joda.time.DateTimeFieldType,522>, <org.joda.time.format.FormatUtils,63>, <org.joda.time.format.FormatUtils,64>, <org.joda.time.format.FormatUtils,66>, <org.joda.time.format.FormatUtils,80>, <org.joda.time.format.FormatUtils,82>, <org.joda.time.format.FormatUtils,83>, <org.joda.time.format.FormatUtils,87>, <org.joda.time.format.FormatUtils,90>, <org.joda.time.format.FormatUtils,67>, <org.joda.time.chrono.BasicGJChronology,121>, <org.joda.time.chrono.BasicGJChronology,140>, <org.joda.time.format.DateTimeFormatterBuilder,1475>, <org.joda.time.format.DateTimeFormatterBuilder,1476>, <org.joda.time.format.DateTimeFormatterBuilder,1479>, <org.joda.time.format.DateTimeFormatterBuilder,1480>, <org.joda.time.format.DateTimeFormatterBuilder,1218>, <org.joda.time.format.DateTimeFormatterBuilder,1219>, <org.joda.time.format.DateTimeFormatterBuilder,2654>, <org.joda.time.format.DateTimeFormatterBuilder,2660>, <org.joda.time.format.DateTimeFormatterBuilder,2661>, <org.joda.time.format.DateTimeFormatterBuilder,2665>, <org.joda.time.format.DateTimeFormatterBuilder,2670>, <org.joda.time.format.DateTimeFormatterBuilder,2671>, <org.joda.time.format.DateTimeFormatterBuilder,2672>, <org.joda.time.format.DateTimeFormatterBuilder,2674>, <org.joda.time.format.DateTimeFormatter,469>, <org.joda.time.format.DateTimeFormatter,470>, <org.joda.time.format.DateTimeFormatter,471>, <org.joda.time.format.DateTimeFormatter,472>, <org.joda.time.format.DateTimeFormatter,592>, <org.joda.time.format.DateTimeFormatter,593>, <org.joda.time.format.DateTimeFormatter,594>, <org.joda.time.format.DateTimeFormatter,628>, <org.joda.time.format.DateTimeFormatter,629>, <org.joda.time.format.DateTimeFormatter,632>, <org.joda.time.format.DateTimeFormatter,633>, <org.joda.time.format.DateTimeFormatter,634>, <org.joda.time.format.DateTimeFormatter,635>, <org.joda.time.format.DateTimeFormatter,641>, <org.joda.time.format.DateTimeFormatter,642>, <org.joda.time.format.DateTimeFormatter,667>, <org.joda.time.format.DateTimeFormatter,668>, <org.joda.time.format.DateTimeFormatter,671>, <org.joda.time.format.FormatUtils,50>, <org.joda.time.format.FormatUtils,62>, <org.joda.time.format.FormatUtils,92>, <org.joda.time.DateTimeFieldType,524>, <org.joda.time.DateTimeUtils,199>, <org.joda.time.DateTimeUtils,200>, <org.joda.time.DateTimeUtils,203>, <org.joda.time.DateTimeFieldType,520>, <org.joda.time.DateTimeUtils,196>, <org.joda.time.DateTimeFieldType,516>, <org.joda.time.chrono.GregorianChronology,213>, <org.joda.time.format.FormatUtils,31>, <org.joda.time.DateTimeUtils,181>, <org.joda.time.DateTimeUtils,178>, <org.joda.time.format.DateTimeFormatterBuilder,153>, <org.joda.time.format.DateTimeFormatterBuilder,154>, <org.joda.time.format.DateTimeFormatterBuilder,155>, <org.joda.time.format.DateTimeFormatterBuilder,217>, <org.joda.time.format.DateTimeFormatterBuilder,220>, <org.joda.time.format.DateTimeFormatterBuilder,257>, <org.joda.time.format.DateTimeFormatterBuilder,258>, <org.joda.time.format.DateTimeFormatterBuilder,305>, <org.joda.time.format.DateTimeFormatterBuilder,308>, <org.joda.time.format.DateTimeFormatterBuilder,311>, <org.joda.time.format.DateTimeFormatterBuilder,312>, <org.joda.time.format.DateTimeFormatterBuilder,319>, <org.joda.time.format.DateTimeFormatterBuilder,321>, <org.joda.time.format.DateTimeFormatterBuilder,322>, <org.joda.time.format.DateTimeFormatterBuilder,326>, <org.joda.time.format.DateTimeFormatterBuilder,328>, <org.joda.time.format.DateTimeFormatterBuilder,345>, <org.joda.time.format.DateTimeFormatterBuilder,346>, <org.joda.time.format.DateTimeFormatterBuilder,347>, <org.joda.time.format.DateTimeFormatterBuilder,357>, <org.joda.time.format.DateTimeFormatterBuilder,360>, <org.joda.time.format.DateTimeFormatterBuilder,383>, <org.joda.time.format.DateTimeFormatterBuilder,384>, <org.joda.time.format.DateTimeFormatterBuilder,385>, <org.joda.time.format.DateTimeFormatterBuilder,386>, <org.joda.time.format.DateTimeFormatterBuilder,464>, <org.joda.time.format.DateTimeFormatterBuilder,467>, <org.joda.time.format.DateTimeFormatterBuilder,470>, <org.joda.time.format.DateTimeFormatterBuilder,570>, <org.joda.time.format.DateTimeFormatterBuilder,573>, <org.joda.time.format.DateTimeFormatterBuilder,576>, <org.joda.time.format.DateTimeFormatterBuilder,579>, <org.joda.time.format.DateTimeFormatterBuilder,597>, <org.joda.time.format.DateTimeFormatterBuilder,614>, <org.joda.time.format.DateTimeFormatterBuilder,631>, <org.joda.time.format.DateTimeFormatterBuilder,685>, <org.joda.time.format.DateTimeFormatterBuilder,765>, <org.joda.time.format.DateTimeFormatterBuilder,785>, <org.joda.time.format.DateTimeFormatterBuilder,795>, <org.joda.time.format.DateTimeFormatterBuilder,807>, <org.joda.time.format.DateTimeFormatterBuilder,1091>, <org.joda.time.format.DateTimeFormatterBuilder,1150>, <org.joda.time.format.DateTimeFormatterBuilder,1171>, <org.joda.time.format.DateTimeFormatterBuilder,2623>, <org.joda.time.format.DateTimeFormatterBuilder,2624>, <org.joda.time.format.DateTimeFormatterBuilder,2730>, <org.joda.time.format.DateTimeFormatterBuilder,2763>, <org.joda.time.format.DateTimeFormatterBuilder,2770>, <org.joda.time.format.DateTimeFormatterBuilder,2778>, <org.joda.time.format.DateTimeFormatterBuilder,2779>, <org.joda.time.format.DateTimeFormatterBuilder,2780>, <org.joda.time.format.DateTimeFormatterBuilder,2783>, <org.joda.time.format.DateTimeFormatter,164>, <org.joda.time.format.DateTimeFormatter,182>, <org.joda.time.format.ISODateTimeFormat,662>, <org.joda.time.format.ISODateTimeFormat,784>, <org.joda.time.format.ISODateTimeFormat,995>, <org.joda.time.format.ISODateTimeFormat,1033>, <org.joda.time.format.ISODateTimeFormat,1138>, <org.joda.time.format.ISODateTimeFormat,1139>, <org.joda.time.format.ISODateTimeFormat,1140>, <org.joda.time.format.ISODateTimeFormat,1141>, <org.joda.time.format.ISODateTimeFormat,1142>, <org.joda.time.format.ISODateTimeFormat,1143>, <org.joda.time.format.ISODateTimeFormat,1144>, <org.joda.time.format.ISODateTimeFormat,1145>, <org.joda.time.format.ISODateTimeFormat,1146>, <org.joda.time.format.ISODateTimeFormat,1147>, <org.joda.time.format.ISODateTimeFormat,1148>, <org.joda.time.format.ISODateTimeFormat,1149>]
======================org.joda.time.MutableDateTime,785
========
setEndMillis(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setStartMillis(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setChronology(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
add(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
setValues(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.MutableDateTime,786
Find no block!
org.joda.time.chrono.ZonedChronology,351
UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if((instantUTC^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantUTC^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((val1^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((val1^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^val2)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("Specified date does not exist");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==null){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return 1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0||offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==Integer.MIN_VALUE){
return subtract(instant,(long)value);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff){
return getWeeksInYear(offset-1);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&diff<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&instant<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(instant<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(diff<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>Long.MIN_VALUE){
return instant-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
return instant;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<=diff){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==offset){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset==diff){
return add(instant,i_months);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff){
return iField.getMinimumValue(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.getMaximumValue(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant==0||diff==0){
return this;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return (int)(instant%DateTimeConstants.MILLIS_PER_DAY);
}else {
return (DateTimeConstants.MILLIS_PER_DAY-1)+(int)((instant+1)%DateTimeConstants.MILLIS_PER_DAY);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff||instant>=serialVersionUID){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("The offset cannot be zero");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset==0){
return DateTimeZone.UTC;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0){
return this;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<diff){
return prev;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,0,getMaximumValue());
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&offset<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+offset);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&offset<0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+offset);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>Long.MIN_VALUE){
return prev-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.get(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.isLeap(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.getLeapAmount(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return getYear(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff>=serialVersionUID){
return iTimeField?instant:instant-diff;
}else {
return earlierOrLater?instant+diff:instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,1,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getYearMonthDayMillis(offset,1,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant+=offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
instant=getYearMonthDayMillis(offset,1,diff);
instant+=offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return instant%diff;
}else {
return (instant+1)%iUnitMillis+iUnitMillis-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),null,null);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant+diff<instant){
instant=gregorianToJulian(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant-diff>=instant){
instant=julianToGregorian(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
id=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
convId=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<-3){
return 7+(int)((daysSince19700101+4)%7);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
daysSince19700101=(instant-(DateTimeConstants.MILLIS_PER_DAY-1))/DateTimeConstants.MILLIS_PER_DAY;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddWeeks_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Timeout!
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy/src/test/java/org/joda/time/TestMutableDateTime_Adds.java

# FAILING TESTS: 1
TIMEOUT : 1800000
===========
locations= [<org.joda.time.MutableDateTime,785>, <org.joda.time.MutableDateTime,786>, <org.joda.time.chrono.ZonedChronology,351>, <org.joda.time.chrono.ZonedChronology,352>, <org.joda.time.chrono.ZonedChronology,354>, <org.joda.time.chrono.ZonedChronology,357>, <org.joda.time.DateTimeZone,931>, <org.joda.time.field.ImpreciseDateTimeField,183>, <org.joda.time.chrono.ZonedChronology,315>, <org.joda.time.chrono.ZonedChronology,316>, <org.joda.time.chrono.ZonedChronology,317>, <org.joda.time.tz.CachedDateTimeZone,202>, <org.joda.time.chrono.ZonedChronology,341>, <org.joda.time.chrono.ZonedChronology,342>, <org.joda.time.chrono.ZonedChronology,344>, <org.joda.time.chrono.ZonedChronology,347>, <org.joda.time.chrono.BasicYearDateTimeField,60>, <org.joda.time.chrono.BasicGJChronology,190>, <org.joda.time.chrono.BasicMonthOfYearDateTimeField,94>, <org.joda.time.MutableDateTime,660>, <org.joda.time.MutableDateTime,661>, <org.joda.time.MutableDateTime,351>, <org.joda.time.MutableDateTime,353>, <org.joda.time.format.DateTimeFormatterBuilder,1962>, <org.joda.time.format.DateTimeFormatterBuilder,1963>, <org.joda.time.format.DateTimeFormatterBuilder,1964>, <org.joda.time.format.DateTimeFormatterBuilder,1971>, <org.joda.time.base.BaseDateTime,223>, <org.joda.time.base.BaseDateTime,225>, <org.joda.time.format.FormatUtils,68>, <org.joda.time.format.FormatUtils,74>, <org.joda.time.format.FormatUtils,75>, <org.joda.time.format.FormatUtils,77>, <org.joda.time.format.FormatUtils,78>, <org.joda.time.MutableDateTime,639>, <org.joda.time.MutableDateTime,640>, <org.joda.time.MutableDateTime,702>, <org.joda.time.MutableDateTime,703>, <org.joda.time.MutableDateTime,723>, <org.joda.time.MutableDateTime,724>, <org.joda.time.MutableDateTime,764>, <org.joda.time.MutableDateTime,765>, <org.joda.time.format.DateTimeFormatterBuilder,2158>, <org.joda.time.format.DateTimeFormatterBuilder,2157>, <org.joda.time.format.DateTimeFormatterBuilder,2164>, <org.joda.time.format.DateTimeFormatterBuilder,2165>, <org.joda.time.format.DateTimeFormatterBuilder,2166>, <org.joda.time.format.DateTimeFormatterBuilder,2169>, <org.joda.time.format.DateTimeFormatterBuilder,2170>, <org.joda.time.format.DateTimeFormatterBuilder,2174>, <org.joda.time.format.DateTimeFormatterBuilder,2175>, <org.joda.time.format.DateTimeFormatterBuilder,2176>, <org.joda.time.format.DateTimeFormatterBuilder,2178>, <org.joda.time.format.DateTimeFormatterBuilder,2179>, <org.joda.time.format.DateTimeFormatterBuilder,2182>, <org.joda.time.format.DateTimeFormatterBuilder,2183>, <org.joda.time.format.DateTimeFormatterBuilder,2184>, <org.joda.time.field.PreciseDurationDateTimeField,128>, <org.joda.time.format.DateTimeFormatterBuilder,2667>, <org.joda.time.format.ISODateTimeFormat,725>, <org.joda.time.format.DateTimeFormatterBuilder,1913>, <org.joda.time.format.DateTimeFormatterBuilder,1916>, <org.joda.time.format.DateTimeFormatterBuilder,1917>, <org.joda.time.format.DateTimeFormatterBuilder,1946>, <org.joda.time.format.DateTimeFormatterBuilder,1947>, <org.joda.time.format.DateTimeFormatterBuilder,1951>, <org.joda.time.format.DateTimeFormatterBuilder,1959>, <org.joda.time.format.DateTimeFormatterBuilder,1961>, <org.joda.time.format.DateTimeFormatterBuilder,2150>, <org.joda.time.format.DateTimeFormatterBuilder,2153>, <org.joda.time.MutableDateTime,1229>, <org.joda.time.field.PreciseDurationDateTimeField,127>, <org.joda.time.DateTimeFieldType,522>, <org.joda.time.format.FormatUtils,63>, <org.joda.time.format.FormatUtils,64>, <org.joda.time.format.FormatUtils,66>, <org.joda.time.format.FormatUtils,80>, <org.joda.time.format.FormatUtils,82>, <org.joda.time.format.FormatUtils,83>, <org.joda.time.format.FormatUtils,87>, <org.joda.time.format.FormatUtils,90>, <org.joda.time.format.FormatUtils,67>, <org.joda.time.chrono.BasicGJChronology,121>, <org.joda.time.chrono.BasicGJChronology,140>, <org.joda.time.format.DateTimeFormatterBuilder,1475>, <org.joda.time.format.DateTimeFormatterBuilder,1476>, <org.joda.time.format.DateTimeFormatterBuilder,1479>, <org.joda.time.format.DateTimeFormatterBuilder,1480>, <org.joda.time.format.DateTimeFormatterBuilder,1218>, <org.joda.time.format.DateTimeFormatterBuilder,1219>, <org.joda.time.format.DateTimeFormatterBuilder,2654>, <org.joda.time.format.DateTimeFormatterBuilder,2660>, <org.joda.time.format.DateTimeFormatterBuilder,2661>, <org.joda.time.format.DateTimeFormatterBuilder,2665>, <org.joda.time.format.DateTimeFormatterBuilder,2670>, <org.joda.time.format.DateTimeFormatterBuilder,2671>, <org.joda.time.format.DateTimeFormatterBuilder,2672>, <org.joda.time.format.DateTimeFormatterBuilder,2674>, <org.joda.time.format.DateTimeFormatter,469>, <org.joda.time.format.DateTimeFormatter,470>, <org.joda.time.format.DateTimeFormatter,471>, <org.joda.time.format.DateTimeFormatter,472>, <org.joda.time.format.DateTimeFormatter,592>, <org.joda.time.format.DateTimeFormatter,593>, <org.joda.time.format.DateTimeFormatter,594>, <org.joda.time.format.DateTimeFormatter,628>, <org.joda.time.format.DateTimeFormatter,629>, <org.joda.time.format.DateTimeFormatter,632>, <org.joda.time.format.DateTimeFormatter,633>, <org.joda.time.format.DateTimeFormatter,634>, <org.joda.time.format.DateTimeFormatter,635>, <org.joda.time.format.DateTimeFormatter,641>, <org.joda.time.format.DateTimeFormatter,642>, <org.joda.time.format.DateTimeFormatter,667>, <org.joda.time.format.DateTimeFormatter,668>, <org.joda.time.format.DateTimeFormatter,671>, <org.joda.time.format.FormatUtils,50>, <org.joda.time.format.FormatUtils,62>, <org.joda.time.format.FormatUtils,92>, <org.joda.time.DateTimeFieldType,524>, <org.joda.time.DateTimeUtils,199>, <org.joda.time.DateTimeUtils,200>, <org.joda.time.DateTimeUtils,203>, <org.joda.time.DateTimeFieldType,520>, <org.joda.time.DateTimeUtils,196>, <org.joda.time.DateTimeFieldType,516>, <org.joda.time.chrono.GregorianChronology,213>, <org.joda.time.format.FormatUtils,31>, <org.joda.time.DateTimeUtils,181>, <org.joda.time.DateTimeUtils,178>, <org.joda.time.format.DateTimeFormatterBuilder,153>, <org.joda.time.format.DateTimeFormatterBuilder,154>, <org.joda.time.format.DateTimeFormatterBuilder,155>, <org.joda.time.format.DateTimeFormatterBuilder,217>, <org.joda.time.format.DateTimeFormatterBuilder,220>, <org.joda.time.format.DateTimeFormatterBuilder,257>, <org.joda.time.format.DateTimeFormatterBuilder,258>, <org.joda.time.format.DateTimeFormatterBuilder,305>, <org.joda.time.format.DateTimeFormatterBuilder,308>, <org.joda.time.format.DateTimeFormatterBuilder,311>, <org.joda.time.format.DateTimeFormatterBuilder,312>, <org.joda.time.format.DateTimeFormatterBuilder,319>, <org.joda.time.format.DateTimeFormatterBuilder,321>, <org.joda.time.format.DateTimeFormatterBuilder,322>, <org.joda.time.format.DateTimeFormatterBuilder,326>, <org.joda.time.format.DateTimeFormatterBuilder,328>, <org.joda.time.format.DateTimeFormatterBuilder,345>, <org.joda.time.format.DateTimeFormatterBuilder,346>, <org.joda.time.format.DateTimeFormatterBuilder,347>, <org.joda.time.format.DateTimeFormatterBuilder,357>, <org.joda.time.format.DateTimeFormatterBuilder,360>, <org.joda.time.format.DateTimeFormatterBuilder,383>, <org.joda.time.format.DateTimeFormatterBuilder,384>, <org.joda.time.format.DateTimeFormatterBuilder,385>, <org.joda.time.format.DateTimeFormatterBuilder,386>, <org.joda.time.format.DateTimeFormatterBuilder,464>, <org.joda.time.format.DateTimeFormatterBuilder,467>, <org.joda.time.format.DateTimeFormatterBuilder,470>, <org.joda.time.format.DateTimeFormatterBuilder,570>, <org.joda.time.format.DateTimeFormatterBuilder,573>, <org.joda.time.format.DateTimeFormatterBuilder,576>, <org.joda.time.format.DateTimeFormatterBuilder,579>, <org.joda.time.format.DateTimeFormatterBuilder,597>, <org.joda.time.format.DateTimeFormatterBuilder,614>, <org.joda.time.format.DateTimeFormatterBuilder,631>, <org.joda.time.format.DateTimeFormatterBuilder,685>, <org.joda.time.format.DateTimeFormatterBuilder,765>, <org.joda.time.format.DateTimeFormatterBuilder,785>, <org.joda.time.format.DateTimeFormatterBuilder,795>, <org.joda.time.format.DateTimeFormatterBuilder,807>, <org.joda.time.format.DateTimeFormatterBuilder,1091>, <org.joda.time.format.DateTimeFormatterBuilder,1150>, <org.joda.time.format.DateTimeFormatterBuilder,1171>, <org.joda.time.format.DateTimeFormatterBuilder,2623>, <org.joda.time.format.DateTimeFormatterBuilder,2624>, <org.joda.time.format.DateTimeFormatterBuilder,2730>, <org.joda.time.format.DateTimeFormatterBuilder,2763>, <org.joda.time.format.DateTimeFormatterBuilder,2770>, <org.joda.time.format.DateTimeFormatterBuilder,2778>, <org.joda.time.format.DateTimeFormatterBuilder,2779>, <org.joda.time.format.DateTimeFormatterBuilder,2780>, <org.joda.time.format.DateTimeFormatterBuilder,2783>, <org.joda.time.format.DateTimeFormatter,164>, <org.joda.time.format.DateTimeFormatter,182>, <org.joda.time.format.ISODateTimeFormat,662>, <org.joda.time.format.ISODateTimeFormat,784>, <org.joda.time.format.ISODateTimeFormat,995>, <org.joda.time.format.ISODateTimeFormat,1033>, <org.joda.time.format.ISODateTimeFormat,1138>, <org.joda.time.format.ISODateTimeFormat,1139>, <org.joda.time.format.ISODateTimeFormat,1140>, <org.joda.time.format.ISODateTimeFormat,1141>, <org.joda.time.format.ISODateTimeFormat,1142>, <org.joda.time.format.ISODateTimeFormat,1143>, <org.joda.time.format.ISODateTimeFormat,1144>, <org.joda.time.format.ISODateTimeFormat,1145>, <org.joda.time.format.ISODateTimeFormat,1146>, <org.joda.time.format.ISODateTimeFormat,1147>, <org.joda.time.format.ISODateTimeFormat,1148>, <org.joda.time.format.ISODateTimeFormat,1149>]
======================org.joda.time.MutableDateTime,785
========
setEndMillis(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setStartMillis(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setChronology(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
add(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_1
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_1
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_1
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_1
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
setValues(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.MutableDateTime,786
Find no block!
org.joda.time.chrono.ZonedChronology,351
UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_1
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_1
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_1
Failing tests: 0
TESTING : time_3
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
Failing tests: 0
Successfully repair!
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_1
Failing tests: 0
TEST: org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_1
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_1
Failing tests: 0
TEST: org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_1
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_1
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_1
Failing tests: 0
TEST: org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_1
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy/src/test/java/org/joda/time/TestMutableDateTime_Adds.java

# FAILING TESTS: 1
TIMEOUT : 1800000
===========
locations= [<org.joda.time.MutableDateTime,785>, <org.joda.time.MutableDateTime,786>, <org.joda.time.chrono.ZonedChronology,351>, <org.joda.time.chrono.ZonedChronology,352>, <org.joda.time.chrono.ZonedChronology,354>, <org.joda.time.chrono.ZonedChronology,357>, <org.joda.time.DateTimeZone,931>, <org.joda.time.field.ImpreciseDateTimeField,183>, <org.joda.time.chrono.ZonedChronology,315>, <org.joda.time.chrono.ZonedChronology,316>, <org.joda.time.chrono.ZonedChronology,317>, <org.joda.time.tz.CachedDateTimeZone,202>, <org.joda.time.chrono.ZonedChronology,341>, <org.joda.time.chrono.ZonedChronology,342>, <org.joda.time.chrono.ZonedChronology,344>, <org.joda.time.chrono.ZonedChronology,347>, <org.joda.time.chrono.BasicYearDateTimeField,60>, <org.joda.time.chrono.BasicGJChronology,190>, <org.joda.time.chrono.BasicMonthOfYearDateTimeField,94>, <org.joda.time.MutableDateTime,660>, <org.joda.time.MutableDateTime,661>, <org.joda.time.MutableDateTime,351>, <org.joda.time.MutableDateTime,353>, <org.joda.time.format.DateTimeFormatterBuilder,1962>, <org.joda.time.format.DateTimeFormatterBuilder,1963>, <org.joda.time.format.DateTimeFormatterBuilder,1964>, <org.joda.time.format.DateTimeFormatterBuilder,1971>, <org.joda.time.base.BaseDateTime,223>, <org.joda.time.base.BaseDateTime,225>, <org.joda.time.format.FormatUtils,68>, <org.joda.time.format.FormatUtils,74>, <org.joda.time.format.FormatUtils,75>, <org.joda.time.format.FormatUtils,77>, <org.joda.time.format.FormatUtils,78>, <org.joda.time.MutableDateTime,639>, <org.joda.time.MutableDateTime,640>, <org.joda.time.MutableDateTime,702>, <org.joda.time.MutableDateTime,703>, <org.joda.time.MutableDateTime,723>, <org.joda.time.MutableDateTime,724>, <org.joda.time.MutableDateTime,764>, <org.joda.time.MutableDateTime,765>, <org.joda.time.format.DateTimeFormatterBuilder,2158>, <org.joda.time.format.DateTimeFormatterBuilder,2157>, <org.joda.time.format.DateTimeFormatterBuilder,2164>, <org.joda.time.format.DateTimeFormatterBuilder,2165>, <org.joda.time.format.DateTimeFormatterBuilder,2166>, <org.joda.time.format.DateTimeFormatterBuilder,2169>, <org.joda.time.format.DateTimeFormatterBuilder,2170>, <org.joda.time.format.DateTimeFormatterBuilder,2174>, <org.joda.time.format.DateTimeFormatterBuilder,2175>, <org.joda.time.format.DateTimeFormatterBuilder,2176>, <org.joda.time.format.DateTimeFormatterBuilder,2178>, <org.joda.time.format.DateTimeFormatterBuilder,2179>, <org.joda.time.format.DateTimeFormatterBuilder,2182>, <org.joda.time.format.DateTimeFormatterBuilder,2183>, <org.joda.time.format.DateTimeFormatterBuilder,2184>, <org.joda.time.field.PreciseDurationDateTimeField,128>, <org.joda.time.format.DateTimeFormatterBuilder,2667>, <org.joda.time.format.ISODateTimeFormat,725>, <org.joda.time.format.DateTimeFormatterBuilder,1913>, <org.joda.time.format.DateTimeFormatterBuilder,1916>, <org.joda.time.format.DateTimeFormatterBuilder,1917>, <org.joda.time.format.DateTimeFormatterBuilder,1946>, <org.joda.time.format.DateTimeFormatterBuilder,1947>, <org.joda.time.format.DateTimeFormatterBuilder,1951>, <org.joda.time.format.DateTimeFormatterBuilder,1959>, <org.joda.time.format.DateTimeFormatterBuilder,1961>, <org.joda.time.format.DateTimeFormatterBuilder,2150>, <org.joda.time.format.DateTimeFormatterBuilder,2153>, <org.joda.time.MutableDateTime,1229>, <org.joda.time.field.PreciseDurationDateTimeField,127>, <org.joda.time.DateTimeFieldType,522>, <org.joda.time.format.FormatUtils,63>, <org.joda.time.format.FormatUtils,64>, <org.joda.time.format.FormatUtils,66>, <org.joda.time.format.FormatUtils,80>, <org.joda.time.format.FormatUtils,82>, <org.joda.time.format.FormatUtils,83>, <org.joda.time.format.FormatUtils,87>, <org.joda.time.format.FormatUtils,90>, <org.joda.time.format.FormatUtils,67>, <org.joda.time.chrono.BasicGJChronology,121>, <org.joda.time.chrono.BasicGJChronology,140>, <org.joda.time.format.DateTimeFormatterBuilder,1475>, <org.joda.time.format.DateTimeFormatterBuilder,1476>, <org.joda.time.format.DateTimeFormatterBuilder,1479>, <org.joda.time.format.DateTimeFormatterBuilder,1480>, <org.joda.time.format.DateTimeFormatterBuilder,1218>, <org.joda.time.format.DateTimeFormatterBuilder,1219>, <org.joda.time.format.DateTimeFormatterBuilder,2654>, <org.joda.time.format.DateTimeFormatterBuilder,2660>, <org.joda.time.format.DateTimeFormatterBuilder,2661>, <org.joda.time.format.DateTimeFormatterBuilder,2665>, <org.joda.time.format.DateTimeFormatterBuilder,2670>, <org.joda.time.format.DateTimeFormatterBuilder,2671>, <org.joda.time.format.DateTimeFormatterBuilder,2672>, <org.joda.time.format.DateTimeFormatterBuilder,2674>, <org.joda.time.format.DateTimeFormatter,469>, <org.joda.time.format.DateTimeFormatter,470>, <org.joda.time.format.DateTimeFormatter,471>, <org.joda.time.format.DateTimeFormatter,472>, <org.joda.time.format.DateTimeFormatter,592>, <org.joda.time.format.DateTimeFormatter,593>, <org.joda.time.format.DateTimeFormatter,594>, <org.joda.time.format.DateTimeFormatter,628>, <org.joda.time.format.DateTimeFormatter,629>, <org.joda.time.format.DateTimeFormatter,632>, <org.joda.time.format.DateTimeFormatter,633>, <org.joda.time.format.DateTimeFormatter,634>, <org.joda.time.format.DateTimeFormatter,635>, <org.joda.time.format.DateTimeFormatter,641>, <org.joda.time.format.DateTimeFormatter,642>, <org.joda.time.format.DateTimeFormatter,667>, <org.joda.time.format.DateTimeFormatter,668>, <org.joda.time.format.DateTimeFormatter,671>, <org.joda.time.format.FormatUtils,50>, <org.joda.time.format.FormatUtils,62>, <org.joda.time.format.FormatUtils,92>, <org.joda.time.DateTimeFieldType,524>, <org.joda.time.DateTimeUtils,199>, <org.joda.time.DateTimeUtils,200>, <org.joda.time.DateTimeUtils,203>, <org.joda.time.DateTimeFieldType,520>, <org.joda.time.DateTimeUtils,196>, <org.joda.time.DateTimeFieldType,516>, <org.joda.time.chrono.GregorianChronology,213>, <org.joda.time.format.FormatUtils,31>, <org.joda.time.DateTimeUtils,181>, <org.joda.time.DateTimeUtils,178>, <org.joda.time.format.DateTimeFormatterBuilder,153>, <org.joda.time.format.DateTimeFormatterBuilder,154>, <org.joda.time.format.DateTimeFormatterBuilder,155>, <org.joda.time.format.DateTimeFormatterBuilder,217>, <org.joda.time.format.DateTimeFormatterBuilder,220>, <org.joda.time.format.DateTimeFormatterBuilder,257>, <org.joda.time.format.DateTimeFormatterBuilder,258>, <org.joda.time.format.DateTimeFormatterBuilder,305>, <org.joda.time.format.DateTimeFormatterBuilder,308>, <org.joda.time.format.DateTimeFormatterBuilder,311>, <org.joda.time.format.DateTimeFormatterBuilder,312>, <org.joda.time.format.DateTimeFormatterBuilder,319>, <org.joda.time.format.DateTimeFormatterBuilder,321>, <org.joda.time.format.DateTimeFormatterBuilder,322>, <org.joda.time.format.DateTimeFormatterBuilder,326>, <org.joda.time.format.DateTimeFormatterBuilder,328>, <org.joda.time.format.DateTimeFormatterBuilder,345>, <org.joda.time.format.DateTimeFormatterBuilder,346>, <org.joda.time.format.DateTimeFormatterBuilder,347>, <org.joda.time.format.DateTimeFormatterBuilder,357>, <org.joda.time.format.DateTimeFormatterBuilder,360>, <org.joda.time.format.DateTimeFormatterBuilder,383>, <org.joda.time.format.DateTimeFormatterBuilder,384>, <org.joda.time.format.DateTimeFormatterBuilder,385>, <org.joda.time.format.DateTimeFormatterBuilder,386>, <org.joda.time.format.DateTimeFormatterBuilder,464>, <org.joda.time.format.DateTimeFormatterBuilder,467>, <org.joda.time.format.DateTimeFormatterBuilder,470>, <org.joda.time.format.DateTimeFormatterBuilder,570>, <org.joda.time.format.DateTimeFormatterBuilder,573>, <org.joda.time.format.DateTimeFormatterBuilder,576>, <org.joda.time.format.DateTimeFormatterBuilder,579>, <org.joda.time.format.DateTimeFormatterBuilder,597>, <org.joda.time.format.DateTimeFormatterBuilder,614>, <org.joda.time.format.DateTimeFormatterBuilder,631>, <org.joda.time.format.DateTimeFormatterBuilder,685>, <org.joda.time.format.DateTimeFormatterBuilder,765>, <org.joda.time.format.DateTimeFormatterBuilder,785>, <org.joda.time.format.DateTimeFormatterBuilder,795>, <org.joda.time.format.DateTimeFormatterBuilder,807>, <org.joda.time.format.DateTimeFormatterBuilder,1091>, <org.joda.time.format.DateTimeFormatterBuilder,1150>, <org.joda.time.format.DateTimeFormatterBuilder,1171>, <org.joda.time.format.DateTimeFormatterBuilder,2623>, <org.joda.time.format.DateTimeFormatterBuilder,2624>, <org.joda.time.format.DateTimeFormatterBuilder,2730>, <org.joda.time.format.DateTimeFormatterBuilder,2763>, <org.joda.time.format.DateTimeFormatterBuilder,2770>, <org.joda.time.format.DateTimeFormatterBuilder,2778>, <org.joda.time.format.DateTimeFormatterBuilder,2779>, <org.joda.time.format.DateTimeFormatterBuilder,2780>, <org.joda.time.format.DateTimeFormatterBuilder,2783>, <org.joda.time.format.DateTimeFormatter,164>, <org.joda.time.format.DateTimeFormatter,182>, <org.joda.time.format.ISODateTimeFormat,662>, <org.joda.time.format.ISODateTimeFormat,784>, <org.joda.time.format.ISODateTimeFormat,995>, <org.joda.time.format.ISODateTimeFormat,1033>, <org.joda.time.format.ISODateTimeFormat,1138>, <org.joda.time.format.ISODateTimeFormat,1139>, <org.joda.time.format.ISODateTimeFormat,1140>, <org.joda.time.format.ISODateTimeFormat,1141>, <org.joda.time.format.ISODateTimeFormat,1142>, <org.joda.time.format.ISODateTimeFormat,1143>, <org.joda.time.format.ISODateTimeFormat,1144>, <org.joda.time.format.ISODateTimeFormat,1145>, <org.joda.time.format.ISODateTimeFormat,1146>, <org.joda.time.format.ISODateTimeFormat,1147>, <org.joda.time.format.ISODateTimeFormat,1148>, <org.joda.time.format.ISODateTimeFormat,1149>]
======================org.joda.time.MutableDateTime,785
========
setEndMillis(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setStartMillis(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setChronology(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
add(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
setValues(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.MutableDateTime,786
Find no block!
org.joda.time.chrono.ZonedChronology,351
UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantUTC^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantUTC^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((val1^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((val1^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^val2)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("Specified date does not exist");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==null){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return 1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0||offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==Integer.MIN_VALUE){
return subtract(instant,(long)value);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff){
return getWeeksInYear(offset-1);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&diff<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&instant<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instant<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(diff<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>Long.MIN_VALUE){
return instant-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
return instant;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<=diff){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==offset){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset==diff){
return add(instant,i_months);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff){
return iField.getMinimumValue(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.getMaximumValue(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant==0||diff==0){
return this;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return (int)(instant%DateTimeConstants.MILLIS_PER_DAY);
}else {
return (DateTimeConstants.MILLIS_PER_DAY-1)+(int)((instant+1)%DateTimeConstants.MILLIS_PER_DAY);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff||instant>=serialVersionUID){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("The offset cannot be zero");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset==0){
return DateTimeZone.UTC;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0){
return this;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<diff){
return prev;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,0,getMaximumValue());
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&offset<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+offset);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&offset<0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+offset);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>Long.MIN_VALUE){
return prev-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.get(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.isLeap(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.getLeapAmount(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return getYear(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff>=serialVersionUID){
return iTimeField?instant:instant-diff;
}else {
return earlierOrLater?instant+diff:instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,1,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getYearMonthDayMillis(offset,1,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant+=offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
instant=getYearMonthDayMillis(offset,1,diff);
instant+=offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return instant%diff;
}else {
return (instant+1)%iUnitMillis+iUnitMillis-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),null,null);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant+diff<instant){
instant=gregorianToJulian(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant-diff>=instant){
instant=julianToGregorian(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
id=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
convId=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<-3){
return 7+(int)((daysSince19700101+4)%7);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
daysSince19700101=(instant-(DateTimeConstants.MILLIS_PER_DAY-1))/DateTimeConstants.MILLIS_PER_DAY;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return (int)((instant/getUnitMillis())%diff);
}else {
return iRange-1+(int)(((instant+1)/getUnitMillis())%iRange);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<diff&&(instant^offset)<0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<offset){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
FieldUtils.verifyValueBounds(this,offset,DateTimeConstants.BCE,DateTimeConstants.CE);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return instant-instant%instant;
}else {
instant+=1;
return instant-instant%iUnitMillis-iUnitMillis;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
instant+=1;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>0){
instant-=1;
return instant-instant%instant+iUnitMillis;
}else {
return instant-instant%iUnitMillis;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
instant-=1;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalInstantException("Illegal instant due to time zone offset transition ("+iZone);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff<=serialVersionUID-instant){
return serialVersionUID;
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID-instant<=diff){
return serialVersionUID;
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalInstantException(serialVersionUID,iZone.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(diff),new IllegalInstantException(serialVersionUID,iZone.getID()).getMessage());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
new IllegalFieldValueException(iField.getType(),Integer.valueOf(diff),new IllegalInstantException(serialVersionUID,iZone.getID()).getMessage()).initCause(new IllegalInstantException(serialVersionUID,iZone.getID()));
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
serialVersionUID=iField.set(localInstant,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
UNKNOWN ASTNode type : catch (IllegalFieldValueException ex) {
  if (monthOfYear != 2 || dayOfMonth != 29) {
    throw ex;
  }
  instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,28,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
  if (instant >= iCutoverMillis) {
    throw ex;
  }
}

========
int offset=this.iZone.getOffset(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 0
TESTING : time_3
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapSummer_addZero
  - org.joda.time.TestDateTimeZoneCutover::testPeriod
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Gaza
Failing tests: 9
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 0
TESTING : time_3
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapSummer_addZero
  - org.joda.time.TestDateTimeZoneCutover::testPeriod
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Gaza
Failing tests: 9
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instantLocal^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instantLocal^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instantUTC-offset;
if((instantUTC^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instantUTC^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instantUTC-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instantUTC^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=val1-offset;
if((val1^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-val2;
if((instant^diff)<0&&(instant^val2)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((val1^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=val1-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-val2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((val1^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^val2)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return diff;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetToAdd(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=iField.add(instant+diff,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
instant+=offset;
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalInstantException(instant,getZone().getID());
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
instant-=diff;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,offset,ERA_VALUE,ERA_VALUE);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff){
return getWeeksInYear(offset-1);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return 1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff>=instant){
return iTimeField?instant:instant-diff;
}else {
return earlierOrLater?instant+diff:instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return diff<0?-year:year;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return year;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
id=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
convId=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Timeout!
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy/src/test/java/org/joda/time/TestMutableDateTime_Adds.java

# FAILING TESTS: 1
TIMEOUT : 1800000
===========
locations= [<org.joda.time.MutableDateTime,785>, <org.joda.time.MutableDateTime,786>, <org.joda.time.chrono.ZonedChronology,351>, <org.joda.time.chrono.ZonedChronology,352>, <org.joda.time.chrono.ZonedChronology,354>, <org.joda.time.chrono.ZonedChronology,357>, <org.joda.time.DateTimeZone,931>, <org.joda.time.field.ImpreciseDateTimeField,183>, <org.joda.time.chrono.ZonedChronology,315>, <org.joda.time.chrono.ZonedChronology,316>, <org.joda.time.chrono.ZonedChronology,317>, <org.joda.time.tz.CachedDateTimeZone,202>, <org.joda.time.chrono.ZonedChronology,341>, <org.joda.time.chrono.ZonedChronology,342>, <org.joda.time.chrono.ZonedChronology,344>, <org.joda.time.chrono.ZonedChronology,347>, <org.joda.time.chrono.BasicYearDateTimeField,60>, <org.joda.time.chrono.BasicGJChronology,190>, <org.joda.time.chrono.BasicMonthOfYearDateTimeField,94>, <org.joda.time.MutableDateTime,660>, <org.joda.time.MutableDateTime,661>, <org.joda.time.MutableDateTime,351>, <org.joda.time.MutableDateTime,353>, <org.joda.time.format.DateTimeFormatterBuilder,1962>, <org.joda.time.format.DateTimeFormatterBuilder,1963>, <org.joda.time.format.DateTimeFormatterBuilder,1964>, <org.joda.time.format.DateTimeFormatterBuilder,1971>, <org.joda.time.base.BaseDateTime,223>, <org.joda.time.base.BaseDateTime,225>, <org.joda.time.format.FormatUtils,68>, <org.joda.time.format.FormatUtils,74>, <org.joda.time.format.FormatUtils,75>, <org.joda.time.format.FormatUtils,77>, <org.joda.time.format.FormatUtils,78>, <org.joda.time.MutableDateTime,639>, <org.joda.time.MutableDateTime,640>, <org.joda.time.MutableDateTime,702>, <org.joda.time.MutableDateTime,703>, <org.joda.time.MutableDateTime,723>, <org.joda.time.MutableDateTime,724>, <org.joda.time.MutableDateTime,764>, <org.joda.time.MutableDateTime,765>, <org.joda.time.format.DateTimeFormatterBuilder,2158>, <org.joda.time.format.DateTimeFormatterBuilder,2157>, <org.joda.time.format.DateTimeFormatterBuilder,2164>, <org.joda.time.format.DateTimeFormatterBuilder,2165>, <org.joda.time.format.DateTimeFormatterBuilder,2166>, <org.joda.time.format.DateTimeFormatterBuilder,2169>, <org.joda.time.format.DateTimeFormatterBuilder,2170>, <org.joda.time.format.DateTimeFormatterBuilder,2174>, <org.joda.time.format.DateTimeFormatterBuilder,2175>, <org.joda.time.format.DateTimeFormatterBuilder,2176>, <org.joda.time.format.DateTimeFormatterBuilder,2178>, <org.joda.time.format.DateTimeFormatterBuilder,2179>, <org.joda.time.format.DateTimeFormatterBuilder,2182>, <org.joda.time.format.DateTimeFormatterBuilder,2183>, <org.joda.time.format.DateTimeFormatterBuilder,2184>, <org.joda.time.field.PreciseDurationDateTimeField,128>, <org.joda.time.format.DateTimeFormatterBuilder,2667>, <org.joda.time.format.ISODateTimeFormat,725>, <org.joda.time.format.DateTimeFormatterBuilder,1913>, <org.joda.time.format.DateTimeFormatterBuilder,1916>, <org.joda.time.format.DateTimeFormatterBuilder,1917>, <org.joda.time.format.DateTimeFormatterBuilder,1946>, <org.joda.time.format.DateTimeFormatterBuilder,1947>, <org.joda.time.format.DateTimeFormatterBuilder,1951>, <org.joda.time.format.DateTimeFormatterBuilder,1959>, <org.joda.time.format.DateTimeFormatterBuilder,1961>, <org.joda.time.format.DateTimeFormatterBuilder,2150>, <org.joda.time.format.DateTimeFormatterBuilder,2153>, <org.joda.time.MutableDateTime,1229>, <org.joda.time.field.PreciseDurationDateTimeField,127>, <org.joda.time.DateTimeFieldType,522>, <org.joda.time.format.FormatUtils,63>, <org.joda.time.format.FormatUtils,64>, <org.joda.time.format.FormatUtils,66>, <org.joda.time.format.FormatUtils,80>, <org.joda.time.format.FormatUtils,82>, <org.joda.time.format.FormatUtils,83>, <org.joda.time.format.FormatUtils,87>, <org.joda.time.format.FormatUtils,90>, <org.joda.time.format.FormatUtils,67>, <org.joda.time.chrono.BasicGJChronology,121>, <org.joda.time.chrono.BasicGJChronology,140>, <org.joda.time.format.DateTimeFormatterBuilder,1475>, <org.joda.time.format.DateTimeFormatterBuilder,1476>, <org.joda.time.format.DateTimeFormatterBuilder,1479>, <org.joda.time.format.DateTimeFormatterBuilder,1480>, <org.joda.time.format.DateTimeFormatterBuilder,1218>, <org.joda.time.format.DateTimeFormatterBuilder,1219>, <org.joda.time.format.DateTimeFormatterBuilder,2654>, <org.joda.time.format.DateTimeFormatterBuilder,2660>, <org.joda.time.format.DateTimeFormatterBuilder,2661>, <org.joda.time.format.DateTimeFormatterBuilder,2665>, <org.joda.time.format.DateTimeFormatterBuilder,2670>, <org.joda.time.format.DateTimeFormatterBuilder,2671>, <org.joda.time.format.DateTimeFormatterBuilder,2672>, <org.joda.time.format.DateTimeFormatterBuilder,2674>, <org.joda.time.format.DateTimeFormatter,469>, <org.joda.time.format.DateTimeFormatter,470>, <org.joda.time.format.DateTimeFormatter,471>, <org.joda.time.format.DateTimeFormatter,472>, <org.joda.time.format.DateTimeFormatter,592>, <org.joda.time.format.DateTimeFormatter,593>, <org.joda.time.format.DateTimeFormatter,594>, <org.joda.time.format.DateTimeFormatter,628>, <org.joda.time.format.DateTimeFormatter,629>, <org.joda.time.format.DateTimeFormatter,632>, <org.joda.time.format.DateTimeFormatter,633>, <org.joda.time.format.DateTimeFormatter,634>, <org.joda.time.format.DateTimeFormatter,635>, <org.joda.time.format.DateTimeFormatter,641>, <org.joda.time.format.DateTimeFormatter,642>, <org.joda.time.format.DateTimeFormatter,667>, <org.joda.time.format.DateTimeFormatter,668>, <org.joda.time.format.DateTimeFormatter,671>, <org.joda.time.format.FormatUtils,50>, <org.joda.time.format.FormatUtils,62>, <org.joda.time.format.FormatUtils,92>, <org.joda.time.DateTimeFieldType,524>, <org.joda.time.DateTimeUtils,199>, <org.joda.time.DateTimeUtils,200>, <org.joda.time.DateTimeUtils,203>, <org.joda.time.DateTimeFieldType,520>, <org.joda.time.DateTimeUtils,196>, <org.joda.time.DateTimeFieldType,516>, <org.joda.time.chrono.GregorianChronology,213>, <org.joda.time.format.FormatUtils,31>, <org.joda.time.DateTimeUtils,181>, <org.joda.time.DateTimeUtils,178>, <org.joda.time.format.DateTimeFormatterBuilder,153>, <org.joda.time.format.DateTimeFormatterBuilder,154>, <org.joda.time.format.DateTimeFormatterBuilder,155>, <org.joda.time.format.DateTimeFormatterBuilder,217>, <org.joda.time.format.DateTimeFormatterBuilder,220>, <org.joda.time.format.DateTimeFormatterBuilder,257>, <org.joda.time.format.DateTimeFormatterBuilder,258>, <org.joda.time.format.DateTimeFormatterBuilder,305>, <org.joda.time.format.DateTimeFormatterBuilder,308>, <org.joda.time.format.DateTimeFormatterBuilder,311>, <org.joda.time.format.DateTimeFormatterBuilder,312>, <org.joda.time.format.DateTimeFormatterBuilder,319>, <org.joda.time.format.DateTimeFormatterBuilder,321>, <org.joda.time.format.DateTimeFormatterBuilder,322>, <org.joda.time.format.DateTimeFormatterBuilder,326>, <org.joda.time.format.DateTimeFormatterBuilder,328>, <org.joda.time.format.DateTimeFormatterBuilder,345>, <org.joda.time.format.DateTimeFormatterBuilder,346>, <org.joda.time.format.DateTimeFormatterBuilder,347>, <org.joda.time.format.DateTimeFormatterBuilder,357>, <org.joda.time.format.DateTimeFormatterBuilder,360>, <org.joda.time.format.DateTimeFormatterBuilder,383>, <org.joda.time.format.DateTimeFormatterBuilder,384>, <org.joda.time.format.DateTimeFormatterBuilder,385>, <org.joda.time.format.DateTimeFormatterBuilder,386>, <org.joda.time.format.DateTimeFormatterBuilder,464>, <org.joda.time.format.DateTimeFormatterBuilder,467>, <org.joda.time.format.DateTimeFormatterBuilder,470>, <org.joda.time.format.DateTimeFormatterBuilder,570>, <org.joda.time.format.DateTimeFormatterBuilder,573>, <org.joda.time.format.DateTimeFormatterBuilder,576>, <org.joda.time.format.DateTimeFormatterBuilder,579>, <org.joda.time.format.DateTimeFormatterBuilder,597>, <org.joda.time.format.DateTimeFormatterBuilder,614>, <org.joda.time.format.DateTimeFormatterBuilder,631>, <org.joda.time.format.DateTimeFormatterBuilder,685>, <org.joda.time.format.DateTimeFormatterBuilder,765>, <org.joda.time.format.DateTimeFormatterBuilder,785>, <org.joda.time.format.DateTimeFormatterBuilder,795>, <org.joda.time.format.DateTimeFormatterBuilder,807>, <org.joda.time.format.DateTimeFormatterBuilder,1091>, <org.joda.time.format.DateTimeFormatterBuilder,1150>, <org.joda.time.format.DateTimeFormatterBuilder,1171>, <org.joda.time.format.DateTimeFormatterBuilder,2623>, <org.joda.time.format.DateTimeFormatterBuilder,2624>, <org.joda.time.format.DateTimeFormatterBuilder,2730>, <org.joda.time.format.DateTimeFormatterBuilder,2763>, <org.joda.time.format.DateTimeFormatterBuilder,2770>, <org.joda.time.format.DateTimeFormatterBuilder,2778>, <org.joda.time.format.DateTimeFormatterBuilder,2779>, <org.joda.time.format.DateTimeFormatterBuilder,2780>, <org.joda.time.format.DateTimeFormatterBuilder,2783>, <org.joda.time.format.DateTimeFormatter,164>, <org.joda.time.format.DateTimeFormatter,182>, <org.joda.time.format.ISODateTimeFormat,662>, <org.joda.time.format.ISODateTimeFormat,784>, <org.joda.time.format.ISODateTimeFormat,995>, <org.joda.time.format.ISODateTimeFormat,1033>, <org.joda.time.format.ISODateTimeFormat,1138>, <org.joda.time.format.ISODateTimeFormat,1139>, <org.joda.time.format.ISODateTimeFormat,1140>, <org.joda.time.format.ISODateTimeFormat,1141>, <org.joda.time.format.ISODateTimeFormat,1142>, <org.joda.time.format.ISODateTimeFormat,1143>, <org.joda.time.format.ISODateTimeFormat,1144>, <org.joda.time.format.ISODateTimeFormat,1145>, <org.joda.time.format.ISODateTimeFormat,1146>, <org.joda.time.format.ISODateTimeFormat,1147>, <org.joda.time.format.ISODateTimeFormat,1148>, <org.joda.time.format.ISODateTimeFormat,1149>]
======================org.joda.time.MutableDateTime,785
========
setEndMillis(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setStartMillis(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setChronology(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
add(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
setValues(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.MutableDateTime,786
Find no block!
org.joda.time.chrono.ZonedChronology,351
UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantUTC^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantUTC^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((val1^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((val1^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^val2)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("Specified date does not exist");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==null){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return 1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0||offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==Integer.MIN_VALUE){
return subtract(instant,(long)value);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff){
return getWeeksInYear(offset-1);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&diff<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&instant<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instant<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(diff<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>Long.MIN_VALUE){
return instant-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
return instant;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<=diff){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==offset){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset==diff){
return add(instant,i_months);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff){
return iField.getMinimumValue(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.getMaximumValue(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant==0||diff==0){
return this;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return (int)(instant%DateTimeConstants.MILLIS_PER_DAY);
}else {
return (DateTimeConstants.MILLIS_PER_DAY-1)+(int)((instant+1)%DateTimeConstants.MILLIS_PER_DAY);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff||instant>=serialVersionUID){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("The offset cannot be zero");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset==0){
return DateTimeZone.UTC;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0){
return this;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<diff){
return prev;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,0,getMaximumValue());
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&offset<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+offset);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&offset<0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+offset);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>Long.MIN_VALUE){
return prev-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.get(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.isLeap(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.getLeapAmount(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return getYear(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff>=serialVersionUID){
return iTimeField?instant:instant-diff;
}else {
return earlierOrLater?instant+diff:instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,1,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getYearMonthDayMillis(offset,1,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant+=offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
instant=getYearMonthDayMillis(offset,1,diff);
instant+=offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return instant%diff;
}else {
return (instant+1)%iUnitMillis+iUnitMillis-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),null,null);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant+diff<instant){
instant=gregorianToJulian(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant-diff>=instant){
instant=julianToGregorian(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
id=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
convId=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<-3){
return 7+(int)((daysSince19700101+4)%7);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
daysSince19700101=(instant-(DateTimeConstants.MILLIS_PER_DAY-1))/DateTimeConstants.MILLIS_PER_DAY;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return (int)((instant/getUnitMillis())%diff);
}else {
return iRange-1+(int)(((instant+1)/getUnitMillis())%iRange);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<diff&&(instant^offset)<0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<offset){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
FieldUtils.verifyValueBounds(this,offset,DateTimeConstants.BCE,DateTimeConstants.CE);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return instant-instant%instant;
}else {
instant+=1;
return instant-instant%iUnitMillis-iUnitMillis;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
instant+=1;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>0){
instant-=1;
return instant-instant%instant+iUnitMillis;
}else {
return instant-instant%iUnitMillis;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
instant-=1;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalInstantException("Illegal instant due to time zone offset transition ("+iZone);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff<=serialVersionUID-instant){
return serialVersionUID;
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID-instant<=diff){
return serialVersionUID;
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalInstantException(serialVersionUID,iZone.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(diff),new IllegalInstantException(serialVersionUID,iZone.getID()).getMessage());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
new IllegalFieldValueException(iField.getType(),Integer.valueOf(diff),new IllegalInstantException(serialVersionUID,iZone.getID()).getMessage()).initCause(new IllegalInstantException(serialVersionUID,iZone.getID()));
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
serialVersionUID=iField.set(localInstant,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
UNKNOWN ASTNode type : catch (IllegalFieldValueException ex) {
  if (monthOfYear != 2 || dayOfMonth != 29) {
    throw ex;
  }
  instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,28,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
  if (instant >= iCutoverMillis) {
    throw ex;
  }
}

========
int offset=this.iZone.getOffset(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 0
TESTING : time_3
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapSummer_addZero
  - org.joda.time.TestDateTimeZoneCutover::testPeriod
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Gaza
Failing tests: 9
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 0
TESTING : time_3
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapSummer_addZero
  - org.joda.time.TestDateTimeZoneCutover::testPeriod
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Gaza
Failing tests: 9
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instantLocal^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instantLocal^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instantUTC-offset;
if((instantUTC^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instantUTC^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instantUTC-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instantUTC^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=val1-offset;
if((val1^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-val2;
if((instant^diff)<0&&(instant^val2)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((val1^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=val1-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-val2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((val1^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^val2)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return diff;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetToAdd(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=iField.add(instant+diff,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
instant+=offset;
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalInstantException(instant,getZone().getID());
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
instant-=diff;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,offset,ERA_VALUE,ERA_VALUE);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff){
return getWeeksInYear(offset-1);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return 1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff>=instant){
return iTimeField?instant:instant-diff;
}else {
return earlierOrLater?instant+diff:instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return diff<0?-year:year;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return year;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
id=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
convId=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<diff&&(instant^offset)<0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddMonths_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Timeout!
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy/src/test/java/org/joda/time/TestMutableDateTime_Adds.java

# FAILING TESTS: 1
TIMEOUT : 1800000
===========
locations= [<org.joda.time.MutableDateTime,785>, <org.joda.time.MutableDateTime,786>, <org.joda.time.chrono.ZonedChronology,351>, <org.joda.time.chrono.ZonedChronology,352>, <org.joda.time.chrono.ZonedChronology,354>, <org.joda.time.chrono.ZonedChronology,357>, <org.joda.time.DateTimeZone,931>, <org.joda.time.field.ImpreciseDateTimeField,183>, <org.joda.time.chrono.ZonedChronology,315>, <org.joda.time.chrono.ZonedChronology,316>, <org.joda.time.chrono.ZonedChronology,317>, <org.joda.time.tz.CachedDateTimeZone,202>, <org.joda.time.chrono.ZonedChronology,341>, <org.joda.time.chrono.ZonedChronology,342>, <org.joda.time.chrono.ZonedChronology,344>, <org.joda.time.chrono.ZonedChronology,347>, <org.joda.time.chrono.BasicYearDateTimeField,60>, <org.joda.time.chrono.BasicGJChronology,190>, <org.joda.time.chrono.BasicMonthOfYearDateTimeField,94>, <org.joda.time.MutableDateTime,660>, <org.joda.time.MutableDateTime,661>, <org.joda.time.MutableDateTime,351>, <org.joda.time.MutableDateTime,353>, <org.joda.time.format.DateTimeFormatterBuilder,1962>, <org.joda.time.format.DateTimeFormatterBuilder,1963>, <org.joda.time.format.DateTimeFormatterBuilder,1964>, <org.joda.time.format.DateTimeFormatterBuilder,1971>, <org.joda.time.base.BaseDateTime,223>, <org.joda.time.base.BaseDateTime,225>, <org.joda.time.format.FormatUtils,68>, <org.joda.time.format.FormatUtils,74>, <org.joda.time.format.FormatUtils,75>, <org.joda.time.format.FormatUtils,77>, <org.joda.time.format.FormatUtils,78>, <org.joda.time.MutableDateTime,639>, <org.joda.time.MutableDateTime,640>, <org.joda.time.MutableDateTime,702>, <org.joda.time.MutableDateTime,703>, <org.joda.time.MutableDateTime,723>, <org.joda.time.MutableDateTime,724>, <org.joda.time.MutableDateTime,764>, <org.joda.time.MutableDateTime,765>, <org.joda.time.format.DateTimeFormatterBuilder,2158>, <org.joda.time.format.DateTimeFormatterBuilder,2157>, <org.joda.time.format.DateTimeFormatterBuilder,2164>, <org.joda.time.format.DateTimeFormatterBuilder,2165>, <org.joda.time.format.DateTimeFormatterBuilder,2166>, <org.joda.time.format.DateTimeFormatterBuilder,2169>, <org.joda.time.format.DateTimeFormatterBuilder,2170>, <org.joda.time.format.DateTimeFormatterBuilder,2174>, <org.joda.time.format.DateTimeFormatterBuilder,2175>, <org.joda.time.format.DateTimeFormatterBuilder,2176>, <org.joda.time.format.DateTimeFormatterBuilder,2178>, <org.joda.time.format.DateTimeFormatterBuilder,2179>, <org.joda.time.format.DateTimeFormatterBuilder,2182>, <org.joda.time.format.DateTimeFormatterBuilder,2183>, <org.joda.time.format.DateTimeFormatterBuilder,2184>, <org.joda.time.field.PreciseDurationDateTimeField,128>, <org.joda.time.format.DateTimeFormatterBuilder,2667>, <org.joda.time.format.ISODateTimeFormat,725>, <org.joda.time.format.DateTimeFormatterBuilder,1913>, <org.joda.time.format.DateTimeFormatterBuilder,1916>, <org.joda.time.format.DateTimeFormatterBuilder,1917>, <org.joda.time.format.DateTimeFormatterBuilder,1946>, <org.joda.time.format.DateTimeFormatterBuilder,1947>, <org.joda.time.format.DateTimeFormatterBuilder,1951>, <org.joda.time.format.DateTimeFormatterBuilder,1959>, <org.joda.time.format.DateTimeFormatterBuilder,1961>, <org.joda.time.format.DateTimeFormatterBuilder,2150>, <org.joda.time.format.DateTimeFormatterBuilder,2153>, <org.joda.time.MutableDateTime,1229>, <org.joda.time.field.PreciseDurationDateTimeField,127>, <org.joda.time.DateTimeFieldType,522>, <org.joda.time.format.FormatUtils,63>, <org.joda.time.format.FormatUtils,64>, <org.joda.time.format.FormatUtils,66>, <org.joda.time.format.FormatUtils,80>, <org.joda.time.format.FormatUtils,82>, <org.joda.time.format.FormatUtils,83>, <org.joda.time.format.FormatUtils,87>, <org.joda.time.format.FormatUtils,90>, <org.joda.time.format.FormatUtils,67>, <org.joda.time.chrono.BasicGJChronology,121>, <org.joda.time.chrono.BasicGJChronology,140>, <org.joda.time.format.DateTimeFormatterBuilder,1475>, <org.joda.time.format.DateTimeFormatterBuilder,1476>, <org.joda.time.format.DateTimeFormatterBuilder,1479>, <org.joda.time.format.DateTimeFormatterBuilder,1480>, <org.joda.time.format.DateTimeFormatterBuilder,1218>, <org.joda.time.format.DateTimeFormatterBuilder,1219>, <org.joda.time.format.DateTimeFormatterBuilder,2654>, <org.joda.time.format.DateTimeFormatterBuilder,2660>, <org.joda.time.format.DateTimeFormatterBuilder,2661>, <org.joda.time.format.DateTimeFormatterBuilder,2665>, <org.joda.time.format.DateTimeFormatterBuilder,2670>, <org.joda.time.format.DateTimeFormatterBuilder,2671>, <org.joda.time.format.DateTimeFormatterBuilder,2672>, <org.joda.time.format.DateTimeFormatterBuilder,2674>, <org.joda.time.format.DateTimeFormatter,469>, <org.joda.time.format.DateTimeFormatter,470>, <org.joda.time.format.DateTimeFormatter,471>, <org.joda.time.format.DateTimeFormatter,472>, <org.joda.time.format.DateTimeFormatter,592>, <org.joda.time.format.DateTimeFormatter,593>, <org.joda.time.format.DateTimeFormatter,594>, <org.joda.time.format.DateTimeFormatter,628>, <org.joda.time.format.DateTimeFormatter,629>, <org.joda.time.format.DateTimeFormatter,632>, <org.joda.time.format.DateTimeFormatter,633>, <org.joda.time.format.DateTimeFormatter,634>, <org.joda.time.format.DateTimeFormatter,635>, <org.joda.time.format.DateTimeFormatter,641>, <org.joda.time.format.DateTimeFormatter,642>, <org.joda.time.format.DateTimeFormatter,667>, <org.joda.time.format.DateTimeFormatter,668>, <org.joda.time.format.DateTimeFormatter,671>, <org.joda.time.format.FormatUtils,50>, <org.joda.time.format.FormatUtils,62>, <org.joda.time.format.FormatUtils,92>, <org.joda.time.DateTimeFieldType,524>, <org.joda.time.DateTimeUtils,199>, <org.joda.time.DateTimeUtils,200>, <org.joda.time.DateTimeUtils,203>, <org.joda.time.DateTimeFieldType,520>, <org.joda.time.DateTimeUtils,196>, <org.joda.time.DateTimeFieldType,516>, <org.joda.time.chrono.GregorianChronology,213>, <org.joda.time.format.FormatUtils,31>, <org.joda.time.DateTimeUtils,181>, <org.joda.time.DateTimeUtils,178>, <org.joda.time.format.DateTimeFormatterBuilder,153>, <org.joda.time.format.DateTimeFormatterBuilder,154>, <org.joda.time.format.DateTimeFormatterBuilder,155>, <org.joda.time.format.DateTimeFormatterBuilder,217>, <org.joda.time.format.DateTimeFormatterBuilder,220>, <org.joda.time.format.DateTimeFormatterBuilder,257>, <org.joda.time.format.DateTimeFormatterBuilder,258>, <org.joda.time.format.DateTimeFormatterBuilder,305>, <org.joda.time.format.DateTimeFormatterBuilder,308>, <org.joda.time.format.DateTimeFormatterBuilder,311>, <org.joda.time.format.DateTimeFormatterBuilder,312>, <org.joda.time.format.DateTimeFormatterBuilder,319>, <org.joda.time.format.DateTimeFormatterBuilder,321>, <org.joda.time.format.DateTimeFormatterBuilder,322>, <org.joda.time.format.DateTimeFormatterBuilder,326>, <org.joda.time.format.DateTimeFormatterBuilder,328>, <org.joda.time.format.DateTimeFormatterBuilder,345>, <org.joda.time.format.DateTimeFormatterBuilder,346>, <org.joda.time.format.DateTimeFormatterBuilder,347>, <org.joda.time.format.DateTimeFormatterBuilder,357>, <org.joda.time.format.DateTimeFormatterBuilder,360>, <org.joda.time.format.DateTimeFormatterBuilder,383>, <org.joda.time.format.DateTimeFormatterBuilder,384>, <org.joda.time.format.DateTimeFormatterBuilder,385>, <org.joda.time.format.DateTimeFormatterBuilder,386>, <org.joda.time.format.DateTimeFormatterBuilder,464>, <org.joda.time.format.DateTimeFormatterBuilder,467>, <org.joda.time.format.DateTimeFormatterBuilder,470>, <org.joda.time.format.DateTimeFormatterBuilder,570>, <org.joda.time.format.DateTimeFormatterBuilder,573>, <org.joda.time.format.DateTimeFormatterBuilder,576>, <org.joda.time.format.DateTimeFormatterBuilder,579>, <org.joda.time.format.DateTimeFormatterBuilder,597>, <org.joda.time.format.DateTimeFormatterBuilder,614>, <org.joda.time.format.DateTimeFormatterBuilder,631>, <org.joda.time.format.DateTimeFormatterBuilder,685>, <org.joda.time.format.DateTimeFormatterBuilder,765>, <org.joda.time.format.DateTimeFormatterBuilder,785>, <org.joda.time.format.DateTimeFormatterBuilder,795>, <org.joda.time.format.DateTimeFormatterBuilder,807>, <org.joda.time.format.DateTimeFormatterBuilder,1091>, <org.joda.time.format.DateTimeFormatterBuilder,1150>, <org.joda.time.format.DateTimeFormatterBuilder,1171>, <org.joda.time.format.DateTimeFormatterBuilder,2623>, <org.joda.time.format.DateTimeFormatterBuilder,2624>, <org.joda.time.format.DateTimeFormatterBuilder,2730>, <org.joda.time.format.DateTimeFormatterBuilder,2763>, <org.joda.time.format.DateTimeFormatterBuilder,2770>, <org.joda.time.format.DateTimeFormatterBuilder,2778>, <org.joda.time.format.DateTimeFormatterBuilder,2779>, <org.joda.time.format.DateTimeFormatterBuilder,2780>, <org.joda.time.format.DateTimeFormatterBuilder,2783>, <org.joda.time.format.DateTimeFormatter,164>, <org.joda.time.format.DateTimeFormatter,182>, <org.joda.time.format.ISODateTimeFormat,662>, <org.joda.time.format.ISODateTimeFormat,784>, <org.joda.time.format.ISODateTimeFormat,995>, <org.joda.time.format.ISODateTimeFormat,1033>, <org.joda.time.format.ISODateTimeFormat,1138>, <org.joda.time.format.ISODateTimeFormat,1139>, <org.joda.time.format.ISODateTimeFormat,1140>, <org.joda.time.format.ISODateTimeFormat,1141>, <org.joda.time.format.ISODateTimeFormat,1142>, <org.joda.time.format.ISODateTimeFormat,1143>, <org.joda.time.format.ISODateTimeFormat,1144>, <org.joda.time.format.ISODateTimeFormat,1145>, <org.joda.time.format.ISODateTimeFormat,1146>, <org.joda.time.format.ISODateTimeFormat,1147>, <org.joda.time.format.ISODateTimeFormat,1148>, <org.joda.time.format.ISODateTimeFormat,1149>]
======================org.joda.time.MutableDateTime,785
========
setEndMillis(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setStartMillis(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setChronology(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
add(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
setValues(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.MutableDateTime,786
Find no block!
org.joda.time.chrono.ZonedChronology,351
UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantUTC^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantUTC^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((val1^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((val1^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^val2)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("Specified date does not exist");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==null){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return 1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0||offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==Integer.MIN_VALUE){
return subtract(instant,(long)value);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff){
return getWeeksInYear(offset-1);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&diff<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&instant<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instant<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(diff<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>Long.MIN_VALUE){
return instant-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
return instant;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<=diff){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==offset){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset==diff){
return add(instant,i_months);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff){
return iField.getMinimumValue(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.getMaximumValue(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant==0||diff==0){
return this;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return (int)(instant%DateTimeConstants.MILLIS_PER_DAY);
}else {
return (DateTimeConstants.MILLIS_PER_DAY-1)+(int)((instant+1)%DateTimeConstants.MILLIS_PER_DAY);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff||instant>=serialVersionUID){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("The offset cannot be zero");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset==0){
return DateTimeZone.UTC;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0){
return this;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<diff){
return prev;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,0,getMaximumValue());
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&offset<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+offset);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&offset<0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+offset);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>Long.MIN_VALUE){
return prev-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.get(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.isLeap(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.getLeapAmount(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return getYear(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff>=serialVersionUID){
return iTimeField?instant:instant-diff;
}else {
return earlierOrLater?instant+diff:instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,1,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getYearMonthDayMillis(offset,1,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant+=offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
instant=getYearMonthDayMillis(offset,1,diff);
instant+=offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return instant%diff;
}else {
return (instant+1)%iUnitMillis+iUnitMillis-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),null,null);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant+diff<instant){
instant=gregorianToJulian(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant-diff>=instant){
instant=julianToGregorian(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
id=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
convId=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<-3){
return 7+(int)((daysSince19700101+4)%7);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
daysSince19700101=(instant-(DateTimeConstants.MILLIS_PER_DAY-1))/DateTimeConstants.MILLIS_PER_DAY;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return (int)((instant/getUnitMillis())%diff);
}else {
return iRange-1+(int)(((instant+1)/getUnitMillis())%iRange);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<diff&&(instant^offset)<0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<offset){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
FieldUtils.verifyValueBounds(this,offset,DateTimeConstants.BCE,DateTimeConstants.CE);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return instant-instant%instant;
}else {
instant+=1;
return instant-instant%iUnitMillis-iUnitMillis;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
instant+=1;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>0){
instant-=1;
return instant-instant%instant+iUnitMillis;
}else {
return instant-instant%iUnitMillis;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
instant-=1;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalInstantException("Illegal instant due to time zone offset transition ("+iZone);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff<=serialVersionUID-instant){
return serialVersionUID;
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID-instant<=diff){
return serialVersionUID;
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalInstantException(serialVersionUID,iZone.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(diff),new IllegalInstantException(serialVersionUID,iZone.getID()).getMessage());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
new IllegalFieldValueException(iField.getType(),Integer.valueOf(diff),new IllegalInstantException(serialVersionUID,iZone.getID()).getMessage()).initCause(new IllegalInstantException(serialVersionUID,iZone.getID()));
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
serialVersionUID=iField.set(localInstant,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
UNKNOWN ASTNode type : catch (IllegalFieldValueException ex) {
  if (monthOfYear != 2 || dayOfMonth != 29) {
    throw ex;
  }
  instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,28,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
  if (instant >= iCutoverMillis) {
    throw ex;
  }
}

========
int offset=this.iZone.getOffset(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 0
TESTING : time_3
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapSummer_addZero
  - org.joda.time.TestDateTimeZoneCutover::testPeriod
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Gaza
Failing tests: 9
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 0
TESTING : time_3
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapSummer_addZero
  - org.joda.time.TestDateTimeZoneCutover::testPeriod
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Gaza
Failing tests: 9
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instantLocal^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instantLocal^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instantUTC-offset;
if((instantUTC^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instantUTC^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instantUTC-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instantUTC^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=val1-offset;
if((val1^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-val2;
if((instant^diff)<0&&(instant^val2)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((val1^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=val1-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-val2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((val1^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^val2)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return diff;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetToAdd(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=iField.add(instant+diff,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
instant+=offset;
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalInstantException(instant,getZone().getID());
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
instant-=diff;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,offset,ERA_VALUE,ERA_VALUE);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff){
return getWeeksInYear(offset-1);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return 1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff>=instant){
return iTimeField?instant:instant-diff;
}else {
return earlierOrLater?instant+diff:instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return diff<0?-year:year;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return year;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
id=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
convId=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<diff&&(instant^offset)<0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return (offset>diff||value<1)?getMaximumValue(instant):maxLessOne;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return maxLessOne;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getWeekyear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return value;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0||offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.get(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.isLeap(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.getLeapAmount(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff<instant){
return prev;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
FieldUtils.verifyValueBounds(this,diff,1,getMaximumValue());
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=transition-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-diff;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if(instant<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff||instant>=nextTransition(serialVersionUID)+serialVersionUID-serialVersionUID){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID==0||diff==0){
return this;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>Long.MIN_VALUE){
return instant-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
return instant;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return (int)((instant-diff)/DateTimeConstants.MILLIS_PER_DAY)+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return yearStart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return MILLIS_PER_DAY;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
diff-=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
FieldUtils.verifyValueBounds(this,offset,1,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
FieldUtils.verifyValueBounds(this,offset,0,getMaximumValue());
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().addWrapField(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().set(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.get(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().roundFloor(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().roundCeiling(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().roundHalfFloor(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().roundHalfCeiling(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().roundHalfEven(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().remainder(instant),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return iLeapMonth;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(serialVersionUID,"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=super.add(instant,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,get(instant),offset,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-MILLIS_PER_SECOND;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
int diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&diff<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if(instant<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddYears_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Timeout!
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_1
IN COMMENT TEST CASE: org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
IN COMMENT TEST CASE: /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy/src/test/java/org/joda/time/TestMutableDateTime_Adds.java

# FAILING TESTS: 1
TIMEOUT : 1800000
===========
locations= [<org.joda.time.MutableDateTime,785>, <org.joda.time.MutableDateTime,786>, <org.joda.time.chrono.ZonedChronology,351>, <org.joda.time.chrono.ZonedChronology,352>, <org.joda.time.chrono.ZonedChronology,354>, <org.joda.time.chrono.ZonedChronology,357>, <org.joda.time.DateTimeZone,931>, <org.joda.time.field.ImpreciseDateTimeField,183>, <org.joda.time.chrono.ZonedChronology,315>, <org.joda.time.chrono.ZonedChronology,316>, <org.joda.time.chrono.ZonedChronology,317>, <org.joda.time.tz.CachedDateTimeZone,202>, <org.joda.time.chrono.ZonedChronology,341>, <org.joda.time.chrono.ZonedChronology,342>, <org.joda.time.chrono.ZonedChronology,344>, <org.joda.time.chrono.ZonedChronology,347>, <org.joda.time.chrono.BasicYearDateTimeField,60>, <org.joda.time.chrono.BasicGJChronology,190>, <org.joda.time.chrono.BasicMonthOfYearDateTimeField,94>, <org.joda.time.MutableDateTime,660>, <org.joda.time.MutableDateTime,661>, <org.joda.time.MutableDateTime,351>, <org.joda.time.MutableDateTime,353>, <org.joda.time.format.DateTimeFormatterBuilder,1962>, <org.joda.time.format.DateTimeFormatterBuilder,1963>, <org.joda.time.format.DateTimeFormatterBuilder,1964>, <org.joda.time.format.DateTimeFormatterBuilder,1971>, <org.joda.time.base.BaseDateTime,223>, <org.joda.time.base.BaseDateTime,225>, <org.joda.time.format.FormatUtils,68>, <org.joda.time.format.FormatUtils,74>, <org.joda.time.format.FormatUtils,75>, <org.joda.time.format.FormatUtils,77>, <org.joda.time.format.FormatUtils,78>, <org.joda.time.MutableDateTime,639>, <org.joda.time.MutableDateTime,640>, <org.joda.time.MutableDateTime,702>, <org.joda.time.MutableDateTime,703>, <org.joda.time.MutableDateTime,723>, <org.joda.time.MutableDateTime,724>, <org.joda.time.MutableDateTime,764>, <org.joda.time.MutableDateTime,765>, <org.joda.time.format.DateTimeFormatterBuilder,2158>, <org.joda.time.format.DateTimeFormatterBuilder,2157>, <org.joda.time.format.DateTimeFormatterBuilder,2164>, <org.joda.time.format.DateTimeFormatterBuilder,2165>, <org.joda.time.format.DateTimeFormatterBuilder,2166>, <org.joda.time.format.DateTimeFormatterBuilder,2169>, <org.joda.time.format.DateTimeFormatterBuilder,2170>, <org.joda.time.format.DateTimeFormatterBuilder,2174>, <org.joda.time.format.DateTimeFormatterBuilder,2175>, <org.joda.time.format.DateTimeFormatterBuilder,2176>, <org.joda.time.format.DateTimeFormatterBuilder,2178>, <org.joda.time.format.DateTimeFormatterBuilder,2179>, <org.joda.time.format.DateTimeFormatterBuilder,2182>, <org.joda.time.format.DateTimeFormatterBuilder,2183>, <org.joda.time.format.DateTimeFormatterBuilder,2184>, <org.joda.time.field.PreciseDurationDateTimeField,128>, <org.joda.time.format.DateTimeFormatterBuilder,2667>, <org.joda.time.format.ISODateTimeFormat,725>, <org.joda.time.format.DateTimeFormatterBuilder,1913>, <org.joda.time.format.DateTimeFormatterBuilder,1916>, <org.joda.time.format.DateTimeFormatterBuilder,1917>, <org.joda.time.format.DateTimeFormatterBuilder,1946>, <org.joda.time.format.DateTimeFormatterBuilder,1947>, <org.joda.time.format.DateTimeFormatterBuilder,1951>, <org.joda.time.format.DateTimeFormatterBuilder,1959>, <org.joda.time.format.DateTimeFormatterBuilder,1961>, <org.joda.time.format.DateTimeFormatterBuilder,2150>, <org.joda.time.format.DateTimeFormatterBuilder,2153>, <org.joda.time.MutableDateTime,1229>, <org.joda.time.field.PreciseDurationDateTimeField,127>, <org.joda.time.DateTimeFieldType,522>, <org.joda.time.format.FormatUtils,63>, <org.joda.time.format.FormatUtils,64>, <org.joda.time.format.FormatUtils,66>, <org.joda.time.format.FormatUtils,80>, <org.joda.time.format.FormatUtils,82>, <org.joda.time.format.FormatUtils,83>, <org.joda.time.format.FormatUtils,87>, <org.joda.time.format.FormatUtils,90>, <org.joda.time.format.FormatUtils,67>, <org.joda.time.chrono.BasicGJChronology,121>, <org.joda.time.chrono.BasicGJChronology,140>, <org.joda.time.format.DateTimeFormatterBuilder,1475>, <org.joda.time.format.DateTimeFormatterBuilder,1476>, <org.joda.time.format.DateTimeFormatterBuilder,1479>, <org.joda.time.format.DateTimeFormatterBuilder,1480>, <org.joda.time.format.DateTimeFormatterBuilder,1218>, <org.joda.time.format.DateTimeFormatterBuilder,1219>, <org.joda.time.format.DateTimeFormatterBuilder,2654>, <org.joda.time.format.DateTimeFormatterBuilder,2660>, <org.joda.time.format.DateTimeFormatterBuilder,2661>, <org.joda.time.format.DateTimeFormatterBuilder,2665>, <org.joda.time.format.DateTimeFormatterBuilder,2670>, <org.joda.time.format.DateTimeFormatterBuilder,2671>, <org.joda.time.format.DateTimeFormatterBuilder,2672>, <org.joda.time.format.DateTimeFormatterBuilder,2674>, <org.joda.time.format.DateTimeFormatter,469>, <org.joda.time.format.DateTimeFormatter,470>, <org.joda.time.format.DateTimeFormatter,471>, <org.joda.time.format.DateTimeFormatter,472>, <org.joda.time.format.DateTimeFormatter,592>, <org.joda.time.format.DateTimeFormatter,593>, <org.joda.time.format.DateTimeFormatter,594>, <org.joda.time.format.DateTimeFormatter,628>, <org.joda.time.format.DateTimeFormatter,629>, <org.joda.time.format.DateTimeFormatter,632>, <org.joda.time.format.DateTimeFormatter,633>, <org.joda.time.format.DateTimeFormatter,634>, <org.joda.time.format.DateTimeFormatter,635>, <org.joda.time.format.DateTimeFormatter,641>, <org.joda.time.format.DateTimeFormatter,642>, <org.joda.time.format.DateTimeFormatter,667>, <org.joda.time.format.DateTimeFormatter,668>, <org.joda.time.format.DateTimeFormatter,671>, <org.joda.time.format.FormatUtils,50>, <org.joda.time.format.FormatUtils,62>, <org.joda.time.format.FormatUtils,92>, <org.joda.time.DateTimeFieldType,524>, <org.joda.time.DateTimeUtils,199>, <org.joda.time.DateTimeUtils,200>, <org.joda.time.DateTimeUtils,203>, <org.joda.time.DateTimeFieldType,520>, <org.joda.time.DateTimeUtils,196>, <org.joda.time.DateTimeFieldType,516>, <org.joda.time.chrono.GregorianChronology,213>, <org.joda.time.format.FormatUtils,31>, <org.joda.time.DateTimeUtils,181>, <org.joda.time.DateTimeUtils,178>, <org.joda.time.format.DateTimeFormatterBuilder,153>, <org.joda.time.format.DateTimeFormatterBuilder,154>, <org.joda.time.format.DateTimeFormatterBuilder,155>, <org.joda.time.format.DateTimeFormatterBuilder,217>, <org.joda.time.format.DateTimeFormatterBuilder,220>, <org.joda.time.format.DateTimeFormatterBuilder,257>, <org.joda.time.format.DateTimeFormatterBuilder,258>, <org.joda.time.format.DateTimeFormatterBuilder,305>, <org.joda.time.format.DateTimeFormatterBuilder,308>, <org.joda.time.format.DateTimeFormatterBuilder,311>, <org.joda.time.format.DateTimeFormatterBuilder,312>, <org.joda.time.format.DateTimeFormatterBuilder,319>, <org.joda.time.format.DateTimeFormatterBuilder,321>, <org.joda.time.format.DateTimeFormatterBuilder,322>, <org.joda.time.format.DateTimeFormatterBuilder,326>, <org.joda.time.format.DateTimeFormatterBuilder,328>, <org.joda.time.format.DateTimeFormatterBuilder,345>, <org.joda.time.format.DateTimeFormatterBuilder,346>, <org.joda.time.format.DateTimeFormatterBuilder,347>, <org.joda.time.format.DateTimeFormatterBuilder,357>, <org.joda.time.format.DateTimeFormatterBuilder,360>, <org.joda.time.format.DateTimeFormatterBuilder,383>, <org.joda.time.format.DateTimeFormatterBuilder,384>, <org.joda.time.format.DateTimeFormatterBuilder,385>, <org.joda.time.format.DateTimeFormatterBuilder,386>, <org.joda.time.format.DateTimeFormatterBuilder,464>, <org.joda.time.format.DateTimeFormatterBuilder,467>, <org.joda.time.format.DateTimeFormatterBuilder,470>, <org.joda.time.format.DateTimeFormatterBuilder,570>, <org.joda.time.format.DateTimeFormatterBuilder,573>, <org.joda.time.format.DateTimeFormatterBuilder,576>, <org.joda.time.format.DateTimeFormatterBuilder,579>, <org.joda.time.format.DateTimeFormatterBuilder,597>, <org.joda.time.format.DateTimeFormatterBuilder,614>, <org.joda.time.format.DateTimeFormatterBuilder,631>, <org.joda.time.format.DateTimeFormatterBuilder,685>, <org.joda.time.format.DateTimeFormatterBuilder,765>, <org.joda.time.format.DateTimeFormatterBuilder,785>, <org.joda.time.format.DateTimeFormatterBuilder,795>, <org.joda.time.format.DateTimeFormatterBuilder,807>, <org.joda.time.format.DateTimeFormatterBuilder,1091>, <org.joda.time.format.DateTimeFormatterBuilder,1150>, <org.joda.time.format.DateTimeFormatterBuilder,1171>, <org.joda.time.format.DateTimeFormatterBuilder,2623>, <org.joda.time.format.DateTimeFormatterBuilder,2624>, <org.joda.time.format.DateTimeFormatterBuilder,2730>, <org.joda.time.format.DateTimeFormatterBuilder,2763>, <org.joda.time.format.DateTimeFormatterBuilder,2770>, <org.joda.time.format.DateTimeFormatterBuilder,2778>, <org.joda.time.format.DateTimeFormatterBuilder,2779>, <org.joda.time.format.DateTimeFormatterBuilder,2780>, <org.joda.time.format.DateTimeFormatterBuilder,2783>, <org.joda.time.format.DateTimeFormatter,164>, <org.joda.time.format.DateTimeFormatter,182>, <org.joda.time.format.ISODateTimeFormat,662>, <org.joda.time.format.ISODateTimeFormat,784>, <org.joda.time.format.ISODateTimeFormat,995>, <org.joda.time.format.ISODateTimeFormat,1033>, <org.joda.time.format.ISODateTimeFormat,1138>, <org.joda.time.format.ISODateTimeFormat,1139>, <org.joda.time.format.ISODateTimeFormat,1140>, <org.joda.time.format.ISODateTimeFormat,1141>, <org.joda.time.format.ISODateTimeFormat,1142>, <org.joda.time.format.ISODateTimeFormat,1143>, <org.joda.time.format.ISODateTimeFormat,1144>, <org.joda.time.format.ISODateTimeFormat,1145>, <org.joda.time.format.ISODateTimeFormat,1146>, <org.joda.time.format.ISODateTimeFormat,1147>, <org.joda.time.format.ISODateTimeFormat,1148>, <org.joda.time.format.ISODateTimeFormat,1149>]
======================org.joda.time.MutableDateTime,785
========
setEndMillis(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setStartMillis(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setChronology(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
add(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
setValues(getChronology().hours().add(getMillis(),hours));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.MutableDateTime,786
Find no block!
org.joda.time.chrono.ZonedChronology,351
UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  start=instant;
}

UNKNOWN ASTNode type : catch (IllegalArgumentException e) {
  end=instant;
}

UNKNOWN ASTNode type : catch (ArithmeticException e) {
  end=instant;
}

========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instantUTC^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantUTC^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((val1^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((val1^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^val2)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("Specified date does not exist");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==null){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return 1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0||offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==Integer.MIN_VALUE){
return subtract(instant,(long)value);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff){
return getWeeksInYear(offset-1);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&diff<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&instant<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instant<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(diff<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>Long.MIN_VALUE){
return instant-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
return instant;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<=diff){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==offset){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset==diff){
return add(instant,i_months);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff){
return iField.getMinimumValue(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.getMaximumValue(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant==0||diff==0){
return this;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return (int)(instant%DateTimeConstants.MILLIS_PER_DAY);
}else {
return (DateTimeConstants.MILLIS_PER_DAY-1)+(int)((instant+1)%DateTimeConstants.MILLIS_PER_DAY);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff||instant>=serialVersionUID){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("The offset cannot be zero");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset==0){
return DateTimeZone.UTC;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0){
return this;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<diff){
return prev;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,0,getMaximumValue());
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&offset<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+offset);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&offset<0){
throw new IllegalArgumentException("Positive hours must not have negative minutes: "+offset);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>Long.MIN_VALUE){
return prev-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.get(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.isLeap(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.getLeapAmount(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff==1){
return getYear(instant+DateTimeConstants.MILLIS_PER_WEEK);
}else if(week>51){
return getYear(instant-(2*DateTimeConstants.MILLIS_PER_WEEK));
}else {
return getYear(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff>=serialVersionUID){
return iTimeField?instant:instant-diff;
}else {
return earlierOrLater?instant+diff:instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,offset,1,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=getYearMonthDayMillis(offset,1,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant+=offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
instant=getYearMonthDayMillis(offset,1,diff);
instant+=offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return instant%diff;
}else {
return (instant+1)%iUnitMillis+iUnitMillis-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(offset),null,null);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant+diff<instant){
instant=gregorianToJulian(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant-diff>=instant){
instant=julianToGregorian(instant);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
id=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
convId=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID<-3){
return 7+(int)((daysSince19700101+4)%7);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
daysSince19700101=(instant-(DateTimeConstants.MILLIS_PER_DAY-1))/DateTimeConstants.MILLIS_PER_DAY;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset=offset*DateTimeConstants.MILLIS_PER_HOUR;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>23){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_MINUTE;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
offset+=offset*DateTimeConstants.MILLIS_PER_SECOND;
offset-=2;
if((instant^diff)<0&&(instant^offset)<0){
if(offset>59){
return ~offset;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return (int)((instant/getUnitMillis())%diff);
}else {
return iRange-1+(int)(((instant+1)/getUnitMillis())%iRange);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<diff&&(instant^offset)<0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<offset){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
FieldUtils.verifyValueBounds(this,offset,DateTimeConstants.BCE,DateTimeConstants.CE);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=0){
return instant-instant%instant;
}else {
instant+=1;
return instant-instant%iUnitMillis-iUnitMillis;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
instant+=1;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(instant>0){
instant-=1;
return instant-instant%instant+iUnitMillis;
}else {
return instant-instant%iUnitMillis;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
instant-=1;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalInstantException("Illegal instant due to time zone offset transition ("+iZone);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
if(diff<=serialVersionUID-instant){
return serialVersionUID;
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID-instant<=diff){
return serialVersionUID;
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalInstantException(serialVersionUID,iZone.getID());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalFieldValueException(iField.getType(),Integer.valueOf(diff),new IllegalInstantException(serialVersionUID,iZone.getID()).getMessage());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instant^diff)<0&&(instant^offset)<0){
new IllegalFieldValueException(iField.getType(),Integer.valueOf(diff),new IllegalInstantException(serialVersionUID,iZone.getID()).getMessage()).initCause(new IllegalInstantException(serialVersionUID,iZone.getID()));
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
serialVersionUID=iField.set(localInstant,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
UNKNOWN ASTNode type : catch (IllegalFieldValueException ex) {
  if (monthOfYear != 2 || dayOfMonth != 29) {
    throw ex;
  }
  instant=iGregorianChronology.getDateTimeMillis(year,monthOfYear,28,hourOfDay,minuteOfHour,secondOfMinute,millisOfSecond);
  if (instant >= iCutoverMillis) {
    throw ex;
  }
}

========
int offset=this.iZone.getOffset(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 0
TESTING : time_3
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapSummer_addZero
  - org.joda.time.TestDateTimeZoneCutover::testPeriod
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Gaza
Failing tests: 9
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffset(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 0
TESTING : time_3
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
  - org.joda.time.TestMutableDateTime_Adds::testAddWeeks_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddYears_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAddMonths_int_dstOverlapSummer_addZero
  - org.joda.time.TestMutableDateTime_Adds::testAdd_DurationFieldType_int_dstOverlapSummer_addZero
  - org.joda.time.TestDateTimeZoneCutover::testPeriod
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDay_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_plusDayMidGap_Gaza
  - org.joda.time.TestDateTimeZoneCutover::test_DateTime_minusDay_Gaza
Failing tests: 9
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instantLocal^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instantLocal^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instantLocal^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Long.MIN_VALUE cannot be negated");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instantUTC-offset;
if((instantUTC^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instantUTC^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instantUTC-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instantUTC^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instantUTC^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instantLocal;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=val1-offset;
if((val1^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-val2;
if((instant^diff)<0&&(instant^val2)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((val1^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=val1-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-val2;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((val1^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(val1^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^val2)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return diff;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^serialVersionUID)<0){
throw new ArithmeticException("The calculation caused an overflow: "+instant);
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetToAdd(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return instant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
instant=iField.add(instant+diff,offset);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
instant+=offset;
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new IllegalInstantException(instant,getZone().getID());
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return localInstant;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
instant-=diff;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
FieldUtils.verifyValueBounds(this,offset,ERA_VALUE,ERA_VALUE);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff){
return getWeeksInYear(offset-1);
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return 1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff>=instant){
return iTimeField?instant:instant-diff;
}else {
return earlierOrLater?instant+diff:instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return diff<0?-year:year;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return year;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
id=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
convId=printOffset(offset);
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<diff&&(instant^offset)<0){
System.out.println("*d* Error in "+iZone.getID());
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return (offset>diff||value<1)?getMaximumValue(instant):maxLessOne;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return maxLessOne;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getYear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getWeekyear(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return value;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff==0||offset==0){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.get(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.isLeap(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>=diff){
return iField.getLeapAmount(instant);
}else error
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(diff<instant){
return prev;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
FieldUtils.verifyValueBounds(this,diff,1,getMaximumValue());
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=transition-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-diff;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if(instant<diff&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant<diff||instant>=nextTransition(serialVersionUID)+serialVersionUID-serialVersionUID){
return instant;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(serialVersionUID==0||diff==0){
return this;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
if(instant>Long.MIN_VALUE){
return instant-1;
}
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
return instant;
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return (int)((instant-diff)/DateTimeConstants.MILLIS_PER_DAY)+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return yearStart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return MILLIS_PER_DAY;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
diff-=offset*DateTimeConstants.MILLIS_PER_SECOND;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COUNT THESE===> Subject [_name=time, _id=3, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.TestMutableDateTime_Adds testAddDays_int_dstOverlapWinter_addZero_purify_2
TESTING : org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
  - org.joda.time.TestMutableDateTime_Adds::testAddDays_int_dstOverlapWinter_addZero_purify_2
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
FieldUtils.verifyValueBounds(this,offset,1,diff);
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
FieldUtils.verifyValueBounds(this,offset,0,getMaximumValue());
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().add(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().addWrapField(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(instant,null);
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.getOffsetFromLocal(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
checkLimits(getWrappedField().set(instant,offset),"resulting");
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offset=this.iZone.get(instant);
long diff=instant-offset;
if((instant^diff)<0&&(instant^offset)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
return offset;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_2/time/time_3_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
Timeout!
