java version "1.7.0_231"
OpenJDK Runtime Environment (rhel-2.6.19.1.el7_6-x86_64 u231-b01)
OpenJDK 64-Bit Server VM (build 24.231-b01, mixed mode)
Check out 1adb1e69 to /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/ OK
Init local repository...................................................... OK
Tag post-fix revision...................................................... OK
Run post-checkout hook..................................................... OK
Initialize fixed program version........................................... OK
Apply patch................................................................ OK
Initialize buggy program version........................................... OK
Diff 1adb1e69:6bf5bba0..................................................... OK
Apply patch................................................................ OK
Tag pre-fix revision....................................................... OK
Check out program version: Time-7b......................................... OK
Running ant (compile)...................................................... OK
Running ant (compile.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Running ant (run.dev.tests)................................................ OK
Failing tests: 2
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_tokyo_endOfYear
/home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5
PURIFY IS FALSE
=================================================
Project : time_7	start : 19/10/19 14:22

readFailedTest: path is /mnt/nfs/work1/brun/mmotwani/SimFix/d4j-info/failed_tests/time/7.txt#ATTEMPTS: 2

# FAILING TESTS: 2
TIMEOUT : 18000000
===========
locations= [<org.joda.time.field.BaseDurationField,150>, <org.joda.time.DateTimeFieldType,378>, <org.joda.time.chrono.BasicGJChronology,121>, <org.joda.time.chrono.BasicGJChronology,140>, <org.joda.time.field.FieldUtils,218>, <org.joda.time.base.BaseDateTime,223>, <org.joda.time.base.BaseDateTime,225>, <org.joda.time.format.DateTimeFormat,147>, <org.joda.time.format.DateTimeFormat,149>, <org.joda.time.format.DateTimeFormat,170>, <org.joda.time.format.DateTimeFormat,400>, <org.joda.time.format.DateTimeFormat,401>, <org.joda.time.format.DateTimeFormat,403>, <org.joda.time.format.DateTimeFormat,404>, <org.joda.time.format.DateTimeFormat,405>, <org.joda.time.format.DateTimeFormat,406>, <org.joda.time.format.DateTimeFormat,408>, <org.joda.time.format.DateTimeFormat,409>, <org.joda.time.format.DateTimeFormat,412>, <org.joda.time.format.DateTimeFormat,414>, <org.joda.time.format.DateTimeFormat,479>, <org.joda.time.format.DateTimeFormat,486>, <org.joda.time.format.DateTimeFormat,488>, <org.joda.time.format.DateTimeFormat,490>, <org.joda.time.format.DateTimeFormat,491>, <org.joda.time.format.DateTimeFormat,549>, <org.joda.time.format.DateTimeFormat,550>, <org.joda.time.format.DateTimeFormat,551>, <org.joda.time.format.DateTimeFormat,563>, <org.joda.time.format.DateTimeFormat,574>, <org.joda.time.format.DateTimeFormat,576>, <org.joda.time.format.DateTimeFormat,577>, <org.joda.time.format.DateTimeFormat,579>, <org.joda.time.format.DateTimeFormat,580>, <org.joda.time.format.DateTimeFormat,583>, <org.joda.time.format.DateTimeFormat,585>, <org.joda.time.format.DateTimeFormat,586>, <org.joda.time.format.DateTimeFormat,587>, <org.joda.time.format.DateTimeFormat,596>, <org.joda.time.format.DateTimeFormat,598>, <org.joda.time.format.DateTimeFormat,600>, <org.joda.time.format.DateTimeFormat,601>, <org.joda.time.format.DateTimeFormat,603>, <org.joda.time.format.DateTimeFormat,611>, <org.joda.time.format.DateTimeFormat,613>, <org.joda.time.format.DateTimeFormat,614>, <org.joda.time.format.DateTimeFormat,616>, <org.joda.time.format.DateTimeFormat,621>, <org.joda.time.format.DateTimeFormat,622>, <org.joda.time.format.DateTimeFormat,674>, <org.joda.time.format.DateTimeFormat,677>, <org.joda.time.format.DateTimeFormat,678>, <org.joda.time.format.DateTimeFormat,679>, <org.joda.time.format.DateTimeFormat,680>, <org.joda.time.format.DateTimeFormat,681>, <org.joda.time.format.DateTimeFormat,682>, <org.joda.time.format.DateTimeFormat,683>, <org.joda.time.format.DateTimeFormat,685>, <org.joda.time.format.DateTimeFormat,687>, <org.joda.time.format.DateTimeFormat,688>, <org.joda.time.format.DateTimeFormatterBuilder,549>, <org.joda.time.format.DateTimeFormatterBuilder,552>, <org.joda.time.format.DateTimeFormatterBuilder,976>, <org.joda.time.format.DateTimeFormatter,190>, <org.joda.time.format.DateTimeFormatter,193>, <org.joda.time.format.DateTimeFormatter,204>, <org.joda.time.format.DateTimeFormatter,701>, <org.joda.time.format.DateTimeFormatter,702>, <org.joda.time.format.DateTimeFormatter,706>, <org.joda.time.format.DateTimeFormatter,707>, <org.joda.time.format.DateTimeFormatter,708>, <org.joda.time.format.DateTimeFormatter,709>, <org.joda.time.format.DateTimeFormatter,710>, <org.joda.time.format.DateTimeFormatter,712>, <org.joda.time.format.DateTimeFormatter,714>, <org.joda.time.format.DateTimeFormatter,715>, <org.joda.time.format.ISODateTimeFormat,897>, <org.joda.time.format.ISODateTimeFormat,898>, <org.joda.time.format.ISODateTimeFormat,903>, <org.joda.time.format.ISODateTimeFormat,935>, <org.joda.time.format.ISODateTimeFormat,936>, <org.joda.time.format.ISODateTimeFormat,941>, <org.joda.time.format.ISODateTimeFormat,971>, <org.joda.time.format.ISODateTimeFormat,972>, <org.joda.time.format.ISODateTimeFormat,977>, <org.joda.time.format.DateTimeFormatterBuilder,1754>, <org.joda.time.format.DateTimeFormatterBuilder,1755>, <org.joda.time.format.DateTimeFormatterBuilder,1756>, <org.joda.time.format.DateTimeFormatterBuilder,1757>, <org.joda.time.format.DateTimeFormatterBuilder,1748>, <org.joda.time.format.DateTimeFormatterBuilder,1760>, <org.joda.time.format.DateTimeFormatterBuilder,1822>, <org.joda.time.IllegalFieldValueException,108>, <org.joda.time.IllegalFieldValueException,109>, <org.joda.time.IllegalFieldValueException,110>, <org.joda.time.IllegalFieldValueException,111>, <org.joda.time.IllegalFieldValueException,112>, <org.joda.time.IllegalFieldValueException,113>, <org.joda.time.IllegalFieldValueException,114>, <org.joda.time.IllegalFieldValueException,115>, <org.joda.time.IllegalFieldValueException,116>, <org.joda.time.IllegalFieldValueException,117>, <org.joda.time.IllegalFieldValueException,41>, <org.joda.time.IllegalFieldValueException,44>, <org.joda.time.IllegalFieldValueException,50>, <org.joda.time.IllegalFieldValueException,53>, <org.joda.time.IllegalFieldValueException,59>, <org.joda.time.IllegalFieldValueException,63>, <org.joda.time.IllegalFieldValueException,314>, <org.joda.time.IllegalFieldValueException,323>, <org.joda.time.IllegalFieldValueException,325>, <org.joda.time.IllegalFieldValueException,326>, <org.joda.time.IllegalFieldValueException,328>, <org.joda.time.format.DateTimeParserBucket,358>, <org.joda.time.format.DateTimeParserBucket,359>, <org.joda.time.format.DateTimeParserBucket,373>, <org.joda.time.format.DateTimeParserBucket,374>, <org.joda.time.format.DateTimeParserBucket,375>, <org.joda.time.format.DateTimeParserBucket,377>, <org.joda.time.format.DateTimeParserBucket,421>, <org.joda.time.format.DateTimeParserBucket,422>, <org.joda.time.format.DateTimeParserBucket,423>, <org.joda.time.format.DateTimeParserBucket,518>, <org.joda.time.MutableDateTime,351>, <org.joda.time.MutableDateTime,353>, <org.joda.time.DateTimeZone,910>, <org.joda.time.DateTimeZone,912>, <org.joda.time.DateTimeZone,913>, <org.joda.time.DateTimeZone,915>, <org.joda.time.DateTimeZone,928>, <org.joda.time.DateTimeZone,938>, <org.joda.time.chrono.BasicChronology,584>, <org.joda.time.chrono.BasicChronology,585>, <org.joda.time.chrono.BasicChronology,586>, <org.joda.time.chrono.ZonedChronology,118>, <org.joda.time.chrono.ZonedChronology,138>, <org.joda.time.chrono.ZonedChronology,139>, <org.joda.time.chrono.ZonedChronology,140>, <org.joda.time.chrono.ZonedChronology,141>, <org.joda.time.chrono.ZonedChronology,144>, <org.joda.time.format.DateTimeFormatterBuilder,444>, <org.joda.time.format.DateTimeFormatter,129>, <org.joda.time.format.DateTimeFormatter,130>, <org.joda.time.format.DateTimeFormatter,131>, <org.joda.time.format.DateTimeFormatter,132>, <org.joda.time.format.DateTimeFormatter,133>, <org.joda.time.format.DateTimeFormatter,134>, <org.joda.time.format.DateTimeFormatter,135>, <org.joda.time.format.DateTimeFormatter,136>, <org.joda.time.format.DateTimeFormatter,137>, <org.joda.time.format.DateTimeFormatter,138>, <org.joda.time.format.ISODateTimeFormat,1442>, <org.joda.time.format.ISODateTimeFormat,1443>, <org.joda.time.format.ISODateTimeFormat,1449>, <org.joda.time.format.DateTimeFormatterBuilder,1401>, <org.joda.time.format.DateTimeFormatterBuilder,1402>, <org.joda.time.format.DateTimeFormatterBuilder,1405>, <org.joda.time.DateTimeZone,952>, <org.joda.time.DateTimeZone,953>, <org.joda.time.DateTimeZone,955>, <org.joda.time.DateTimeZone,958>, <org.joda.time.DateTimeZone,979>, <org.joda.time.DateTimeZone,980>, <org.joda.time.DateTimeZone,981>, <org.joda.time.DateTimeZone,982>, <org.joda.time.DateTimeZone,983>, <org.joda.time.DateTimeZone,985>, <org.joda.time.DateTimeZone,1002>, <org.joda.time.DateTimeZone,1004>, <org.joda.time.DateTimeZone,1006>, <org.joda.time.DateTimeZone,1035>, <org.joda.time.DateTimeZone,1037>, <org.joda.time.DateTimeZone,1040>, <org.joda.time.tz.DateTimeZoneBuilder,1535>, <org.joda.time.tz.DateTimeZoneBuilder,1536>, <org.joda.time.tz.DateTimeZoneBuilder,1574>, <org.joda.time.tz.DateTimeZoneBuilder,1611>, <org.joda.time.tz.DateTimeZoneBuilder,1612>, <org.joda.time.tz.DateTimeZoneBuilder,1613>, <org.joda.time.chrono.BaseChronology,132>, <org.joda.time.chrono.BaseChronology,133>, <org.joda.time.chrono.BaseChronology,134>, <org.joda.time.chrono.BaseChronology,135>, <org.joda.time.chrono.BaseChronology,136>, <org.joda.time.chrono.BaseChronology,137>, <org.joda.time.chrono.BaseChronology,138>, <org.joda.time.chrono.AssembledChronology,133>, <org.joda.time.chrono.AssembledChronology,136>, <org.joda.time.chrono.GJChronology,269>, <org.joda.time.chrono.GJChronology,270>, <org.joda.time.chrono.GJChronology,279>, <org.joda.time.chrono.GJChronology,280>, <org.joda.time.chrono.GJChronology,105>, <org.joda.time.chrono.GJChronology,108>, <org.joda.time.chrono.GJChronology,83>, <org.joda.time.chrono.GJChronology,173>, <org.joda.time.chrono.GJChronology,189>, <org.joda.time.chrono.GJChronology,191>, <org.joda.time.chrono.GJChronology,192>, <org.joda.time.chrono.GJChronology,194>]
======================org.joda.time.field.BaseDurationField,150
org.joda.time.DateTimeFieldType,378
========
return str;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.BasicGJChronology,121
========
serialVersionUID=getYearMonthDayMillis(year,1,month);
if(isLeapYear(year)){
return MAX_DAYS_PER_MONTH_ARRAY[month-1];
}else {
return MIN_DAYS_PER_MONTH_ARRAY[month-1];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
serialVersionUID+=month;
if(isLeapYear(year)){
return MAX_DAYS_PER_MONTH_ARRAY[month-1];
}else {
return MIN_DAYS_PER_MONTH_ARRAY[month-1];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isSupported(year)){
return MAX_DAYS_PER_MONTH_ARRAY[month-1];
}else {
return MIN_DAYS_PER_MONTH_ARRAY[month-1];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getFieldType(year)){
return MAX_DAYS_PER_MONTH_ARRAY[month-1];
}else {
return MIN_DAYS_PER_MONTH_ARRAY[month-1];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(get(year)){
return MAX_DAYS_PER_MONTH_ARRAY[month-1];
}else {
return MIN_DAYS_PER_MONTH_ARRAY[month-1];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,year,0,getMaximumValue());
if(isLeapYear(year)){
return MAX_DAYS_PER_MONTH_ARRAY[month-1];
}else {
return MIN_DAYS_PER_MONTH_ARRAY[month-1];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
month=year;
if(isLeapYear(year)){
return MAX_DAYS_PER_MONTH_ARRAY[month-1];
}else {
return MIN_DAYS_PER_MONTH_ARRAY[month-1];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.BasicGJChronology,140
========
serialVersionUID=getYearMonthDayMillis(year,1,month);
if(isLeapYear(year)){
return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month-1];
}else {
return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month-1];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
serialVersionUID+=month;
if(isLeapYear(year)){
return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month-1];
}else {
return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month-1];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isSupported(year)){
return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month-1];
}else {
return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month-1];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getFieldType(year)){
return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month-1];
}else {
return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month-1];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(get(year)){
return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month-1];
}else {
return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month-1];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,year,0,getMaximumValue());
if(isLeapYear(year)){
return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month-1];
}else {
return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month-1];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
month=year;
if(isLeapYear(year)){
return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month-1];
}else {
return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month-1];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.field.FieldUtils,218
========
if((value<lowerBound)||(value>upperBound)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(lowerBound),null,Integer.valueOf(field.getMaximumValue()));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((value<lowerBound)||(value>upperBound)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(field.getMinimumValue()),null);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((value<lowerBound)||(value>upperBound)){
throw new IllegalFieldValueException(DateTimeFieldType.year(),Integer.valueOf(value),null,null);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((value<lowerBound)||(value>upperBound)){
value++;
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
FieldUtils.verifyValueBounds(this,value,lowerBound,getMaximumValue());
if((value<lowerBound)||(value>upperBound)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)||(value>upperBound)){
value++;
throw new IllegalFieldValueException(DateTimeFieldType.year(),Integer.valueOf(value),null,null);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((value<lowerBound)||(value>upperBound)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),null,null);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((value<lowerBound)||(value>upperBound)){
if(upperBound==getValue(lowerBound)){
return this;
}
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)||(value>upperBound)){
throw new IllegalArgumentException("Field must not be null");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
super.setFieldInto(getValues(),field,upperBound);
if((value<lowerBound)||(value>upperBound)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,value,1,getMaximumValue());
if((value<lowerBound)||(value>upperBound)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)||(value>upperBound)){
if(lowerBound==0){
return ~value;
}
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)||(value>upperBound)){
if(lowerBound<=0){
return 0;
}
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lowerBound--;
if((value<lowerBound)||(value>upperBound)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((value<lowerBound)||(value>upperBound)){
if(lowerBound==getValue(value)){
return this;
}
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)||(value>upperBound)){
throw new IllegalArgumentException("Cannot convert period to duration as "+field.getName());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((value<lowerBound)||(value>upperBound)){
throw new ArithmeticException("Integer.MIN_VALUE cannot be negated");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)||field==null){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((value<lowerBound)||(value>upperBound)){
throw new IllegalArgumentException("Period does not support field \'"+field);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((value<lowerBound)||field==null){
throw new IllegalArgumentException("Period does not support field \'"+field);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((value<lowerBound)||(value>upperBound)){
if(value>=0){
return value/value;
}else {
return ((value+1)/iDivisor)-1;
}
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)||(value>upperBound)){
if(value>=0){
return value%lowerBound;
}else {
return (iDivisor-1)+((value+1)%iDivisor);
}
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)||(value>upperBound)){
if(value>=0){
return value/lowerBound;
}else {
return ((value+1)/iDivisor)-1;
}
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)||(value>upperBound)){
if(value>Integer.MAX_VALUE){
return ~value;
}
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)||(value>offset)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)||(value>upperBound)){
throw new IllegalArgumentException("The divisor must be at least 2");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((value<lowerBound)||(mode>mode)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)&&(value>upperBound)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(field!=null&&(value<ROUND_NONE||value>ROUND_HALF_EVEN)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(field!=null||(value>upperBound)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)||(value<ROUND_NONE||mode>ROUND_HALF_EVEN)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)||(mode>upperBound)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)||(ROUND_NONE>upperBound)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)||(value>mode)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)||(value>ROUND_HALF_EVEN)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)||(value>upperBound)){
throw new IllegalArgumentException("Illegal rounding mode: "+value);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
field=(value==ROUND_NONE?null:field);
if((value<lowerBound)||(value>upperBound)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lowerBound=(field==null?ROUND_NONE:value);
if((value<lowerBound)||(value>upperBound)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setMillis(getMillis());
if((value<lowerBound)||(value>upperBound)){
throw new IllegalFieldValueException(field.getType(),Integer.valueOf(value),Integer.valueOf(lowerBound),Integer.valueOf(upperBound));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((value<lowerBound)&&(value>upperBound)){
throw new IllegalArgumentException("Illegal rounding mode: "+value);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.joda.time.base.BaseDateTime,223
org.joda.time.base.BaseDateTime,225
Find no block!
org.joda.time.format.DateTimeFormat,147
Find no block!
org.joda.time.format.DateTimeFormat,149
Find no block!
org.joda.time.format.DateTimeFormat,170
org.joda.time.format.DateTimeFormat,400
========
case 'C' :

case 'G' :
builder.appendEraText();
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'a' :

case 'G' :
builder.appendEraText();
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'H' :

case 'G' :
builder.appendEraText();
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'K' :

case 'G' :
builder.appendEraText();
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 's' :

case 'G' :
builder.appendEraText();
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'E' :

case 'G' :
builder.appendEraText();
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'w' :

case 'G' :
builder.appendEraText();
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'y' :

case 'G' :
builder.appendEraText();
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'a' :

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'H' :

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'K' :

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 's' :

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'w' :

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'C' :
builder.appendYearOfEra(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'x' :

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'C' :
builder.appendWeekyear(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'y' :

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'C' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'e' :

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,tokenLen);
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'C' :
builder.appendTwoDigitWeekyear(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
indexRef[0]=iType;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iType=indexRef[0];
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TIME>=pattern.length()||(i+1)>=length<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<nextOffset){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length){
nameKeys[i+1]=(pattern+"-Summer").intern();
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<newLength){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<i){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<ruleSetCount){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<fieldIndex){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=~i;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iType=~i;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iType<transitions.length){
if(i>0){
return indexRef[i-1];
}
return "UTC";
}
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iType<transitions.length){
if(i>0){
return indexRef[i-1];
}
return 0;
}
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iType=~i;
if(iType<transitions.length){
if(i>0){
return indexRef[i-1];
}
return 0;
}
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length--;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length){
hasSignChar=true;
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length){
negative=pattern.charAt(length+i)=='-';
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length){
hasSignChar=true;
negative=pattern.charAt(length+i)=='-';

indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<=length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<position){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<=i){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<indicesIndex){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<suffixPos){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<max){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<est){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<transitions.length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iType=(i>=0)?(i+1):~i;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length){
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'){
break;
}
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length){
limit=Math.min(TIME+1,pattern.length()-i);
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length){
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'){
break;
}
limit=Math.min(TIME+1,pattern.length()-i);

indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<iFieldType){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<SECONDS_MILLIS){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<SECONDS_OPTIONAL_MILLIS){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length++;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<prev){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<end){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length){
negative=pattern.charAt(TIME+length)=='-';
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length){
if(length+1>=length||(c=pattern.charAt(TIME+length))<'0'||pattern.charAt(TIME+length)>'9'){
break;
}
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length){
limit=Math.min(length+1,pattern.length()-TIME);
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length){
negative=pattern.charAt(TIME+length)=='-';
if(length+1>=length||(c=pattern.charAt(TIME+length))<'0'||pattern.charAt(TIME+length)>'9'){
break;
}
limit=Math.min(length+1,pattern.length()-TIME);

indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'y' :

case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'a' :

case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'H' :

case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'K' :

case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 's' :

case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'E' :

case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'x' :
builder.appendCenturyOfEra(new DateTime().getWeekyear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'x' :

case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'x' :
builder.appendWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'x' :
builder.appendYearOfEra(new DateTime().getWeekyear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :
builder.appendTwoDigitWeekyear(new DateTime().getYear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'a' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'H' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'K' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 's' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
default :
builder.appendYearOfEra(new DateTime().getYear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :
builder.appendCenturyOfEra(new DateTime().getYear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'x' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :
builder.appendWeekyear(new DateTime().getYear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :
builder.appendFractionOfSecond(new DateTime().getYear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TIME>=pattern.length()||(i+1)>=length<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<nextOffset){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length){
nameKeys[i+1]=(pattern+"-Summer").intern();
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<i){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<newLength){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<fieldIndex){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<ruleSetCount){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=~i;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length<=0){
return 0;
}
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length--;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<=length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<position){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<=i){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length){
hasSignChar=true;
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length){
negative=pattern.charAt(length+i)=='-';
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length){
hasSignChar=true;
negative=pattern.charAt(length+i)=='-';

indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<transitions.length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iType=~i;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iType<transitions.length){
if(i>0){
return indexRef[i-1];
}
return "UTC";
}
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iType<transitions.length){
if(i>0){
return indexRef[i-1];
}
return 0;
}
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iType=~i;
if(iType<transitions.length){
if(i>0){
return indexRef[i-1];
}
return 0;
}
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<max){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<est){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iType=(i>=0)?(i+1):~i;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<indicesIndex){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<suffixPos){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super();
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
maxDigits=tokenLen;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iType=length;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<prev){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<end){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<iFieldType){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<SECONDS_MILLIS){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<SECONDS_OPTIONAL_MILLIS){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length++;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<maxDigits){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'x' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'y' :

case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'a' :

case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'H' :

case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'K' :

case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 's' :

case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'x' :
builder.appendCenturyOfEra(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'x' :

case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'x' :
builder.appendFractionOfSecond(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'e' :

case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'e' :

case 'x' :
builder.appendFractionOfSecond(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,tokenLen);
break;

case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'x' :
builder.appendTwoDigitWeekyear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'y' :
builder.appendWeekyear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'y' :

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'a' :

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'H' :

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'K' :

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 's' :

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'y' :
builder.appendCenturyOfEra(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'x' :

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'y' :
builder.appendFractionOfSecond(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'e' :

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'e' :

case 'y' :
builder.appendFractionOfSecond(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,tokenLen);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'y' :
builder.appendTwoDigitWeekyear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Y' :
builder.appendWeekyear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'y' :

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'a' :

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'H' :

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'K' :

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 's' :

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'Y' :
builder.appendCenturyOfEra(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'x' :

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Y' :
builder.appendFractionOfSecond(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'e' :

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'e' :

case 'Y' :
builder.appendFractionOfSecond(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,tokenLen);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Y' :
builder.appendTwoDigitWeekyear(tokenLen,maxDigits);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen==1){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen<0||length<=0){
throw new IllegalArgumentException();
}
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(indexRef==null){
throw new IllegalArgumentException("No parsers supplied");
}
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==1){
if(indexRef[0]==null){
throw new IllegalArgumentException("No parser supplied");
}
return append0(tokenLen,parsers[0]);
}
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new DateTimeParser[length][iType]=indexRef[i];
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen==18){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super();
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iType=TIME;
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iType=tokenLen;
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen!=2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen==0){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<bestValidPos){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
clearPrefix();
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=length;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=tokenLen;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen==length){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Y' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'x' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Y' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Y' :
builder.appendDayOfMonth(tokenLen);
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'a' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Y' :
builder.appendClockhourOfHalfday(tokenLen);
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'H' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Y' :
builder.appendClockhourOfDay(tokenLen);
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'K' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Y' :
builder.appendMinuteOfHour(tokenLen);
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 's' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Y' :
builder.appendDayOfYear(tokenLen);
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'w' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
return ~TIME;
}
case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
return ~i;
}
case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>=9){
TIME=Integer.parseInt(pattern.substring(TIME,position+=length));
}else {
int iType=position;
if(lenientParse){
i++;
}
try{
value=text.charAt(i++)-'0';
}catch (StringIndexOutOfBoundsException e) {
  return ~position;
}

position+=length;
while(i<position){
value=((value<<3)+(value<<1))+text.charAt(i++)-'0';
}
if(negative){
value=-value;
}
}
case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<bestValidPos){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
clearPrefix();
case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!maxDigits){
return ~TIME;
}
case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>=0&&TIME+length!=suffixPos){
return position;
}
case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Y' :
if(tokenLen==length){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen>=2){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(tokenLen>=0){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(tokenLen>=4){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendTimeZoneShortName(tokenLen);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen>=2){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(tokenLen>=0){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'M' :
builder.appendDayOfMonth(tokenLen);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'a' :

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'M' :
builder.appendClockhourOfHalfday(tokenLen);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'H' :

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'M' :
builder.appendClockhourOfDay(tokenLen);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'K' :

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'M' :
builder.appendMinuteOfHour(tokenLen);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 's' :

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'M' :
builder.appendDayOfYear(tokenLen);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'M' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'x' :

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'M' :
builder.appendWeekyear(tokenLen,TIME);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'y' :

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'M' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'e' :

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'M' :
builder.appendYearOfEra(tokenLen,TIME);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,tokenLen);
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'M' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,tokenLen);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'a' :

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'd' :
builder.appendClockhourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'H' :

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'd' :
builder.appendClockhourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'K' :

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'd' :
builder.appendMinuteOfHour(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 's' :

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'd' :
builder.appendDayOfYear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'x' :

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'y' :

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,tokenLen);
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'C' :

case 'a' :
builder.appendHalfdayOfDayText();
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'a' :

case 'a' :
builder.appendHalfdayOfDayText();
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'H' :

case 'a' :
builder.appendHalfdayOfDayText();
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'K' :

case 'a' :
builder.appendHalfdayOfDayText();
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 's' :

case 'a' :
builder.appendHalfdayOfDayText();
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'E' :

case 'a' :
builder.appendHalfdayOfDayText();
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'w' :

case 'a' :
builder.appendHalfdayOfDayText();
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'y' :

case 'a' :
builder.appendHalfdayOfDayText();
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'h' :
builder.appendDayOfMonth(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'a' :

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'H' :

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'h' :
builder.appendClockhourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'K' :

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'h' :
builder.appendMinuteOfHour(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 's' :

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'h' :
builder.appendDayOfYear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'x' :

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'y' :

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,tokenLen);
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'H' :
builder.appendDayOfMonth(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'a' :

case 'H' :
builder.appendHourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'H' :
builder.appendClockhourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'H' :

case 'H' :
builder.appendHourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'H' :
builder.appendClockhourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'K' :

case 'H' :
builder.appendHourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'H' :
builder.appendMinuteOfHour(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 's' :

case 'H' :
builder.appendHourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'H' :
builder.appendDayOfYear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

case 'H' :
builder.appendHourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'x' :

case 'H' :
builder.appendHourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'y' :

case 'H' :
builder.appendHourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :

case 'H' :
builder.appendHourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'k' :
builder.appendDayOfMonth(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'a' :

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'k' :
builder.appendClockhourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'H' :

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'K' :

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'k' :
builder.appendMinuteOfHour(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 's' :

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'k' :
builder.appendDayOfYear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'x' :

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'y' :

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'K' :
builder.appendDayOfMonth(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'a' :

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'K' :
builder.appendClockhourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'H' :

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'K' :
builder.appendClockhourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'K' :

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'K' :
builder.appendMinuteOfHour(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 's' :

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'K' :
builder.appendDayOfYear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'x' :

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'y' :

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'm' :
builder.appendDayOfMonth(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'a' :

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'm' :
builder.appendClockhourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'H' :

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'm' :
builder.appendClockhourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'K' :

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 's' :

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'm' :
builder.appendDayOfYear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'x' :

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'y' :

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 's' :
builder.appendDayOfMonth(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'a' :

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 's' :
builder.appendClockhourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'H' :

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 's' :
builder.appendClockhourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'K' :

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 's' :
builder.appendMinuteOfHour(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 's' :

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 's' :
builder.appendDayOfYear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'x' :

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'y' :

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'a' :

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'H' :

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'K' :

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 's' :

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'w' :

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'S' :
builder.appendYearOfEra(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'S' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'x' :

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'S' :
builder.appendWeekyear(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'y' :

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'S' :
builder.appendTwoDigitWeekyear(tokenLen,tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :
builder.appendDayOfMonth(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'a' :

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :
builder.appendClockhourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'H' :

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :
builder.appendClockhourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'K' :

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :
builder.appendMinuteOfHour(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 's' :

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :
builder.appendDayOfYear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'x' :

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'y' :

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen>=2){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(tokenLen>=0){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'E' :
builder.appendDayOfMonth(TIME);
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'a' :

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'E' :
builder.appendClockhourOfHalfday(TIME);
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'H' :

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'E' :
builder.appendClockhourOfDay(TIME);
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'K' :

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'E' :
builder.appendMinuteOfHour(TIME);
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 's' :

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'E' :
builder.appendDayOfYear(TIME);
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'E' :
builder.appendCenturyOfEra(TIME,tokenLen);
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'x' :

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'E' :
builder.appendWeekyear(TIME,TIME);
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'y' :

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'E' :
builder.appendFractionOfSecond(TIME,tokenLen);
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'e' :

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'E' :
builder.appendYearOfEra(TIME,TIME);
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'D' :
builder.appendDayOfMonth(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'a' :

case 'D' :
builder.appendDayOfYear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'D' :
builder.appendClockhourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'H' :

case 'D' :
builder.appendDayOfYear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'D' :
builder.appendClockhourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'K' :

case 'D' :
builder.appendDayOfYear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'D' :
builder.appendMinuteOfHour(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 's' :

case 'D' :
builder.appendDayOfYear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'w' :

case 'D' :
builder.appendDayOfYear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'x' :

case 'D' :
builder.appendDayOfYear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'y' :

case 'D' :
builder.appendDayOfYear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :

case 'D' :
builder.appendDayOfYear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,tokenLen);
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'w' :
builder.appendDayOfMonth(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'a' :

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'w' :
builder.appendClockhourOfHalfday(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'H' :

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'w' :
builder.appendClockhourOfDay(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'K' :

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'w' :
builder.appendMinuteOfHour(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 's' :

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'w' :
builder.appendDayOfYear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'x' :

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'y' :

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen>=2){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(tokenLen>=0){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'z' :
builder.appendDayOfMonth(TIME);
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'a' :

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'z' :
builder.appendClockhourOfHalfday(TIME);
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'H' :

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'z' :
builder.appendClockhourOfDay(TIME);
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'K' :

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'z' :
builder.appendMinuteOfHour(TIME);
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 's' :

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'z' :
builder.appendDayOfWeek(TIME);
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'E' :

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'z' :
builder.appendDayOfYear(TIME);
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'z' :
builder.appendCenturyOfEra(TIME,tokenLen);
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'x' :

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'z' :
builder.appendWeekyear(TIME,TIME);
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'y' :

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'z' :
builder.appendYearOfEra(TIME,TIME);
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(tokenLen==4){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(tokenLen==3){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(tokenLen==0){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'Z' :
builder.appendHourOfDay(TIME);
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'k' :

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Z' :
builder.appendHourOfHalfday(TIME);
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'm' :

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Z' :
builder.appendSecondOfMinute(TIME);
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'S' :

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Z' :
builder.appendDayOfWeek(TIME);
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'E' :

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Z' :
builder.appendDayOfYear(TIME);
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Z' :
builder.appendWeekyear(TIME,TIME);
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'y' :

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Z' :
builder.appendYearOfEra(TIME,TIME);
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'Z' :
builder.appendEraText();
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'C' :

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'Z' :
builder.appendHalfdayOfDayText();
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'h' :

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sub.length()==TIME){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(selectStyle(sub.charAt(0))==NONE&&selectStyle(sub.charAt(1))==NONE){
throw new IllegalArgumentException("Style \'--\' is invalid");
}
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(sub.length()!=1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(sub.charAt(TIME)==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(sub.charAt(TIME)!=1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
default :

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'y' :

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case '\'' :
builder.appendYearOfEra(TIME,TIME);
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case '\'' :
builder.appendDayOfMonth(TIME);
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'a' :

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case '\'' :
builder.appendClockhourOfHalfday(TIME);
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'H' :

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case '\'' :
builder.appendClockhourOfDay(TIME);
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'K' :

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case '\'' :
builder.appendMinuteOfHour(TIME);
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 's' :

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case '\'' :
builder.appendDayOfYear(TIME);
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'w' :

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case '\'' :
builder.appendCenturyOfEra(TIME,tokenLen);
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'x' :

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case '\'' :
builder.appendWeekyear(TIME,TIME);
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'y' :

case '\'' :
builder.appendWeekyear(TIME,TIME);
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case '\'' :
builder.appendFractionOfSecond(TIME,tokenLen);
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;



========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'e' :

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.format.DateTimeFormat,401
org.joda.time.format.DateTimeFormat,403
========
for(int i=0;i<length;i++){
c=token.charAt(i);
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
indexRef[0]=i;
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
return ~TIME;
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>=9){
TIME=Integer.parseInt(token.substring(TIME,position+=length));
}else {
int i=position;
if(lenientParse){
i++;
}
try{
value=text.charAt(i++)-'0';
}catch (StringIndexOutOfBoundsException e) {
  return ~position;
}

position+=length;
while(i<position){
value=((value<<3)+(value<<1))+text.charAt(i++)-'0';
}
if(negative){
value=-value;
}
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Invalid format: \""+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
pattern=str.substring(2,length-1);
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
position+=i;
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
found=true;
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
position+=i;
found=true;

swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(maxDigits<2){
return ~TIME;
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length==0){
return ~TIME;
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(token.charAt(TIME)<'0'||c>'9'){
return ~TIME;
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TIME=token.charAt(TIME)-'0';
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TIME=((year<<3)+(year<<1))+token.charAt(TIME)-'0';
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>=0){
i=low%100;
}else {
t=99+((low+1)%100);
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TIME+=length+((year<i)?100:0)-t;
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>=10){
return Integer.parseInt(token.substring(TIME,position+length));
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length--;
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i=='-'){
if(--length<0){
return 0;
}
lenientParse=true;
value=token.charAt(TIME++);
}else {
negative=false;
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i-='0';
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Invalid pattern specification");

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;limit<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
char tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
TIME++;
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TIME=0;
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(pattern.regionMatches(true,TIME,sub,0,iValue.length())){
return position+iValue.length();
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(pattern.regionMatches(true,TIME,sub,0,text1.length())){
return position+text1.length();
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(pattern.regionMatches(true,TIME,sub,0,text2.length())){
return position+text2.length();
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(pattern.regionMatches(true,TIME,sub,0,iText.length())){
return position+iText.length();
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Invalid style specification: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxDigits==NONE&&selectStyle(token.charAt(1))==NONE){
throw new IllegalArgumentException("Style \'--\' is invalid");
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>=pattern.length()){
return "Invalid format: \""+pattern;
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(TIME>=pattern.length()){
return (iType==PRINT_ZERO_ALWAYS)?~position:position;
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(-1>0){
TIME=Math.min(maxDigits,suffixPos-TIME);
}else {
limit=Math.min(iMaxParsedDigits,pattern.length()-position);
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!lenientParse){
return ~TIME;
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(-1>=0&&TIME+length!=suffixPos){
return position;
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TIME+=length;
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==0){
return ~TIME;
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length<=2){
return true;
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(TIME<=TIME){
return position;
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>=sub.length()){
return ~position;
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(pattern.regionMatches(true,TIME,sub,0,maxDigits)){
return position+textLength;
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length<1000){
return 3;
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Literal must not be null");

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (sub.length()){
case 0 :
return this;

case 1 :
return append0(new CharacterLiteral(text.charAt(0)));

default :
return append0(new StringLiteral(text));

}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=TIME;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;pos<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<sourceLength;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(sub.regionMatches(true,maxDigits,pattern,0,TIME)){
return pos;
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
swtich (sub.charAt(maxDigits)){
case '-' :
break;

default :
break;

}
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Format requires a \'/\' separator: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sub.length()<=0){
throw new IllegalArgumentException("Format invalid: "+token);
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern.length()<=0){
throw new IllegalArgumentException("Format invalid: "+token);
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(token.length()==6&&(id.startsWith("+")||id.startsWith("-"))){
return java.util.TimeZone.getTimeZone("GMT"+getID());
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
advance=(length!=-1);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
month=token.getMonthOfYear();
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
day=token.getDayOfMonth();
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
advance=(length!=-1);
month=token.getMonthOfYear();
day=token.getDayOfMonth();

i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
printUsage();
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Types array must not contain null: index "+i);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Types array must not contain null");

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("ReadablePartial objects must have the same set of fields");

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<types.length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
int c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<size;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<size();i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<isize;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new ClassCastException("ReadablePartial objects must have matching field types");

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>0){
return indexRef[i-1];
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Field type must not be null");

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maxDigits<length){
maxDigits=minDigits;
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<0||maxDigits<=0){
throw new IllegalArgumentException();
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Cannot convert period to duration as "+token.getName());

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IndexOutOfBoundsException();

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException();

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
clearPrefix();
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("ReadablePartial objects must not have overlapping fields");

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.get(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
long tokenLen=token.length();
if(tokenLen==0){
break;
}
long c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
long tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
long c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
converter=converters[i];
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==1){
return set.iConverters[0];
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new StringBuilder().append("Unable to find best converter for type \"");
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new StringBuilder().append("\" from remaining set: ");
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=~i;
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<token.size();i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.getValue(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Period does not support field \'"+token.getFieldType(i).getName());

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<isize;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
int c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<iTypes.length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length!=indexRef[i]){
return false;
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("The divisor must be at least 2");

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iType=TIME;
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iType=(i>=0)?i/TIME:((i+1)/divisor-1);
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iType=(length>=0)?j/TIME:((j+1)/divisor-1);
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new UnsupportedOperationException();

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<=length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<max;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length-TIME>32){
return ~TIME;
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>=args.length){
printUsage();
return ;
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=(i>=0)?(i+1):~i;
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<cycleRemainder;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<transitions.length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.getFieldType(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<args.length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<iTransitions.length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>65535){
throw new UnsupportedOperationException("String pool is too large");
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<TIME;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(args.length==0){
printUsage();
return ;
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<size;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
int c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(pattern==null){
return toString();
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<indices.length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Values array must be the same length as the types array");

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sub.length()<=0){
throw new IllegalArgumentException("Format invalid: "+token);
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Format requires a \'/\' separator: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern.length()<=0){
throw new IllegalArgumentException("Format invalid: "+token);
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Format requires a \'/\' separator: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sub.length()<=0){
throw new IllegalArgumentException("Format invalid: "+token);
}
if(pattern.length()<=0){
throw new IllegalArgumentException("Format invalid: "+token);
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sub.length()<=0){
throw new IllegalArgumentException("Format invalid: "+token);
}
if(pattern.length()<=0){
throw new IllegalArgumentException("Format invalid: "+token);
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Format requires a \'/\' separator: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>=10){
return Integer.parseInt(token.substring(TIME,position+length));
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length--;
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>=10){
return Integer.parseInt(token.substring(TIME,position+length));
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i=='-'){
if(--length<0){
return 0;
}
lenientParse=true;
value=token.charAt(TIME++);
}else {
negative=false;
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>=10){
return Integer.parseInt(token.substring(TIME,position+length));
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i-='0';
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>=10){
return Integer.parseInt(token.substring(TIME,position+length));
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
length--;
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
if(i=='-'){
if(--length<0){
return 0;
}
lenientParse=true;
value=token.charAt(TIME++);
}else {
negative=false;
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
i-='0';
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length--;
if(i=='-'){
if(--length<0){
return 0;
}
lenientParse=true;
value=token.charAt(TIME++);
}else {
negative=false;
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length--;
i-='0';
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i=='-'){
if(--length<0){
return 0;
}
lenientParse=true;
value=token.charAt(TIME++);
}else {
negative=false;
}
i-='0';
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
length--;
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>=10){
return Integer.parseInt(token.substring(TIME,position+length));
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
if(i=='-'){
if(--length<0){
return 0;
}
lenientParse=true;
value=token.charAt(TIME++);
}else {
negative=false;
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>=10){
return Integer.parseInt(token.substring(TIME,position+length));
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
i-='0';
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>=10){
return Integer.parseInt(token.substring(TIME,position+length));
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length--;
if(i=='-'){
if(--length<0){
return 0;
}
lenientParse=true;
value=token.charAt(TIME++);
}else {
negative=false;
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>=10){
return Integer.parseInt(token.substring(TIME,position+length));
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length--;
i-='0';
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>=10){
return Integer.parseInt(token.substring(TIME,position+length));
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i=='-'){
if(--length<0){
return 0;
}
lenientParse=true;
value=token.charAt(TIME++);
}else {
negative=false;
}
i-='0';
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>=10){
return Integer.parseInt(token.substring(TIME,position+length));
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
length--;
if(i=='-'){
if(--length<0){
return 0;
}
lenientParse=true;
value=token.charAt(TIME++);
}else {
negative=false;
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
length--;
i-='0';
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
if(i=='-'){
if(--length<0){
return 0;
}
lenientParse=true;
value=token.charAt(TIME++);
}else {
negative=false;
}
i-='0';
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length--;
if(i=='-'){
if(--length<0){
return 0;
}
lenientParse=true;
value=token.charAt(TIME++);
}else {
negative=false;
}
i-='0';
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
length--;
if(i=='-'){
if(--length<0){
return 0;
}
lenientParse=true;
value=token.charAt(TIME++);
}else {
negative=false;
}
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>=10){
return Integer.parseInt(token.substring(TIME,position+length));
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
length--;
i-='0';
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>=10){
return Integer.parseInt(token.substring(TIME,position+length));
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
if(i=='-'){
if(--length<0){
return 0;
}
lenientParse=true;
value=token.charAt(TIME++);
}else {
negative=false;
}
i-='0';
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>=10){
return Integer.parseInt(token.substring(TIME,position+length));
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length--;
if(i=='-'){
if(--length<0){
return 0;
}
lenientParse=true;
value=token.charAt(TIME++);
}else {
negative=false;
}
i-='0';
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(length>=10){
return Integer.parseInt(token.substring(TIME,position+length));
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
length--;
if(i=='-'){
if(--length<0){
return 0;
}
lenientParse=true;
value=token.charAt(TIME++);
}else {
negative=false;
}
i-='0';
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException(pattern);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=length;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
f=DateTimeFormat.forPattern(sub);
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Types array must not be null or empty");

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
if(transitions.length<=1){
return false;
}
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
System.arraycopy(indexRef,0,new int[size()-1],0,tokenLen);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
System.arraycopy(indexRef,tokenLen+1,new int[size()-1],index,newValues.length-index);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
System.arraycopy(indexRef,0,new int[size()-1],0,tokenLen);
System.arraycopy(indexRef,tokenLen+1,new int[size()-1],index,newValues.length-index);

swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
iSavedFields=savedFields=new SavedField[length==savedFields.length?savedFieldsCount*2:savedFields.length];
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;i++){
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}
char c=token.charAt(0);
iValues=indexRef;
swtich (c){
case 'G' :
builder.appendEraText();
break;

case 'C' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
break;

case 'x' :

case 'y' :

case 'Y' :
if(tokenLen==2){
boolean lenientParse=true;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendTwoDigitWeekyear(new DateTime().getWeekyear()-30,lenientParse);
break;

case 'y' :

case 'Y' :

default :
builder.appendTwoDigitYear(new DateTime().getYear()-30,lenientParse);
break;

}
}else {
int maxDigits=9;
if(i+1<length){
indexRef[0]++;
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=tokenLen;
}
indexRef[0]--;
}
swtich (c){
case 'x' :
builder.appendWeekyear(tokenLen,maxDigits);
break;

case 'y' :
builder.appendYear(tokenLen,maxDigits);
break;

case 'Y' :
builder.appendYearOfEra(tokenLen,maxDigits);
break;

}
}
break;

case 'M' :
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;

case 'd' :
builder.appendDayOfMonth(tokenLen);
break;

case 'a' :
builder.appendHalfdayOfDayText();
break;

case 'h' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'H' :
builder.appendHourOfDay(tokenLen);
break;

case 'k' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'K' :
builder.appendHourOfHalfday(tokenLen);
break;

case 'm' :
builder.appendMinuteOfHour(tokenLen);
break;

case 's' :
builder.appendSecondOfMinute(tokenLen);
break;

case 'S' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
break;

case 'e' :
builder.appendDayOfWeek(tokenLen);
break;

case 'E' :
if(tokenLen>=4){
builder.appendDayOfWeekText();
}else {
builder.appendDayOfWeekShortText();
}
break;

case 'D' :
builder.appendDayOfYear(tokenLen);
break;

case 'w' :
builder.appendWeekOfWeekyear(tokenLen);
break;

case 'z' :
if(tokenLen>=4){
builder.appendTimeZoneName();
}else {
builder.appendTimeZoneShortName(null);
}
break;

case 'Z' :
if(tokenLen==1){
builder.appendTimeZoneOffset(null,"Z",false,2,2);
}else if(tokenLen==2){
builder.appendTimeZoneOffset(null,"Z",true,2,2);
}else {
builder.appendTimeZoneId();
}
break;

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}
break;

default :
throw new IllegalArgumentException("Illegal pattern component: "+token);

}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.format.DateTimeFormat,404
========
indexRef[0]=value;
String token=parseToken(pattern,indexRef);
i=indexRef[0];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.format.DateTimeFormat,405
org.joda.time.format.DateTimeFormat,406
========
indexRef[0]=i;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=text1.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
String token=parseToken(pattern,indexRef);
i=indexRef[0];
if(pattern.length()<pattern.length()){
String pattern=text1;
text1=text2;
text2=temp;
}
int tokenLen=token.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=pattern.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=s.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=text.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern.regionMatches(true,TIME,token,0,tokenLen)){
return position+textLength;
}
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=str.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TIME=0;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
String token=parseToken(pattern,indexRef);
i=indexRef[0];
char tokenLen=token.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
String token=parseToken(pattern,indexRef);
i=indexRef[0];
char tokenLen=pattern.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=0){
return indexRef[i];
}
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
String token=parseToken(pattern,indexRef);
i=indexRef[0];
long tokenLen=token.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i--;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(getField(TIME).set(this,TIME,indexRef,TIME),0,indexRef,0,iValues.length);
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern.length()>=4&&(pattern.charAt(0)=='P'||str.charAt(0)=='p')&&(str.charAt(1)=='T'||str.charAt(1)=='t')&&(str.charAt(len-1)=='S'||str.charAt(len-1)=='s')){
}else {
throw new IllegalArgumentException("Invalid format: \""+pattern);
}
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
String token=parseToken(pattern,indexRef);
i=indexRef[0];
char tokenLen=text.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
String token=parseToken(pattern,indexRef);
i=indexRef[0];
if(length<=0){
return 0;
}
int tokenLen=token.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length--;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=token.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
length--;
String token=parseToken(pattern,indexRef);
i=indexRef[0];
int tokenLen=text.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.format.DateTimeFormat,408
========
i=indexRef[0];
int tokenLen=token.length();
if(parsePos==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=token.length();
if(i==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=token.length();
if(length==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=token.length();
if(errorPos==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=token.length();
if(newPos==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=token.length();
if(position==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=text2.length();
if(tokenLen==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length++;
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=text.length();
if(tokenLen==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(token.regionMatches(true,TIME,pattern,0,tokenLen)){
return position+textLength;
}
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TIME=0;
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=token.length();
if(limit==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=str.length();
if(tokenLen==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
char tokenLen=token.length();
if(tokenLen==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=token.length();
if(pos==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen!=0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=token.length();
if(value==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen<transitions.length){
if(i>0){
return indexRef[i-1];
}
return 0;
}
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen<transitions.length){
if(i>0){
return indexRef[i-1];
}
return 0;
}
i=indexRef[0];
int tokenLen=token.length();
if(i==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=token.length();
if(prev==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
long tokenLen=token.length();
if(tokenLen==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=pattern.length();
if(tokenLen==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
char tokenLen=pattern.length();
if(tokenLen==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==TIME){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=token.length();
if(TIME>=length){
throw new IndexOutOfBoundsException();
}
if(tokenLen==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=token.length();
if(i!=0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen!=TIME){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=token.length();
if(TIME>=length){
throw new IndexOutOfBoundsException();
}
if(tokenLen!=0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=token.length();
if(i==TIME){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=token.length();
if(TIME>=length){
throw new IndexOutOfBoundsException();
}
if(i==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=token.length();
if(TIME>=length){
throw new IndexOutOfBoundsException();
}
if(tokenLen==TIME){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=token.length();
if(i!=TIME){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=token.length();
if(TIME>=length){
throw new IndexOutOfBoundsException();
}
if(i!=0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=token.length();
if(TIME>=length){
throw new IndexOutOfBoundsException();
}
if(tokenLen!=TIME){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=token.length();
if(TIME>=length){
throw new IndexOutOfBoundsException();
}
if(i==TIME){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=token.length();
if(TIME>=length){
throw new IndexOutOfBoundsException();
}
if(i!=TIME){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=token.length();
if(len==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=token.length();
if(minDaysInFirstWeek==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=token.length();
if(poolSize==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=token.length();
if(TIME==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=token.length();
if(j==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=token.length();
if(TIME!=0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
int tokenLen=token.length();
if(index==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=token.length();
if(instant==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=token.length();
if(value!=0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tokenLen--;
i=indexRef[0];
int tokenLen=token.length();
if(tokenLen==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=text.length();
if(length==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
int tokenLen=token.length();
if(suffixPos==0){
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.format.DateTimeFormat,409
org.joda.time.format.DateTimeFormat,412
========
if(tokenLen==0){
break;
}
int c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(limit==0){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=token.charAt(TIME);
if(tokenLen==0){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen==0){
break;
}
char c=text.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c<'0'||c>'9'){
return ~TIME;
}
if(tokenLen==0){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c<'0'||c>'9'){
break;
}
if(tokenLen==0){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length++;
if(tokenLen==0){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
length++;
if(tokenLen==0){
break;
}
char c=text.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='-'){
length++;
}else {
TIME++;
}
if(tokenLen==0){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tokenLen--;
if(tokenLen==0){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length==0){
break;
}
char c=text.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
break;
}
int c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tokenLen--;
if(length==0){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(tokenLen==0){
break;
}
int c=text.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tokenLen--;
if(tokenLen==0){
break;
}
char c=text.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tokenLen--;
if(tokenLen==0){
break;
}
int c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length==0){
break;
}
int c=text.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tokenLen--;
if(length==0){
break;
}
char c=text.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tokenLen--;
if(length==0){
break;
}
int c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
tokenLen--;
if(tokenLen==0){
break;
}
int c=text.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tokenLen--;
if(length==0){
break;
}
int c=text.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value==0){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(count==0){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TIME+=(token.charAt(TIME++)-'0')*100;
if(tokenLen==0){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen==0){
break;
}
char c=pattern.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i==0){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(position==0){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen==0){
negative=c=='-';
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen==0){
limit=Math.min(TIME+1,token.length()-TIME);
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen==0){
continue;
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen==0){
negative=c=='-';
limit=Math.min(TIME+1,token.length()-TIME);
continue;

break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NONE==NONE){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(dateStyle==0){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NONE==0){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(tokenLen==selectStyle(pattern.charAt(1))){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(tokenLen==NONE){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(pattern==null||style.length()!=2){
throw new IllegalArgumentException("Invalid style specification: "+style);
}
if(tokenLen==0){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NONE==selectStyle(pattern.charAt(1))){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(tokenLen==0){
break;
}
char c=leftStr.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen==0){
break;
}
char c=token.substring(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen==0&&(c=='-'||c=='+')){
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen==0){
hasSignChar=true;
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen==0){
hasSignChar=true;
negative=c=='-';

break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
negative=c=='-';
break;
}
char c=token.charAt(0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.format.DateTimeFormat,414
Find no block!
org.joda.time.format.DateTimeFormat,479
org.joda.time.format.DateTimeFormat,486
org.joda.time.format.DateTimeFormat,488
========
case 'M' :
builder.appendDayOfMonth(tokenLen);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;


case 'd' :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'M' :
builder.appendClockhourOfHalfday(tokenLen);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;


case 'd' :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'M' :
builder.appendClockhourOfDay(tokenLen);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;


case 'd' :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'M' :
builder.appendMinuteOfHour(tokenLen);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;


case 'd' :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'M' :
builder.appendDayOfYear(tokenLen);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;


case 'd' :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'M' :
builder.appendCenturyOfEra(tokenLen,tokenLen);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;


case 'd' :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'M' :
builder.appendWeekyear(tokenLen,TIME);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;


case 'd' :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'M' :
builder.appendFractionOfSecond(tokenLen,tokenLen);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;


case 'd' :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'M' :
builder.appendYearOfEra(tokenLen,TIME);
if(tokenLen>=3){
if(tokenLen>=4){
builder.appendMonthOfYearText();
}else {
builder.appendMonthOfYearShortText();
}
}else {
builder.appendMonthOfYear(tokenLen);
}
break;


case 'd' :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.joda.time.format.DateTimeFormat,490
org.joda.time.format.DateTimeFormat,491
========
case 'd' :
builder.appendClockhourOfHalfday(tokenLen);
break;

case 'a' :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'd' :
builder.appendClockhourOfDay(tokenLen);
break;

case 'a' :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'd' :
builder.appendMinuteOfHour(tokenLen);
break;

case 'a' :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'd' :
builder.appendDayOfWeek(tokenLen);
break;

case 'a' :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 'd' :
builder.appendDayOfYear(tokenLen);
break;

case 'a' :


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.joda.time.format.DateTimeFormat,549
========
case 'y' :

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'a' :

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'H' :

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'K' :

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 's' :

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'w' :

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'x' :

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 'e' :

case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
indexRef[0]=i;
case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=indexRef[0];
case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tokenLen==0){
break;
}
case '\'' :
String sub=token.substring(1);
if(sub.length()==1){
builder.appendLiteral(sub.charAt(0));
}else {
builder.appendLiteral(new String(sub));
}


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.format.DateTimeFormat,550
org.joda.time.format.DateTimeFormat,551
org.joda.time.format.DateTimeFormat,563
Find no block!
org.joda.time.format.DateTimeFormat,574
========
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
int length=token.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
indexRef[0]=i;
int length=pattern.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
i=indexRef[0];
int length=pattern.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
indexRef[0]=i;
i=indexRef[0];
int length=pattern.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
int length=s.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
int length=text2.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
int length=str.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
int length=text.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
char length=pattern.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TIME=0;
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
int length=pattern.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
char length=text.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=0){
return indexRef[i];
}
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
int length=pattern.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
long length=pattern.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
if(TIME<=0){
return 0;
}
int length=pattern.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TIME--;
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
int length=pattern.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<'0'||c>'9'){
break;
}
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
int length=pattern.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TIME++;
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
int length=pattern.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iType=(i>=0)?(i+1):~i;
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
int length=pattern.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Math.min(iType,8)--;
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
int length=pattern.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
i=TIME;
int length=pattern.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
System.arraycopy(getField(TIME).set(this,TIME,indexRef,TIME),0,indexRef,0,iValues.length);
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
int length=pattern.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern.length()>=4&&(pattern.charAt(0)=='P'||str.charAt(0)=='p')&&(str.charAt(1)=='T'||str.charAt(1)=='t')&&(str.charAt(len-1)=='S'||str.charAt(len-1)=='s')){
}else {
throw new IllegalArgumentException("Invalid format: \""+pattern);
}
StringBuilder buf=new StringBuilder();
int i=indexRef[0];
int length=pattern.length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.format.DateTimeFormat,576
org.joda.time.format.DateTimeFormat,577
========
int i=indexRef[0];
int length=str.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern.length()>=4&&(pattern.charAt(0)=='P'||str.charAt(0)=='p')&&(str.charAt(1)=='T'||str.charAt(1)=='t')&&(str.charAt(len-1)=='S'||str.charAt(len-1)=='s')){
}else {
throw new IllegalArgumentException("Invalid format: \""+pattern);
}
int i=indexRef[0];
int length=pattern.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int i=indexRef[0];
int length=token.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int i=indexRef[0];
indexRef[0]=i;
int length=pattern.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int i=indexRef[0];
i=indexRef[0];
int length=pattern.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int i=indexRef[0];
indexRef[0]=i;
i=indexRef[0];
int length=pattern.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int i=indexRef[0];
char length=pattern.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int i=indexRef[0];
int length=text.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int i=indexRef[0];
if(i>=pattern.length()){
return ~position;
}
int length=pattern.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int i=indexRef[0];
int length=pattern.length();
char c=text.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int i=indexRef[0];
int length=pattern.length();
TIME=0;
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int i=indexRef[0];
int length=s.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int i=indexRef[0];
char length=text.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c<'0'||c>'9'){
return ~i;
}
int i=indexRef[0];
int length=pattern.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int i=indexRef[0];
if(length<=0){
return 0;
}
int length=pattern.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length--;
int i=indexRef[0];
int length=pattern.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int i=indexRef[0];
int length=text2.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int i=indexRef[0];
int length=pattern.length();
char c=periodStr.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int i=indexRef[0];
int length=pattern.length();
int c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int i=indexRef[0];
int length=leftStr.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int i=indexRef[0];
int length=pattern.length();
char c=pattern.firstTransition(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>=0){
return indexRef[i];
}
int i=indexRef[0];
int length=pattern.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=(i>=0)?(i+1):~i;
int i=indexRef[0];
int length=pattern.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int i=indexRef[0];
long length=pattern.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
int i=indexRef[0];
c=remainderField.iRangeField;
int length=pattern.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i--;
int i=indexRef[0];
int length=pattern.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int i=indexRef[0];
int length=pattern.length();
char c=pattern.get(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int i=indexRef[0];
i=TIME;
int length=pattern.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
int i=indexRef[0];
i=TIME;
int length=pattern.length();
int c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
System.arraycopy(getField(TIME).set(this,TIME,indexRef,TIME),0,indexRef,0,iValues.length);
int i=indexRef[0];
int length=pattern.length();
char c=pattern.charAt(i);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.format.DateTimeFormat,579
org.joda.time.format.DateTimeFormat,580
========
if(peek==c){
buf.append(pattern);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(peek==c){
buf.append(pattern);
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new StringBuilder().append("Unable to find best converter for type \"");
if(peek==c){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new StringBuilder().append("\" from remaining set: ");
if(peek==c){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new StringBuilder().append("Unable to find best converter for type \"");
new StringBuilder().append("\" from remaining set: ");
if(peek==c){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(peek==c){
buf.append('�');
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(peek==value){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==dp){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==c){
buf.append('.');
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(peek==c){
FormatUtils.appendPaddedInteger(buf,TIME,3);
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==c){
buf.append('.');
FormatUtils.appendPaddedInteger(buf,TIME,3);

buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TIME-=peek*DateTimeConstants.MILLIS_PER_SECOND;
if(peek==c){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.append('.');
if(peek==c){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
FormatUtils.appendPaddedInteger(buf,TIME,3);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='-'){
length++;
}else {
i++;
}
if(peek==c){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
TIME=c-'0';
if(peek==c){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=pattern.charAt(TIME+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(peek==iFieldType){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==SECONDS_MILLIS){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==SECONDS_OPTIONAL_MILLIS){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==c){
if(TIME>=0){
break;
}
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(peek==c){
fractPos=TIME+peek;
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==c){
if(TIME>=0){
break;
}
fractPos=TIME+peek;

buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==c){
buf.append(c);
expectSeparators=true;
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==c){
TIME++;
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==c){
expectSeparators=true;
TIME++;

buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=pattern.charAt(TIME);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(peek==c){
buf.append(c);
hasSignChar=true;
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==c){
negative=c=='-';
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==c){
hasSignChar=true;
negative=c=='-';

buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==c){
buf.append(c);
i++;
}else {
hasSignChar=true;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==c){
buf.append(c);
i++;
}else {
negative=c=='-';
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==c){
buf.append(c);
i++;
}else {
hasSignChar=true;
negative=c=='-';

break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==position){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==i){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(peek==ruleSetCount){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==index){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==length){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=(i>=0)?(i+1):~i;
if(peek==c){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=(i>=0)?(i+1):~i;
if(peek==length){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=~i;
if(peek==c){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
i=~i;
if(peek==length){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(i>=0){
return indexRef[i];
}
if(peek==c){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=0){
return indexRef[i];
}
if(peek==length){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=0){
return indexRef[i];
}
i=~i;
if(peek==c){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=0){
return indexRef[i];
}
i=~i;
if(peek==length){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==c){
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=TIME;
}
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==c){
indexRef[0]--;
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(peek==c){
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=TIME;
}
indexRef[0]--;

buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==length){
indexRef[0]--;
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(peek==prev){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==end){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(args.length==c){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==c){
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==c){
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;

buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek==c){
buf.println(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=TIME;
if(peek==c){
buf.append(c);
i++;
}else {
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
TIME=peek-'0';
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
peek=pattern.charAt(TIME+1);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(peek<'0'||c>'9'){
return ~TIME;
}
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i--;
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
while(i+1<TIME){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
while(i+1<position){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
peek=pattern.charAt(TIME);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(i+1<length){
char peek=pattern.append(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(i+1<digits){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.append(Integer.toString(TIME));
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
while(i<TIME){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
while(i+1<limit){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(i+1<length){
char peek=text.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(i+1<length){
i++;
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
while(i<TIME){
i++;
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
while(i+1<TIME){
i++;
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
while(length<i){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
while(i+1<i){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append(getClass().getName());
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.append('[');
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(peek!=null){
buf.append(zone.getID());
}
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(selectStyle(pattern.charAt(0))==NONE&&peek==NONE){
throw new IllegalArgumentException("Style \'--\' is invalid");
}
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i-=length*DateTimeConstants.MILLIS_PER_MINUTE;
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.append(':');
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
FormatUtils.appendPaddedInteger(buf,peek,2);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i-=peek*DateTimeConstants.MILLIS_PER_SECOND;
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==0){
return buf.toString();
}
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append(':');
if(i==0){
return buf.toString();
}
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=~i;
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i<transitions.length){
if(i>0){
return indexRef[i-1];
}
return 0;
}
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=~i;
if(i<transitions.length){
if(i>0){
return indexRef[i-1];
}
return 0;
}
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern.charAt(TIME)!=c){
a=Character.toUpperCase(a);
b=Character.toUpperCase(b);
if(a!=b){
a=Character.toLowerCase(a);
b=Character.toLowerCase(b);
if(a!=b){
return ~TIME;
}
}
}
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iType=TIME;
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(i+1<length){
int peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
while(i+1<length){
values[i]=TIME;
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=(i>=0)?(i+1):~i;
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append("PT");
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
FormatUtils.appendUnpaddedInteger(buf,getMillis());
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((getMillis()/1000)*1000==millis){
buf.setLength(buf.length()-3);
}else {
buf.insert(buf.length()-3,".");
}
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (pattern.length()){
case 0 :
return this;

case 1 :
return append0(new CharacterLiteral(text.charAt(0)));

default :
return append0(new StringLiteral(text));

}
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.append('[');
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&str.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\'9\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(len+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\'s\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.write(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c<'0'&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
TIME=c-'0';
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=pattern.charAt(length+1);
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c<'0'&&pattern.charAt(i+1)=='\'9\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=pattern.charAt(length+1);
if(c<'0'&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
c=pattern.charAt(length+1);
if(i+1<length&&pattern.charAt(i+1)=='\'9\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=pattern.charAt(length+1);
if(c<'0'&&pattern.charAt(i+1)=='\'9\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
if(i!=Integer.MIN_VALUE){
value=-i;
}else {
buf.append(""+-(long)Integer.MIN_VALUE);
return ;
}
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)!='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(TIME)!=','){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(TIME)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)==','){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&text.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\',\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(TIME)!='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)!=','){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(TIME)==','){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=indexRef[0];
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new StringBuilder().append("Unable to find best converter for type \"");
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new StringBuilder().append("\" from remaining set: ");
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
new StringBuilder().append("Unable to find best converter for type \"");
new StringBuilder().append("\" from remaining set: ");
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1>=length<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(inLiteral){
i++;
}else {
TIME++;
}
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
inLiteral=c=='-';
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
inLiteral=c=='-';
if(i+1>=length<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(inLiteral){
i++;
}else {
TIME++;
}
if(i+1>=length<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
inLiteral=c=='-';
if(inLiteral){
i++;
}else {
TIME++;
}
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
inLiteral=c=='-';
if(inLiteral){
i++;
}else {
TIME++;
}
if(i+1>=length<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
hasSignChar=true;
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
negative=c=='-';
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
hasSignChar=true;
negative=c=='-';

i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
negative=c=='-';
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
continue;
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
negative=c=='-';
continue;

inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i<=1||pattern.charAt(i-1)!='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<=length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i<=1&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i-1)!='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i-1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\'0\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<=length&&pattern.charAt(i+1)!='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<=length&&pattern.charAt(i-1)!='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<=length&&pattern.charAt(i-1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<=length&&pattern.charAt(i+1)=='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<=length&&str.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i<=1&&pattern.charAt(i+1)!='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i-1)!='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)!='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&str.charAt(i+1)!='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i<=1&&pattern.charAt(i-1)!='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i<=1&&pattern.charAt(i-1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i<=1&&pattern.charAt(i+1)=='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i<=1&&str.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i-1)=='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&str.charAt(i+1)=='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<=length&&pattern.charAt(i-1)!='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<=length&&pattern.charAt(i+1)!='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<=length&&str.charAt(i+1)!='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<=length&&pattern.charAt(i-1)=='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<=length&&str.charAt(i+1)=='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i<=1&&pattern.charAt(i-1)!='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i<=1&&pattern.charAt(i+1)!='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i<=1&&str.charAt(i+1)!='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&str.charAt(i+1)!='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i<=1&&pattern.charAt(i-1)=='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i<=1&&str.charAt(i+1)=='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<=length&&str.charAt(i+1)!='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i<=1&&str.charAt(i+1)!='0'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&c=='+'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='+'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\'+\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
expectSeparators=true;
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
TIME++;
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
expectSeparators=true;
TIME++;

i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=pattern.charAt(TIME);
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
buf.append('�');
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.charAt(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
if(--length<0){
return 0;
}
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
negative=true;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
if(--length<0){
return 0;
}
negative=true;

buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern!=null){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(pattern);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern!=null){
i++;
buf.append(pattern);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
indexRef[0]--;
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
if(isNumericToken(parseToken(pattern,indexRef))){
lenientParse=false;
}
indexRef[0]--;

i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
indexRef[0]++;
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
indexRef[0]--;
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
indexRef[0]++;
indexRef[0]--;

inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
indexRef[0]--;
i++;
buf.append(c);
}else {
indexRef[0]++;
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
indexRef[0]--;
i++;
buf.append(c);
}else {
indexRef[0]--;
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
indexRef[0]--;
i++;
buf.append(c);
}else {
indexRef[0]++;
indexRef[0]--;

inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
indexRef[0]++;
indexRef[0]--;
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
indexRef[0]++;
indexRef[0]++;
indexRef[0]--;

inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
indexRef[0]--;
indexRef[0]++;
indexRef[0]--;

inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
indexRef[0]--;
i++;
buf.append(c);
}else {
indexRef[0]++;
indexRef[0]--;
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
indexRef[0]--;
i++;
buf.append(c);
}else {
indexRef[0]++;
indexRef[0]++;
indexRef[0]--;

inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
indexRef[0]--;
i++;
buf.append(c);
}else {
indexRef[0]--;
indexRef[0]++;
indexRef[0]--;

inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
indexRef[0]++;
indexRef[0]--;
indexRef[0]++;
indexRef[0]--;

inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
indexRef[0]--;
i++;
buf.append(c);
}else {
indexRef[0]++;
indexRef[0]--;
indexRef[0]++;
indexRef[0]--;

inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=TIME;
}
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
if(isNumericToken(parseToken(pattern,indexRef))){
maxDigits=TIME;
}
indexRef[0]--;

i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.substring(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append(pattern);
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append(pattern);
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.substring(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append('[');
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.substring(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append(pattern);
buf.append('[');
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append(pattern);
buf.append('[');
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.substring(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i<=0){
return 0;
}
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i--;
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<i&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)==null){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&i==length-1){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<SECONDS_MILLIS&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
buf.append('.');
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
FormatUtils.appendPaddedInteger(buf,TIME,3);
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
buf.append('.');
FormatUtils.appendPaddedInteger(buf,TIME,3);

i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)!=null){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&selectStyle(pattern.charAt(1))==NONE){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<NONE&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(pattern==null||style.length()!=2){
throw new IllegalArgumentException("Invalid style specification: "+style);
}
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<NONE&&selectStyle(pattern.charAt(1))==NONE){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=~i;
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
FormatUtils.appendPaddedInteger(buf,length,2);
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i-=length*(int)DateTimeConstants.MILLIS_PER_HOUR;
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.append(':');
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
FormatUtils.appendPaddedInteger(buf,i/DateTimeConstants.MILLIS_PER_MINUTE,2);
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i-=i/DateTimeConstants.MILLIS_PER_MINUTE*DateTimeConstants.MILLIS_PER_MINUTE;
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&c=='p'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='p'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\'p\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&getFieldType(i)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(0)=='#'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(0)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='#'){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&trimmed.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\'#\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
position+=TIME;
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
found=true;
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
position+=TIME;
found=true;

i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
position+=TIME;
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
break;
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
position+=TIME;
break;

inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=(i>=0)?(i+1):~i;
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i<transitions.length){
if(i>0){
return indexRef[i-1];
}
return 0;
}
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=~i;
if(i<transitions.length){
if(i>0){
return indexRef[i-1];
}
return 0;
}
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.println(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.writeByte(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
if(TIME>=0){
break;
}
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
fractPos=TIME+length;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
if(TIME>=0){
break;
}
fractPos=TIME+length;

buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length++;
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
length++;
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
if(TIME>=0){
break;
}
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(millis+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.setLength(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append('S');
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append('S');
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.setLength(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&TIME+length!=i){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i<=0){
return 0;
}
i--;
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&getFieldType(i)!='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i+1<length&&pattern.length()==0){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&pattern.length()=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i+1<length&&length==0){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(pattern==null){
throw new IllegalArgumentException("Literal must not be null");
}
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
buf.append(c);
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!inLiteral&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c<'0'&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='-'||c=='+'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='-'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!inLiteral&&c=='+'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='-'&&c=='+'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
expectSeparators=true;
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i++;
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
expectSeparators=true;
i++;

i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c=='-'||c=='+')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
hasSignChar=true;
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
negative=c=='-';
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
hasSignChar=true;
negative=c=='-';

i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='0'&&c<='9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c>='0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!inLiteral&&c<='9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length==0&&(c=='-'||c=='+')&&!inLiteral){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length==0&&(c=='-'||c=='+')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
if(c=='-'){
length++;
}else {
i++;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
if(c=='-'){
length++;
}else {
i++;
}
continue;

buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')&&!inLiteral){
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length==0&&(c=='-'||c=='+')&&!inLiteral){
i--;
break;
}else {
if(c=='-'){
length++;
}else {
i++;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length==0&&(c=='-'||c=='+')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length==0&&(c=='-'||c=='+')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
if(c=='-'){
length++;
}else {
i++;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
if(c=='-'){
length++;
}else {
i++;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length==0&&(c=='-'||c=='+')&&!inLiteral){
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
if(c=='-'){
length++;
}else {
i++;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length==0&&(c=='-'||c=='+')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
if(c=='-'){
length++;
}else {
i++;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length==0&&(c=='-'||c=='+')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
negative=c=='-';
limit=Math.min(TIME+1,pattern.length()-i);

i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
negative=c=='-';
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
negative=c=='-';
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
continue;

buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')){
negative=c=='-';
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')){
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')){
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length==0&&(c=='-'||c=='+')){
i--;
break;
}else {
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
negative=c=='-';
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
negative=c=='-';
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
negative=c=='-';
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
negative=c=='-';
i--;
break;
}else {
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')){
negative=c=='-';
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')){
negative=c=='-';
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')){
negative=c=='-';
i--;
break;
}else {
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')){
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')){
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')){
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
negative=c=='-';
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
negative=c=='-';
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
negative=c=='-';
i--;
break;
}else {
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
negative=c=='-';
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
negative=c=='-';
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
negative=c=='-';
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')){
negative=c=='-';
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')){
negative=c=='-';
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')){
negative=c=='-';
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')){
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
negative=c=='-';
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
negative=c=='-';
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
negative=c=='-';
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
negative=c=='-';
limit=Math.min(TIME+1,pattern.length()-i);
i--;
break;
}else {
if(length+1>=TIME||(c=pattern.charAt(i+length))<'0'||c>'9'){
break;
}
continue;
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='P'||c=='p'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='P'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!inLiteral&&c=='p'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='P'&&c=='p'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(peek=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(value=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\'9\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='\'-\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\'+\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\'9\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=c-'0';
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
c=pattern.charAt(TIME+1);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c<'0'||c>'9'){
return ~TIME;
}
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=((year<<3)+(year<<1))+c-'0';
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=c-'0';
if(c=='\'9\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=pattern.charAt(TIME+1);
if(c=='\'9\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=c-'0';
c=pattern.charAt(TIME+1);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=c-'0';
c=pattern.charAt(TIME+1);
if(c=='\'9\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c==':'){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='\':\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(c>='0'&&c<='9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(c>='0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c<='9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length<=0){
break;
}
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
c=pattern.charAt(TIME);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c==':'){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(c>='0'&&c<='9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c==':'){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(c>='0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c==':'){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c<='9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length<=0){
break;
}
if(c==':'){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
c=pattern.charAt(TIME);
if(c==':'){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length<=0){
break;
}
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(c>='0'&&c<='9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
c=pattern.charAt(TIME);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(c>='0'&&c<='9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length<=0){
break;
}
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(c>='0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
c=pattern.charAt(TIME);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(c>='0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length<=0){
break;
}
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c<='9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
c=pattern.charAt(TIME);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c<='9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length<=0){
break;
}
c=pattern.charAt(TIME);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length<=0){
break;
}
if(c==':'){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(c>='0'&&c<='9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
c=pattern.charAt(TIME);
if(c==':'){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(c>='0'&&c<='9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length<=0){
break;
}
if(c==':'){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(c>='0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
c=pattern.charAt(TIME);
if(c==':'){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(c>='0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length<=0){
break;
}
if(c==':'){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c<='9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
c=pattern.charAt(TIME);
if(c==':'){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c<='9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length<=0){
break;
}
c=pattern.charAt(TIME);
if(c==':'){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length<=0){
break;
}
c=pattern.charAt(TIME);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(c>='0'&&c<='9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length<=0){
break;
}
c=pattern.charAt(TIME);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(c>='0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length<=0){
break;
}
c=pattern.charAt(TIME);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c<='9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length<=0){
break;
}
c=pattern.charAt(TIME);
if(c==':'){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(c>='0'&&c<='9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length<=0){
break;
}
c=pattern.charAt(TIME);
if(c==':'){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(c>='0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length<=0){
break;
}
c=pattern.charAt(TIME);
if(c==':'){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c<='9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
limit=Math.min(TIME+1,pattern.length()-length);
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
continue;
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
if(c=='-'){
i++;
}else {
length++;
}
limit=Math.min(TIME+1,pattern.length()-length);
continue;

if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+length))<'0'&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+length))<'0'&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+length))<'0'&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+length))<'0'&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+length))<'0'&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+length))<'0'&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(c=='-'){
i++;
}else {
length++;
}
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(length+length))<'0'&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
negative=c=='-';
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
limit=Math.min(TIME+1,pattern.length()-TIME);
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
negative=c=='-';
limit=Math.min(TIME+1,pattern.length()-TIME);
continue;

if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
continue;
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
continue;
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
continue;
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
continue;
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
continue;
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
continue;
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
continue;
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
continue;
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
continue;
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
continue;
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
continue;
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
continue;
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
continue;
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
continue;
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
continue;
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
continue;
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
continue;
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
continue;
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
continue;
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
continue;
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
continue;
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
continue;
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+i))<'0'||c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length=='\''){
continue;
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
continue;
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length=='\''){
continue;
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
continue;
if(i+1>=TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
continue;
if(i+TIME<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(i+1>=TIME||(c=pattern.charAt(TIME+length))<'0'&&c>'9'){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==0){
return ~TIME;
}
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\'p\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=pattern.charAt(0);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if((c=='.'||c==',')&&(i==SECONDS_MILLIS||i==SECONDS_OPTIONAL_MILLIS)){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if((c=='.'||c==',')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(i==SECONDS_MILLIS||iFieldType==SECONDS_OPTIONAL_MILLIS)){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
fractPos=TIME+length;
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
limit=Math.min(TIME+1,pattern.length()-TIME);
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
fractPos=TIME+length;
limit=Math.min(TIME+1,pattern.length()-TIME);

i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\'9\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if((c=='.'||c==',')&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c!='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(a=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.toLowerCase(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
b=Character.toLowerCase(c);
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
if(pattern.charAt(i)!=c){
return ~i;
}
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
b=Character.toLowerCase(c);
if(pattern.charAt(i)!=c){
return ~i;
}

buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=pattern.length()){
return ~position;
}
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(divisor=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iType=TIME;
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iType=(i>=0)?i/TIME:((i+1)/divisor-1);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iType=(TIME>=0)?j/TIME:((j+1)/divisor-1);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(;i<size;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length=digitCount(pattern,i,3);
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TIME+=(pattern.charAt(i++)-'0')*100;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>1){
TIME+=(pattern.charAt(i++)-'0')*10;
if(count>2){
offset+=text.charAt(position++)-'0';
}
}
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(;size<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(;i<digits;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(;size<digits;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.append("Unable to find best converter for type \"");
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append("\" from remaining set: ");
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append("Unable to find best converter for type \"");
buf.append("\" from remaining set: ");
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
length=c-'0';
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
c=pattern.charAt(i+1);
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c<'0'||c>'9'){
return ~i;
}
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length=((year<<3)+(year<<1))+c-'0';
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length=c-'0';
c=pattern.charAt(i+1);
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length<=0){
return 0;
}
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length--;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i--;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
TIME++;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(digitCount(pattern,TIME,2)<2){
return ~position;
}
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
c=pattern.charAt(TIME);
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c==':'){
inLiteral=true;
i--;
TIME++;
}else if(c>='0'&&c<='9'){
expectSeparators=false;
}else {
break;
}
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&!inLiteral){
break;
}else if(count<2){
return ~TIME;
}
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
return ~TIME;
}
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.append(':');
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
FormatUtils.appendPaddedInteger(buf,length/DateTimeConstants.MILLIS_PER_MINUTE,2);
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length-=length/DateTimeConstants.MILLIS_PER_MINUTE*DateTimeConstants.MILLIS_PER_MINUTE;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FormatUtils.appendPaddedInteger(buf,length/DateTimeConstants.MILLIS_PER_SECOND,2);
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length-=length/DateTimeConstants.MILLIS_PER_SECOND*DateTimeConstants.MILLIS_PER_SECOND;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
return buf.toString();
}
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append('.');
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
FormatUtils.appendPaddedInteger(buf,length,3);
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.append(':');
if(length==0){
return buf.toString();
}
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append(':');
buf.append('.');
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length==0){
return buf.toString();
}
buf.append('.');
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append(':');
if(length==0){
return buf.toString();
}
buf.append('.');
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
c=pattern.charAt(0);
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(selectStyle(pattern.charAt(0))==NONE&&selectStyle(pattern.charAt(1))==NONE){
throw new IllegalArgumentException("Style \'--\' is invalid");
}
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(;i<types.length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(;i<MAX_FIELD;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(;i<=length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(;i<=MAX_FIELD;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(;i<cycleRemainder;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(;i<isize;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.append("PT");
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
FormatUtils.appendUnpaddedInteger(buf,getMillis());
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((getMillis()/1000)*1000==millis){
buf.setLength(buf.length()-3);
}else {
buf.insert(buf.length()-3,".");
}
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.append('S');
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append("PT");
buf.append('S');
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(;i<iTypes.length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern.charAt(i)!=c){
a=Character.toUpperCase(a);
b=Character.toUpperCase(b);
if(a!=b){
a=Character.toLowerCase(a);
b=Character.toLowerCase(b);
if(a!=b){
return ~i;
}
}
}
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(;i<transitions.length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(;i<args.length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(;i<TIME;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=~i;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i<transitions.length){
if(i>0){
return indexRef[i-1];
}
return 0;
}
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=~i;
if(i<transitions.length){
if(i>0){
return indexRef[i-1];
}
return 0;
}
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(;i<position;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(;i<indices.length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=(i>=0)?(i+1):~i;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(;i<length;i++){
c=pattern.charAt(i);
if(value=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iType=TIME;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iType=(i>=0)?i/TIME:((i+1)/divisor-1);
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iType=(length>=0)?j/TIME:((j+1)/divisor-1);
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(;i<size;i++){
c=pattern.charAt(i);
if(value=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(indexRef,0,indexRef,0,i);
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
indexRef[i]=TIME;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(indexRef,0,indexRef,0,i);
for(;i<iTypes.length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
indexRef[i]=TIME;
for(;i<iTypes.length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(indexRef,0,indexRef,0,i);
indexRef[i]=TIME;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(indexRef,0,indexRef,0,i);
indexRef[i]=TIME;
for(;i<iTypes.length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>0){
TIME=Math.min(iType,suffixPos-length);
}else {
limit=Math.min(iMaxParsedDigits,pattern.length()-position);
}
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
length--;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (pattern.length()){
case 0 :
return this;

case 1 :
return append0(new CharacterLiteral(text.charAt(0)));

default :
return append0(new StringLiteral(text));

}
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'&&c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(i==0&&(c=='-'||c=='+')||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c>='A'&&c<='\'+\''||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
negative=c=='-';
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
negative=c=='-';
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==0&&(c=='-'||c=='+')&&c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c>='A'&&c<='Z'||c>='\'-\''&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='\'+\''){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
hasSignChar=true;
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
hasSignChar=true;
negative=c=='-';

buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
hasSignChar=true;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
hasSignChar=true;
negative=c=='-';

boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
negative=c=='-';
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
negative=c=='-';
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
if(c=='-'){
length++;
}else {
i++;
}
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
if(c=='-'){
length++;
}else {
i++;
}
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length==0&&(c=='-'||c=='+')&&c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c>='A'&&c<='\'+\''&&c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'&&c>='a'&&c<='z'){
if(c=='-'){
length++;
}else {
i++;
}
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c>='A'&&c<='Z'&&c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
if(c=='-'){
length++;
}else {
i++;
}
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length==0&&(c=='-'||c=='+')||c>='a'&&c<='z'){
if(c=='-'){
length++;
}else {
i++;
}
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length==0&&(c=='-'||c=='+')||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
if(c=='-'){
length++;
}else {
i++;
}
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c>='A'&&c<='\'+\''||c>='a'&&c<='z'){
if(c=='-'){
length++;
}else {
i++;
}
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='\'+\''||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
if(c=='-'){
length++;
}else {
i++;
}
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
if(c=='-'){
length++;
}else {
i++;
}
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
if(c=='-'){
length++;
}else {
i++;
}
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length==0&&(c=='-'||c=='+')&&c>='a'&&c<='z'){
if(c=='-'){
length++;
}else {
i++;
}
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(length==0&&(c=='-'||c=='+')&&c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
if(c=='-'){
length++;
}else {
i++;
}
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c>='A'&&c<='\'+\''&&c>='a'&&c<='z'){
if(c=='-'){
length++;
}else {
i++;
}
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='\'+\''&&c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
if(c=='-'){
length++;
}else {
i++;
}
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'&&c>='a'&&c<='z'){
if(c=='-'){
length++;
}else {
i++;
}
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
if(c=='-'){
length++;
}else {
i++;
}
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(length==0&&(c=='-'||c=='+')||c>='a'&&c<='z'){
if(c=='-'){
length++;
}else {
i++;
}
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
if(c=='-'){
length++;
}else {
i++;
}
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c>='A'&&c<='\'+\''||c>='a'&&c<='z'){
if(c=='-'){
length++;
}else {
i++;
}
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
if(c=='-'){
length++;
}else {
i++;
}
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')&&c>='a'&&c<='z'){
if(c=='-'){
length++;
}else {
i++;
}
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
if(c=='-'){
length++;
}else {
i++;
}
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c>='A'&&c<='\'+\''&&c>='a'&&c<='z'){
if(c=='-'){
length++;
}else {
i++;
}
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
if(c=='-'){
length++;
}else {
i++;
}
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.toUpperCase(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.toUpperCase('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.toUpperCase(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.toUpperCase('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=pattern.length()){
return ~position;
}
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.format.DateTimeFormat,583
========
buf.append(pattern);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
msg.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new StringBuilder().append("\" from remaining set: ");
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append(c);
while(i+1<length){
char peek=pattern.append(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.write(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.log(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.append(Integer.toString(TIME));
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.charAt(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i=c-'0';
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c<'0'||c>'9'){
return ~TIME;
}
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=((year<<3)+(year<<1))+c-'0';
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=c-'0';
buf.charAt(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.substring(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append(c);
buf.append(getClass().getName());
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.append(c);
buf.append('[');
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.substring(c);
buf.append('[');
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append(c);
FormatUtils.appendPaddedInteger(buf,peek,2);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.append(c);
i-=peek*DateTimeConstants.MILLIS_PER_SECOND;
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.append('.');
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
FormatUtils.appendPaddedInteger(buf,i,3);
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i--;
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
i--;
buf.charAt(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.parseInt(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.append(c);
while(i+1<TIME){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append(c);
while(i+1<digits){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.append(c);
while(i<peek){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.append(c);
while(i+1<peek){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.append(c);
while(i+1<limit){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.append(c);
while(i+1<length){
char peek=text.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.append(c);
while(i+1<length){
i++;
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(peek==NONE&&length==NONE){
throw new IllegalArgumentException("Style \'--\' is invalid");
}
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.get(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.append(c);
FormatUtils.appendUnpaddedInteger(buf,getMillis());
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((getMillis()/1000)*1000==millis){
buf.setLength(buf.length()-3);
}else {
buf.insert(buf.length()-3,".");
}
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.append(c);
clearPrefix();
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.toUpperCase(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.toLowerCase(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
out.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.println(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
peek==null?null:buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ISODateTimeFormat.dateTime().printTo(buf,getStartMillis());
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ISODateTimeFormat.dateTime().printTo(buf,getEndMillis());
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=~i;
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i<transitions.length){
if(i>0){
return indexRef[i-1];
}
return 0;
}
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=~i;
if(i<transitions.length){
if(i>0){
return indexRef[i-1];
}
return 0;
}
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.append(c);
i=(i>=0)?(i+1):~i;
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.getValue(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iType=TIME;
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.writeByte(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.writeShort(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(indexRef,0,indexRef,0,i);
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
indexRef[i]=TIME;
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
System.arraycopy(indexRef,i,indexRef,i+1,newValues.length-i);
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(indexRef,0,indexRef,0,i);
indexRef[i]=TIME;
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.getUpperLimit(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
out.println(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.parseZoneChar(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sb.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (pattern.length()){
case 0 :
return this;

case 1 :
return append0(new CharacterLiteral(text.charAt(0)));

default :
return append0(new StringLiteral(text));

}
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.format.DateTimeFormat,585
org.joda.time.format.DateTimeFormat,586
org.joda.time.format.DateTimeFormat,587
org.joda.time.format.DateTimeFormat,596
org.joda.time.format.DateTimeFormat,598
org.joda.time.format.DateTimeFormat,600
org.joda.time.format.DateTimeFormat,601
org.joda.time.format.DateTimeFormat,603
org.joda.time.format.DateTimeFormat,611
org.joda.time.format.DateTimeFormat,613
org.joda.time.format.DateTimeFormat,614
org.joda.time.format.DateTimeFormat,616
org.joda.time.format.DateTimeFormat,621
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
if(i>=0){
buf.append('+');
}else {
buf.append('-');
offset=-offset;
}
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
FormatUtils.appendPaddedInteger(buf,i/DateTimeConstants.MILLIS_PER_HOUR,2);
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
i-=i/DateTimeConstants.MILLIS_PER_HOUR*(int)DateTimeConstants.MILLIS_PER_HOUR;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
buf.append(':');
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
FormatUtils.appendPaddedInteger(buf,peek,2);
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
i-=peek*DateTimeConstants.MILLIS_PER_MINUTE;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.append(':');
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
FormatUtils.appendPaddedInteger(buf,i/DateTimeConstants.MILLIS_PER_SECOND,2);
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i-=i/DateTimeConstants.MILLIS_PER_SECOND*DateTimeConstants.MILLIS_PER_SECOND;
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==0){
return buf.toString();
}
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append('.');
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
FormatUtils.appendPaddedInteger(buf,i,3);
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
buf.append(':');
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
buf.append(':');
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i==0){
return buf.toString();
}
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
buf.append(':');
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append('.');
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
buf.append(':');
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append(':');
if(i==0){
return buf.toString();
}
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append(':');
buf.append('.');
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i==0){
return buf.toString();
}
buf.append('.');
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append(':');
if(i==0){
return buf.toString();
}
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
buf.append(':');
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append(':');
buf.append('.');
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
buf.append(':');
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(i==0){
return buf.toString();
}
buf.append('.');
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
buf.append(':');
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append(':');
if(i==0){
return buf.toString();
}
buf.append('.');
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
buf.append(':');
if(i==0){
return buf.toString();
}
buf.append('.');
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
buf.append(':');
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c>='A'&&c<='Z'&&c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(i==0&&(c=='-'||c=='+')||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c>='A'&&c<='\'+\''||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
negative=c=='-';
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
negative=c=='-';
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==0&&(c=='-'||c=='+')&&c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return Integer.parseInt(pattern.substring(i,position+length));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length--;
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(pattern.charAt(i++)=='-'){
if(--length<0){
return 0;
}
inLiteral=true;
value=pattern.charAt(i++);
}else {
negative=false;
}
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TIME-='0';
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='\'-\''&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='\'+\''){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
hasSignChar=true;
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
hasSignChar=true;
negative=c=='-';

buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
hasSignChar=true;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
hasSignChar=true;
negative=c=='-';

boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
negative=c=='-';
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
negative=c=='-';
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
if(c=='-'){
length++;
}else {
TIME++;
}
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
if(c=='-'){
length++;
}else {
TIME++;
}
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0&&(c=='-'||c=='+')&&c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(c>='A'&&c<='\'+\''&&c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
buf.append("PT");
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
FormatUtils.appendUnpaddedInteger(buf,getMillis());
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
if((getMillis()/1000)*1000==millis){
buf.setLength(buf.length()-3);
}else {
buf.insert(buf.length()-3,".");
}
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
buf.append('S');
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
buf.append("PT");
buf.append('S');
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
ISODateTimeFormat.dateTime().printTo(buf,getStartMillis());
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
buf.append('/');
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
ISODateTimeFormat.dateTime().printTo(buf,getEndMillis());
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.toUpperCase(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.toUpperCase('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.toUpperCase(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.toUpperCase('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=pattern.length()){
return ~position;
}
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
i=~i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
if(i>=0){
return indexRef[i];
}
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
if(i<transitions.length){
if(i>0){
return indexRef[i-1];
}
return 0;
}
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
if(i>=0){
return indexRef[i];
}
i=~i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
if(i>=0){
return indexRef[i];
}
if(i<transitions.length){
if(i>0){
return indexRef[i-1];
}
return 0;
}
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
i=~i;
if(i<transitions.length){
if(i>0){
return indexRef[i-1];
}
return 0;
}
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
if(i>=0){
return indexRef[i];
}
i=~i;
if(i<transitions.length){
if(i>0){
return indexRef[i-1];
}
return 0;
}
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
i=(i>=0)?(i+1):~i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=value;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return DateTimeFormat.forPattern(pattern).print(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
if(pattern==null){
return toString();
}
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return Integer.toString(length).length();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
if(length>=0){
if(max<10){
return 1;
}else if(max<100){
return 2;
}else if(max<1000){
return 3;
}
}
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return Integer.parseInt(pattern.substring(i,position+length));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length--;
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return Integer.parseInt(pattern.substring(i,position+length));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern.charAt(i++)=='-'){
if(--length<0){
return 0;
}
inLiteral=true;
value=pattern.charAt(i++);
}else {
negative=false;
}
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return Integer.parseInt(pattern.substring(i,position+length));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TIME-='0';
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return Integer.parseInt(pattern.substring(i,position+length));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
length--;
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
if(pattern.charAt(i++)=='-'){
if(--length<0){
return 0;
}
inLiteral=true;
value=pattern.charAt(i++);
}else {
negative=false;
}
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
TIME-='0';
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length--;
if(pattern.charAt(i++)=='-'){
if(--length<0){
return 0;
}
inLiteral=true;
value=pattern.charAt(i++);
}else {
negative=false;
}
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length--;
TIME-='0';
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern.charAt(i++)=='-'){
if(--length<0){
return 0;
}
inLiteral=true;
value=pattern.charAt(i++);
}else {
negative=false;
}
TIME-='0';
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
length--;
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return Integer.parseInt(pattern.substring(i,position+length));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
if(pattern.charAt(i++)=='-'){
if(--length<0){
return 0;
}
inLiteral=true;
value=pattern.charAt(i++);
}else {
negative=false;
}
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return Integer.parseInt(pattern.substring(i,position+length));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
TIME-='0';
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return Integer.parseInt(pattern.substring(i,position+length));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length--;
if(pattern.charAt(i++)=='-'){
if(--length<0){
return 0;
}
inLiteral=true;
value=pattern.charAt(i++);
}else {
negative=false;
}
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return Integer.parseInt(pattern.substring(i,position+length));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length--;
TIME-='0';
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return Integer.parseInt(pattern.substring(i,position+length));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern.charAt(i++)=='-'){
if(--length<0){
return 0;
}
inLiteral=true;
value=pattern.charAt(i++);
}else {
negative=false;
}
TIME-='0';
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return Integer.parseInt(pattern.substring(i,position+length));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
length--;
if(pattern.charAt(i++)=='-'){
if(--length<0){
return 0;
}
inLiteral=true;
value=pattern.charAt(i++);
}else {
negative=false;
}
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
length--;
TIME-='0';
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
if(pattern.charAt(i++)=='-'){
if(--length<0){
return 0;
}
inLiteral=true;
value=pattern.charAt(i++);
}else {
negative=false;
}
TIME-='0';
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length--;
if(pattern.charAt(i++)=='-'){
if(--length<0){
return 0;
}
inLiteral=true;
value=pattern.charAt(i++);
}else {
negative=false;
}
TIME-='0';
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
length--;
if(pattern.charAt(i++)=='-'){
if(--length<0){
return 0;
}
inLiteral=true;
value=pattern.charAt(i++);
}else {
negative=false;
}
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return Integer.parseInt(pattern.substring(i,position+length));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
length--;
TIME-='0';
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return Integer.parseInt(pattern.substring(i,position+length));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
if(pattern.charAt(i++)=='-'){
if(--length<0){
return 0;
}
inLiteral=true;
value=pattern.charAt(i++);
}else {
negative=false;
}
TIME-='0';
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return Integer.parseInt(pattern.substring(i,position+length));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
length--;
if(pattern.charAt(i++)=='-'){
if(--length<0){
return 0;
}
inLiteral=true;
value=pattern.charAt(i++);
}else {
negative=false;
}
TIME-='0';
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return Integer.parseInt(pattern.substring(i,position+length));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length<=0){
return 0;
}
length--;
if(pattern.charAt(i++)=='-'){
if(--length<0){
return 0;
}
inLiteral=true;
value=pattern.charAt(i++);
}else {
negative=false;
}
TIME-='0';
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
checkPrinter();
return buf.toString();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c>='A'&&c<='Z'||c>='a'&&c<='z'){
buf.append(c);
while(i+1<length){
char peek=pattern.charAt(i+1);
if(peek==c){
buf.append(c);
i++;
}else {
break;
}
}
}else {
buf.append('\'');
boolean inLiteral=false;
for(;i<length;i++){
c=pattern.charAt(i);
if(c=='\''){
if(i+1<length&&pattern.charAt(i+1)=='\''){
i++;
buf.append(c);
}else {
inLiteral=!inLiteral;
}
}else if(!inLiteral&&(c>='A'&&c<='Z'||c>='a'&&c<='z')){
i--;
break;
}else {
buf.append(c);
}
}
}
indexRef[0]=i;
if(pattern==null){
return toString();
}
return DateTimeFormat.forPattern(pattern).print(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.format.DateTimeFormat,622
org.joda.time.format.DateTimeFormat,674
========
if(pattern==null||pattern.length()==0){
if(pattern==null){
return toString();
}
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(style==null||style.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern==null||pattern.length()!=2){
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(pattern==null||pattern.length()!=0){
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(style==null||pattern.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern==null||style.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern==null||pattern.length()==0){
throw new IllegalArgumentException("Invalid style specification: "+pattern);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(pattern==null||pattern.length()!=2){
throw new IllegalArgumentException("Invalid style specification: "+pattern);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(pattern==null||pattern.length()!=0){
throw new IllegalArgumentException("Invalid style specification: "+pattern);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iZeroOffsetPrintText==null||iZeroOffsetPrintText.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern==null&&pattern.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(pattern!=null||pattern.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iZeroOffsetPrintText==null||pattern.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern==null||iZeroOffsetPrintText.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern==null||pattern.length()==TIME){
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(pattern!=null&&pattern.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(pattern==null&&pattern.length()==TIME){
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(pattern!=null||pattern.length()==TIME){
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(pattern!=null&&pattern.length()==TIME){
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(matched==null||pattern.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern==null||name.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(best==null||pattern.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern==null||id.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(trimmed==null||trimmed.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern.length()==0||pattern.charAt(0)=='#'){
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(pattern==null||pattern.charAt(0)=='#'){
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(trimmed==null||pattern.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern==null||pattern.charAt(0)==0){
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(pattern==null||trimmed.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(text==null||pattern.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern==null||pattern.length()==0){
if(TIME>=pattern.length()){
return ~position;
}
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nextKey==null||nextKey.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nextKey==null||pattern.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern==null||nextKey.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern==null||pattern.charAt(iType+1)=='\''){
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern==null||pattern.charAt(iType+1)==0){
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern==null||pattern.charAt(TIME-1)!='0'){
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(pattern==null||pattern.charAt(TIME-1)==0){
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(pattern==null||str.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern==null||pattern.charAt(TIME-1)!=0){
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
TIME+=TIME;
if(pattern==null||pattern.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.format.DateTimeFormat,677
========
if(f==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lte==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(hde==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ye==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(we==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(r.iName,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(mye==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dme==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(wwe==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dwe==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dye==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(mhe==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sme==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bod==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(cOffsetFormatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ze==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dp==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fse==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(formatter==null){
iType++;
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bd==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ldotp==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(t==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tx==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tt==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ttx==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dt==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dtx==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(od==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(odt==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(odtx==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(wdt==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(wdtx==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(btt==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bttx==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bdt==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bdtx==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bodt==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bodtx==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bwdt==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bwdtx==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ym==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ww==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(hm==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dtp==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tpe==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bwd==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(btx==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dotp==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ltp==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ymd==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(wwd==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(hms==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dh==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dhm==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dhms==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dhmsl==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dhmsf==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bt==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tp==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(hmsf==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(hmsl==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pattern==null||pattern.length()==0)){
throw new IllegalArgumentException("Invalid pattern specification");
}
DateTimeFormatter formatter=null;
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(pattern==null||pattern.length()==0||pattern.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}
DateTimeFormatter formatter=null;
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(parsedForm==null||pattern.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}
DateTimeFormatter formatter=null;
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern==null||pattern.length()==0){
if(pattern==null){
return toString();
}
throw new IllegalArgumentException("Invalid pattern specification");
}
DateTimeFormatter formatter=null;
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZeroOffsetPrintText==null||iZeroOffsetPrintText.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}
DateTimeFormatter formatter=null;
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern==null&&pattern.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}
DateTimeFormatter formatter=null;
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(pattern!=null||pattern.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}
DateTimeFormatter formatter=null;
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iZeroOffsetPrintText==null||pattern.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}
DateTimeFormatter formatter=null;
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern==null||iZeroOffsetPrintText.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}
DateTimeFormatter formatter=null;
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern==null||pattern.length()==TIME){
throw new IllegalArgumentException("Invalid pattern specification");
}
DateTimeFormatter formatter=null;
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(pattern!=null&&pattern.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}
DateTimeFormatter formatter=null;
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(pattern==null&&pattern.length()==TIME){
throw new IllegalArgumentException("Invalid pattern specification");
}
DateTimeFormatter formatter=null;
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(pattern!=null||pattern.length()==TIME){
throw new IllegalArgumentException("Invalid pattern specification");
}
DateTimeFormatter formatter=null;
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(pattern!=null&&pattern.length()==TIME){
throw new IllegalArgumentException("Invalid pattern specification");
}
DateTimeFormatter formatter=null;
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(matched==null||pattern.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}
DateTimeFormatter formatter=null;
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern==null||name.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}
DateTimeFormatter formatter=null;
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(best==null||pattern.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}
DateTimeFormatter formatter=null;
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern==null||id.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}
DateTimeFormatter formatter=null;
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern==null||pattern.charAt(iType+1)=='\''){
throw new IllegalArgumentException("Invalid pattern specification");
}
DateTimeFormatter formatter=null;
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern==null||pattern.charAt(iType+1)==0){
throw new IllegalArgumentException("Invalid pattern specification");
}
DateTimeFormatter formatter=null;
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(style==null||style.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}
DateTimeFormatter formatter=null;
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern==null||pattern.length()!=2){
throw new IllegalArgumentException("Invalid pattern specification");
}
DateTimeFormatter formatter=null;
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(pattern==null||pattern.length()!=0){
throw new IllegalArgumentException("Invalid pattern specification");
}
DateTimeFormatter formatter=null;
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(style==null||pattern.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}
DateTimeFormatter formatter=null;
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern==null||style.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}
DateTimeFormatter formatter=null;
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern==null||pattern.length()==0){
throw new IllegalArgumentException("Invalid style specification: "+pattern);
}
DateTimeFormatter formatter=null;
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(pattern==null||pattern.length()!=2){
throw new IllegalArgumentException("Invalid style specification: "+pattern);
}
DateTimeFormatter formatter=null;
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(pattern==null||pattern.length()!=0){
throw new IllegalArgumentException("Invalid style specification: "+pattern);
}
DateTimeFormatter formatter=null;
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(pattern==null||pattern.length()==0){
throw new IllegalArgumentException("Invalid format: \""+pattern);
}
DateTimeFormatter formatter=null;
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(pattern==null||pattern.length()==0){
if(pattern==null){
return null;
}
throw new IllegalArgumentException("Invalid pattern specification");
}
DateTimeFormatter formatter=null;
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(pattern==null||pattern.length()==0){
throw new IllegalArgumentException("Literal must not be null");
}
DateTimeFormatter formatter=null;
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
swtich (pattern.length()){
case 0 :
return this;

case 1 :
return append0(new CharacterLiteral(text.charAt(0)));

default :
return append0(new StringLiteral(text));

}
if(pattern==null||pattern.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}
DateTimeFormatter formatter=null;
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nextKey==null||nextKey.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}
DateTimeFormatter formatter=null;
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nextKey==null||pattern.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}
DateTimeFormatter formatter=null;
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pattern==null||nextKey.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}
DateTimeFormatter formatter=null;
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(finalText==null||pattern.length()==0){
throw new IllegalArgumentException("Invalid pattern specification");
}
DateTimeFormatter formatter=null;
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.format.DateTimeFormat,678
Find no block!
org.joda.time.format.DateTimeFormat,679
========
formatter=cPatternedCache.get(pattern);
if(formatter!=null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(new PeriodType(null,type.iTypes,null),formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
formatter=cPatternedCache.get(pattern);
if(formatter==TIME){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
formatter=cPatternedCache.get(pattern);
if(pattern==null){
return null;
}
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.joda.time.format.DateTimeFormat,680
org.joda.time.format.DateTimeFormat,681
org.joda.time.format.DateTimeFormat,682
org.joda.time.format.DateTimeFormat,683
org.joda.time.format.DateTimeFormat,685
org.joda.time.format.DateTimeFormat,687
Find no block!
org.joda.time.format.DateTimeFormat,688
========
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}
if(formatter==null){
return toString();
}
return formatter;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}
builder=(FieldFormatter[])iFieldFormatters.clone();
return formatter;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}
if(pattern==null){
return toString();
}
return formatter;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}
return MIN_VALUE;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
synchronized(cPatternedCache){
formatter=cPatternedCache.get(pattern);
if(formatter==null){
DateTimeFormatterBuilder builder=new DateTimeFormatterBuilder();
parsePatternTo(builder,pattern);
formatter=builder.toFormatter();
cPatternedCache.put(pattern,formatter);
}
}
return MAX_VALUE;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.format.DateTimeFormatterBuilder,549
========
if(fieldType==null){
throw new IllegalArgumentException("The DateTimeFieldType must not be null");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldType==null){
throw new IllegalArgumentException("Field must not be null");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldType==null){
throw new IllegalArgumentException("The field type must not be null");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldType==false){
throw new IllegalArgumentException("Field type must not be null");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldType==null){
throw new IllegalArgumentException("Field \'"+fieldType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldType==false){
throw new IllegalArgumentException("Field \'"+fieldType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.format.DateTimeFormatterBuilder,552
========
if(fieldType==null){
throw new IllegalArgumentException("Field type must not be null");
}
return append0(new TextField(fieldType,false));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldType==null){
throw new IllegalArgumentException("Field must not be null");
}
return append0(new TextField(fieldType,true));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldType==null){
throw new IllegalArgumentException("The field type must not be null");
}
return append0(new TextField(fieldType,true));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldType==null){
throw new IllegalArgumentException("Field type must not be null");
}
return append0(new FixedNumber(fieldType,iMaxDigits,false));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldType==null){
throw new IllegalArgumentException("Field type must not be null");
}
if(iMaxDigits<=0){
throw new IllegalArgumentException("Illegal number of digits: "+numDigits);
}
return append0(new TextField(fieldType,true));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldType==null){
throw new IllegalArgumentException("Field type must not be null");
}
return append0(new FixedNumber(fieldType,iMaxDigits,true));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldType==false){
throw new IllegalArgumentException("Field type must not be null");
}
return append0(new TextField(fieldType,true));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldType==null){
throw new IllegalArgumentException("Field \'"+fieldType);
}
return append0(new TextField(fieldType,true));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(fieldType==null){
throw new IllegalArgumentException("The DateTimeFieldType must not be null");
}
return append0(new TextField(fieldType,true));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isSupported(fieldType)==false){
throw new IllegalArgumentException("Field \'"+fieldType);
}
if(fieldType==null){
throw new IllegalArgumentException("Field type must not be null");
}
return append0(new TextField(fieldType,true));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isSupported(fieldType)==false){
throw new IllegalArgumentException("Field \'"+fieldType);
}
if(fieldType==null){
throw new IllegalArgumentException("The DateTimeFieldType must not be null");
}
return append0(new TextField(fieldType,true));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldType==null){
if(iMaxDigits<=1){
return append0(new UnpaddedNumber(fieldType,iMaxDigits,false));
}else {
return append0(new PaddedNumber(fieldType,maxDigits,false,minDigits));
}
throw new IllegalArgumentException("Field type must not be null");
}
return append0(new TextField(fieldType,true));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldType==null){
if(iMaxDigits<=1){
return append0(new UnpaddedNumber(fieldType,iMaxDigits,true));
}else {
return append0(new PaddedNumber(fieldType,maxDigits,true,minDigits));
}
throw new IllegalArgumentException("Field type must not be null");
}
return append0(new TextField(fieldType,true));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldType==null){
throw new IllegalArgumentException("No printer or parser supplied");
}
return append0(new TextField(fieldType,true));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
clearPrefix();
if(fieldType==null){
throw new IllegalArgumentException("Field type must not be null");
}
return append0(new TextField(fieldType,true));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldType==null){
throw new IllegalArgumentException("Literal must not be null");
}
return append0(new TextField(fieldType,true));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
append0(new Literal(iValue),literal);
if(fieldType==null){
throw new IllegalArgumentException("Field type must not be null");
}
return append0(new TextField(fieldType,true));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
clearPrefix();
if(fieldType==null){
throw new IllegalArgumentException("Literal must not be null");
}
return append0(new TextField(fieldType,true));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldType==null){
throw new IllegalArgumentException("Field type must not be null");
}
iParsers[iType]=iParsers[i];
return append0(new TextField(fieldType,true));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldType==null){
throw new IllegalArgumentException("Field type must not be null");
}
return append0(null,new MatchingParser(iParsers));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldType==null){
throw new IllegalArgumentException("Field type must not be null");
}
return append0(new TimeZoneName(TimeZoneName.LONG_NAME,iParseLookup),pp);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldType==null){
throw new IllegalArgumentException("Field type must not be null");
}
return append0(new TimeZoneName(TimeZoneName.SHORT_NAME,iParseLookup),pp);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldType==false){
throw new IllegalArgumentException("Field \'"+fieldType);
}
return append0(new TextField(fieldType,true));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fieldType==null){
throw new IllegalArgumentException("Field type must not be null");
}
return append0(new CharacterLiteral(iValue.charAt(0)));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :

if(fieldType==null){
throw new IllegalArgumentException("Field type must not be null");
}
return append0(new TextField(fieldType,true));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.format.DateTimeFormatterBuilder,976
========
return appendText(DateTimeFieldType.dayOfWeek());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
return appendShortText(DateTimeFieldType.monthOfYear());

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
return appendDecimal(DateTimeFieldType.dayOfWeek(),iMaxDigits,1);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.format.DateTimeFormatter,190
========
if(locale==getLocale()&&(locale!=null&&locale.equals(getLocale()))){
return this;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(symbols.iLocale.get()==locale){
return this;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(locale==getLocale()||symbols.iLocale.get()==locale){
return this;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((iPivotYear!=null&&iPivotYear.equals(iPivotYear))){
return this;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iPivotYear==iPivotYear||(locale!=null&&locale.equals(getLocale()))){
return this;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(locale==getLocale()||(iPivotYear!=null&&iPivotYear.equals(iPivotYear))){
return this;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(locale==getLocale()||(iPivotYear!=null&&locale.equals(getLocale()))){
return this;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iPivotYear==iPivotYear||(iPivotYear!=null&&iPivotYear.equals(iPivotYear))){
return this;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iPivotYear==iPivotYear||(iPivotYear!=null&&locale.equals(getLocale()))){
return this;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Calendar.getInstance(getZone().toTimeZone(),locale).setTime(toDate());
if(locale==getLocale()||(locale!=null&&locale.equals(getLocale()))){
return this;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.format.DateTimeFormatter,193
========
if((iPivotYear!=null&&iPivotYear.equals(iPivotYear))){
return this;
}
return new DateTimeFormatter(iPrinter,iParser,locale,iOffsetParsed,iChrono,iZone,iPivotYear,iDefaultYear);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iPivotYear==iPivotYear||(locale!=null&&locale.equals(getLocale()))){
return this;
}
return new DateTimeFormatter(iPrinter,iParser,locale,iOffsetParsed,iChrono,iZone,iPivotYear,iDefaultYear);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(locale==getLocale()||(iPivotYear!=null&&iPivotYear.equals(iPivotYear))){
return this;
}
return new DateTimeFormatter(iPrinter,iParser,locale,iOffsetParsed,iChrono,iZone,iPivotYear,iDefaultYear);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(locale==getLocale()||(iPivotYear!=null&&locale.equals(getLocale()))){
return this;
}
return new DateTimeFormatter(iPrinter,iParser,locale,iOffsetParsed,iChrono,iZone,iPivotYear,iDefaultYear);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iPivotYear==iPivotYear||(iPivotYear!=null&&iPivotYear.equals(iPivotYear))){
return this;
}
return new DateTimeFormatter(iPrinter,iParser,locale,iOffsetParsed,iChrono,iZone,iPivotYear,iDefaultYear);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iPivotYear==iPivotYear||(iPivotYear!=null&&locale.equals(getLocale()))){
return this;
}
return new DateTimeFormatter(iPrinter,iParser,locale,iOffsetParsed,iChrono,iZone,iPivotYear,iDefaultYear);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(locale==getLocale()&&(locale!=null&&locale.equals(getLocale()))){
return this;
}
return new DateTimeFormatter(iPrinter,iParser,locale,iOffsetParsed,iChrono,iZone,iPivotYear,iDefaultYear);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(symbols.iLocale.get()==locale){
return this;
}
return new DateTimeFormatter(iPrinter,iParser,locale,iOffsetParsed,iChrono,iZone,iPivotYear,iDefaultYear);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(locale==getLocale()||symbols.iLocale.get()==locale){
return this;
}
return new DateTimeFormatter(iPrinter,iParser,locale,iOffsetParsed,iChrono,iZone,iPivotYear,iDefaultYear);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Calendar.getInstance(getZone().toTimeZone(),locale).setTime(toDate());
if(locale==getLocale()||(locale!=null&&locale.equals(getLocale()))){
return this;
}
return new DateTimeFormatter(iPrinter,iParser,locale,iOffsetParsed,iChrono,iZone,iPivotYear,iDefaultYear);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.format.DateTimeFormatter,204
org.joda.time.format.DateTimeFormatter,701
========
DateTimeParser parser=requireParser();
if(instant==null){
throw new IllegalArgumentException("No parser supplied");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
DateTimeParser parser=requireParser();
if(instant==null){
throw new UnsupportedOperationException("Parsing not supported");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
DateTimeParser parser=requireParser();
if(instant==null){
if(position<=position){
return position;
}
throw new IllegalArgumentException("Instant must not be null");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
instant.setChronology(iChrono);
DateTimeParser parser=requireParser();
if(instant==null){
throw new IllegalArgumentException("Instant must not be null");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.joda.time.format.DateTimeFormatter,702
org.joda.time.format.DateTimeFormatter,706
========
if(instant==null){
throw new IllegalArgumentException("ReadableInstant objects must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(getMillis()==instantMillis){
return 0;
}
if(instant==null){
throw new IllegalArgumentException("Instant must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=chrono.set(this,instant);
if(instant==null){
throw new IllegalArgumentException("Instant must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.getMillis()<instantMillis){
return -1;
}
if(instant==null){
throw new IllegalArgumentException("Instant must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.getMillis()>instantMillis){
return 1;
}
if(instant==null){
throw new IllegalArgumentException("Instant must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant!=null){
throw new IllegalArgumentException("Instant must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(null==null){
chrono=ISOChronology.getInstance();
}
if(instant==null){
throw new IllegalArgumentException("Instant must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant==null){
throw new IllegalArgumentException("The time must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
chrono=chrono.withZone(iZone);
if(instant==null){
throw new IllegalArgumentException("Instant must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant==null){
throw new IllegalArgumentException("The partial must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
super();
if(instant==null){
throw new IllegalArgumentException("Instant must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant==null){
throw new IllegalArgumentException("Field must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instant==null){
throw new IllegalArgumentException("Instant must not be null");
}
if(position==0){
return this;
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant==null){
throw new IllegalArgumentException("Interval must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instant==null){
throw new IllegalArgumentException("The DateTimeFieldType must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instant==null){
throw new IllegalArgumentException("The DateTimeField must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instant==null){
if(instant==null){
return ISOChronology.getInstance();
}
throw new IllegalArgumentException("Instant must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chrono==null){
return ISOChronology.getInstance();
}
if(instant==null){
throw new IllegalArgumentException("Instant must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant==null){
throw new IllegalArgumentException("Instant must not be null");
}
iZone=DateTimeUtils.getZone(zone);
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant==null){
throw new IllegalArgumentException("Field must not be null");
}
if(position==0){
return this;
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant==null){
throw new IllegalArgumentException("Instant must not be null");
}
int instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant==null){
throw new IllegalArgumentException("Instant must not be null");
}
if(text.length()<=0){
throw new IllegalArgumentException("Format invalid: "+text);
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instant==null){
throw new LimitException(text,true);
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant==null){
throw new LimitException(text,false);
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant==null){
if(instant==null){
return DateTimeUtils.currentTimeMillis();
}
throw new IllegalArgumentException("Instant must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant.setChronology(chrono);
if(instant==null){
throw new IllegalArgumentException("Instant must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone!=null){
instant.setZone(iZone);
}
if(instant==null){
throw new IllegalArgumentException("Instant must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instant==null){
throw new IllegalArgumentException("Instant must not be null");
}
iZone=DateTimeUtils.getZone(newZone);
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone==DateTimeUtils.getZone(getZone())){
return ;
}
if(instant==null){
throw new IllegalArgumentException("Instant must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setChronology(getChronology().withZone(iZone));
if(instant==null){
throw new IllegalArgumentException("Instant must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setMillis(instantMillis);
if(instant==null){
throw new IllegalArgumentException("Instant must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=chrono.dayOfMonth().roundFloor(instant);
if(instant==null){
throw new IllegalArgumentException("Instant must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant==null){
if(instant==null){
return containsNow();
}
throw new IllegalArgumentException("Instant must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant==null){
if(instant==null){
return isBeforeNow();
}
throw new IllegalArgumentException("Instant must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant==null){
if(instant==null){
return isAfterNow();
}
throw new IllegalArgumentException("Instant must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant==null){
if(instant==null){
return getOffset(DateTimeUtils.currentTimeMillis());
}
throw new IllegalArgumentException("Instant must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone==DateTimeUtils.getZone(getZone())){
return this;
}
if(instant==null){
throw new IllegalArgumentException("Instant must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone==DateTimeUtils.getZone(getZone())){
return this;
}
if(instant==null){
throw new IllegalArgumentException("Instant must not be null");
}
iZone=DateTimeUtils.getZone(newZone);
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant==iZone){
throw new IllegalArgumentException("Instant must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instant!=iZone){
throw new IllegalArgumentException("Instant must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant==null){
if(instant==null){
return getField().getDifference(getMillis(),DateTimeUtils.currentTimeMillis());
}
throw new IllegalArgumentException("Instant must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant==null){
if(instant==null){
return getField().getDifferenceAsLong(getMillis(),DateTimeUtils.currentTimeMillis());
}
throw new IllegalArgumentException("Instant must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
position=31*result+((int)(instantMillis^(start>>>32)));
if(instant==null){
throw new IllegalArgumentException("Instant must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
position=31*result+((int)(getEndMillis()^(end>>>32)));
if(instant==null){
throw new IllegalArgumentException("Instant must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
position=31*result+getChronology().hashCode();
if(instant==null){
throw new IllegalArgumentException("Instant must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant==Long.MIN_VALUE){
throw new IllegalArgumentException("Instant must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ISODateTimeFormat.dateTime().printTo(new StringBuffer(48),getStartMillis());
if(instant==null){
throw new IllegalArgumentException("Instant must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new StringBuffer(48).append('/');
if(instant==null){
throw new IllegalArgumentException("Instant must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ISODateTimeFormat.dateTime().printTo(new StringBuffer(48),getEndMillis());
if(instant==null){
throw new IllegalArgumentException("Instant must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chrono.getZone()!=null){
instantMillis=zone.getMillisKeepLocal(DateTimeZone.UTC,instantMillis);
}
if(instant==null){
throw new IllegalArgumentException("Instant must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setTime(instantMillis);
if(instant==null){
throw new IllegalArgumentException("Instant must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parser.parseInto(new DateTimeParserBucket(0,chrono,iLocale,iPivotYear,iDefaultYear),text,0)>=0){
if(newPos>=text.length()){
return new DateTimeParserBucket(0,chrono,iLocale,iPivotYear,iDefaultYear).computeMillis(true,text);
}
}else {
newPos=~newPos;
}
if(instant==null){
throw new IllegalArgumentException("Instant must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant==null){
throw new IllegalArgumentException("Instant must not be null");
}
super();
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=iChrono;
if(instant==null){
throw new IllegalArgumentException("Instant must not be null");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=iChrono;
if(instant==null){
throw new IllegalArgumentException("Instant must not be null");
}
super();
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant==null){
throw new IllegalArgumentException("Instant must not be null");
}
instant+=position;
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.format.DateTimeFormatter,707
========
chrono=selectChronology(chrono);
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iZone=DateTimeUtils.getZone(zone);
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantMillis=instant.getMillis();
if(chrono==null){
return ISOChronology.getInstance(iZone);
}
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iZone=DateTimeUtils.getZone(newZone);
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone==DateTimeUtils.getZone(getZone())){
return this;
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iZone=DateTimeUtils.getZone(newZone);
if(iZone==DateTimeUtils.getZone(getZone())){
return this;
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=chrono.withZone(iZone);
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone==DateTimeUtils.getZone(getZone())){
return ;
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setChronology(getChronology().withZone(iZone));
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setMillis(instantMillis);
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instant+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=DateTimeUtils.getChronology(chrono);
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantLocal==instantMillis){
return 0;
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super();
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=chrono;
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=checkInstant(ConverterManager.getInstance().getInstantConverter(instant).getInstantMillis(instant,chrono),chrono);
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iChrono=ConverterManager.getInstance().getPartialConverter(instant).getChronology(instant,chronology);
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iChrono=DateTimeUtils.getChronology(chronology);
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=iChrono.withUTC();
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=ConverterManager.getInstance().getPartialConverter(instant).getPartialValues(this,instant,iChrono);
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chrono.getZone()!=null){
instantMillis=zone.getMillisKeepLocal(DateTimeZone.UTC,instantMillis);
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setTime(instantMillis);
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=ConverterManager.getInstance().getPartialConverter(instant).getPartialValues(this,instant,iChrono,parser);
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super();
iChrono=ConverterManager.getInstance().getPartialConverter(instant).getChronology(instant,chronology);
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super();
iChrono=DateTimeUtils.getChronology(chronology);
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super();
chrono=iChrono.withUTC();
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iChrono=ConverterManager.getInstance().getPartialConverter(instant).getChronology(instant,chronology);
iChrono=DateTimeUtils.getChronology(chronology);
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iChrono=ConverterManager.getInstance().getPartialConverter(instant).getChronology(instant,chronology);
chrono=iChrono.withUTC();
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iChrono=DateTimeUtils.getChronology(chronology);
chrono=iChrono.withUTC();
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super();
iChrono=ConverterManager.getInstance().getPartialConverter(instant).getChronology(instant,chronology);
iChrono=DateTimeUtils.getChronology(chronology);
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super();
iChrono=ConverterManager.getInstance().getPartialConverter(instant).getChronology(instant,chronology);
chrono=iChrono.withUTC();
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super();
iChrono=DateTimeUtils.getChronology(chronology);
chrono=iChrono.withUTC();
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iChrono=ConverterManager.getInstance().getPartialConverter(instant).getChronology(instant,chronology);
iChrono=DateTimeUtils.getChronology(chronology);
chrono=iChrono.withUTC();
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super();
iChrono=ConverterManager.getInstance().getPartialConverter(instant).getChronology(instant,chronology);
iChrono=DateTimeUtils.getChronology(chronology);
chrono=iChrono.withUTC();
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=chrono.dayOfMonth().roundFloor(instant);
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantLocal<instantMillis){
return -1;
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantLocal>instantMillis){
return 1;
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=DateTimeUtils.getChronology(chronology);
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=chrono.getZone().getMillisKeepLocal(DateTimeZone.UTC,instantMillis);
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iChrono=chrono.withUTC();
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant==null){
return ISOChronology.getInstance();
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chrono==null){
return ISOChronology.getInstance();
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=ConverterManager.getInstance().getPartialConverter(instant).getChronology(instant,iZone).withUTC();
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=chrono.getDateTimeMillis(ConverterManager.getInstance().getPartialConverter(instant).getPartialValues(this,instant,ConverterManager.getInstance().getPartialConverter(instant).getChronology(instant,iZone),ISODateTimeFormat.localDateParser())[0],values[1],values[2],0);
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantMillis=instant.getMillis();
iChrono=ConverterManager.getInstance().getPartialConverter(instant).getChronology(instant,chronology);
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantMillis=instant.getMillis();
iChrono=DateTimeUtils.getChronology(chronology);
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantMillis=instant.getMillis();
chrono=iChrono.withUTC();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=chrono.getDateTimeMillis(ConverterManager.getInstance().getPartialConverter(instant).getPartialValues(this,instant,iChrono,ISODateTimeFormat.localDateParser())[0],values[1],values[2],0);
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=chrono.getDateTimeMillis(ConverterManager.getInstance().getPartialConverter(instant).getPartialValues(this,instant,ConverterManager.getInstance().getPartialConverter(instant).getChronology(instant,iZone),ISODateTimeFormat.localDateOptionalTimeParser())[0],values[1],values[2],values[3]);
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iChrono=DateTimeUtils.getChronology(chronology);
chrono=ConverterManager.getInstance().getPartialConverter(instant).getChronology(instant,iZone).withUTC();
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=chrono.getDateTimeMillis(ConverterManager.getInstance().getPartialConverter(instant).getPartialValues(this,instant,iChrono,ISODateTimeFormat.localDateOptionalTimeParser())[0],values[1],values[2],values[3]);
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantMillis=instant.getMillis();
iChrono=ConverterManager.getInstance().getPartialConverter(instant).getChronology(instant,chronology);
iChrono=DateTimeUtils.getChronology(chronology);
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantMillis=instant.getMillis();
iChrono=ConverterManager.getInstance().getPartialConverter(instant).getChronology(instant,chronology);
chrono=iChrono.withUTC();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantMillis=instant.getMillis();
iChrono=DateTimeUtils.getChronology(chronology);
chrono=iChrono.withUTC();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantMillis=instant.getMillis();
iChrono=ConverterManager.getInstance().getPartialConverter(instant).getChronology(instant,chronology);
iChrono=DateTimeUtils.getChronology(chronology);
chrono=iChrono.withUTC();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=chrono.getDateTimeMillis(0L,ConverterManager.getInstance().getPartialConverter(instant).getPartialValues(this,instant,ConverterManager.getInstance().getPartialConverter(instant).getChronology(instant,iZone),ISODateTimeFormat.localTimeParser())[0],values[1],values[2],values[3]);
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=chrono.getDateTimeMillis(0L,ConverterManager.getInstance().getPartialConverter(instant).getPartialValues(this,instant,iChrono,ISODateTimeFormat.localTimeParser())[0],values[1],values[2],values[3]);
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super.setInterval(instantLocal,instantMillis,chrono);
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantMillis=instant.getMillis();
if(instantMillis==toDurationMillis()){
return this;
}
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iChrono=checkChronology(ConverterManager.getInstance().getInstantConverter(instant).getChronology(instant,iChrono));
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=checkInstant(ConverterManager.getInstance().getInstantConverter(instant).getInstantMillis(instant,iChrono),iChrono);
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantMillis=chrono.set(this,instant);
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iChrono=chronology.withUTC();
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=iChrono.millisOfDay().get(instantMillis);
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=iChrono;
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=iChrono.dayOfMonth().roundFloor(instantMillis);
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iChrono=DateTimeUtils.getChronology(chronology);
iChrono=chronology.withUTC();
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iChrono=DateTimeUtils.getChronology(chronology);
chrono=iChrono;
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iChrono=chronology.withUTC();
chrono=iChrono;
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iChrono=DateTimeUtils.getChronology(chronology);
iChrono=chronology.withUTC();
chrono=iChrono;
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setPeriod(instantMillis,chrono);
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=ConverterManager.getInstance().getInstantConverter(instant).getInstantMillis(instant,ISOChronology.getInstanceUTC());
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(position==0){
return this;
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantMillis=iFieldType.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setDate(instantMillis);
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super();
chrono=chrono;
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(text!=null){
return name;
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=millis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
boolean instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
new StringBuffer().append("PT");
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
int instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=DateTimeUtils.getChronology(chronology).withUTC();
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iChrono=chrono;
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=instant;
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super();
chrono=DateTimeUtils.getChronology(chronology).withUTC();
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super();
iChrono=chrono;
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super();
instantLocal=instant;
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=DateTimeUtils.getChronology(chronology).withUTC();
iChrono=chrono;
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=DateTimeUtils.getChronology(chronology).withUTC();
instantLocal=instant;
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iChrono=chrono;
instantLocal=instant;
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super();
chrono=DateTimeUtils.getChronology(chronology).withUTC();
iChrono=chrono;
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super();
chrono=DateTimeUtils.getChronology(chronology).withUTC();
instantLocal=instant;
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super();
iChrono=chrono;
instantLocal=instant;
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=DateTimeUtils.getChronology(chronology).withUTC();
iChrono=chrono;
instantLocal=instant;
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super();
chrono=DateTimeUtils.getChronology(chronology).withUTC();
iChrono=chrono;
instantLocal=instant;
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super.setInterval(instantMillis,getEndMillis(),getChronology());
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super.setInterval(getStartMillis(),instantMillis,getChronology());
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iLocale==null){
locale=Locale.getDefault();
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Calendar.getInstance(getZone().toTimeZone(),iLocale).setTime(toDate());
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(text.length()<=0){
throw new IllegalArgumentException("Format invalid: "+text);
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(position==instantLocal&&text.equals(iZone.getNameKey(instantMillis))){
System.out.println("*d* Error in "+iZone.getID());
return false;
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantLocal!=instantMillis){
throw new IllegalArgumentException("The addition exceeded the boundaries of LocalTime");
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(text.equals("UTC")){
return DateTimeZone.UTC;
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone!=null){
return zone;
}
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setMillis(getChronology().millisOfDay().set(getMillis(),position));
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
checkYearsAndMonths("Minutes");
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
instantMillis+=((long)getSeconds())*DateTimeConstants.MILLIS_PER_SECOND;
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
position=31*result+((int)(instantMillis^(start>>>32)));
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
position=31*result+((int)(instantLocal^(end>>>32)));
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
position=31*result+getChronology().hashCode();
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ISODateTimeFormat.dateTime().printTo(new StringBuffer(48),getStartMillis());
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new StringBuffer(48).append('/');
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ISODateTimeFormat.dateTime().printTo(new StringBuffer(48),getEndMillis());
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=selectChronology(chrono);
long instantMillis=instant.getMillis();
Chronology chrono=instant.getChronology();
long instantLocal=instant+chrono.getZone().getOffset(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.format.DateTimeFormatter,708
========
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
super();
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=instantLocal;
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iZone=chrono.getZone();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chrono==null){
return ISOChronology.getInstance(iZone);
}
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iZone=DateTimeUtils.getZone(zone);
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant instanceof ReadableDateTime){
ReadableDateTime (ReadableDateTime)instant=(ReadableDateTime)instant;
Chronology chrono=DateTimeUtils.getChronology(rdt.getChronology());
DateTimeZone chrono.getZone()=instantChrono.getZone();
if(zone!=null){
instantLocal=zone.getMillisKeepLocal(getZone(),instantMillis);
}
}
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setValues(chrono.get(this,instantMillis));
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setValues(chrono.get(this,instantLocal,instantMillis));
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=chrono.withUTC();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instant==null){
return ISOChronology.getInstance();
}
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chrono==null){
return ISOChronology.getInstance();
}
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=chrono.dayOfMonth().roundFloor(instant);
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iChrono!=null){
chrono=iChrono;
}
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone!=null){
chrono=chrono.withZone(iZone);
}
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iChrono=chrono;
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=checkInstant(ConverterManager.getInstance().getInstantConverter(instant).getInstantMillis(instant,chrono),chrono);
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setPeriod(instantLocal,chrono);
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super.setInterval(instantMillis,instantLocal,chrono);
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology chrono=instant.getChronology();
long instantLocal=instantLocal+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getOffset(instantMillis-position)==position){
return instantMillis-position;
}
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iZone=DateTimeUtils.getZone(newZone);
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone==DateTimeUtils.getZone(getZone())){
return ;
}
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setChronology(getChronology().withZone(iZone));
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setMillis(instantLocal);
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantMillis==toDurationMillis()){
return this;
}
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone==DateTimeUtils.getZone(getZone())){
return this;
}
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iZone=DateTimeUtils.getZone(newZone);
if(iZone==DateTimeUtils.getZone(getZone())){
return this;
}
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=chrono.set(this,instant);
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology chrono=iFieldType.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super();
iChrono=chrono;
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getChronology()==chrono){
return this;
}
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=chrono.getZone().getMillisKeepLocal(DateTimeZone.UTC,instantMillis);
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iChrono=chrono.withUTC();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology chrono=instant.getChronology();
int instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=DateTimeUtils.getChronology(chronology);
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super();
iChrono=chrono.withUTC();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super();
chrono=DateTimeUtils.getChronology(chronology);
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=DateTimeUtils.getChronology(chronology);
iChrono=chrono.withUTC();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super();
chrono=DateTimeUtils.getChronology(chronology);
iChrono=chrono.withUTC();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=newChronology.withUTC();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(text.length()<=0){
throw new IllegalArgumentException("Format invalid: "+text);
}
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(chrono.getZone()!=null){
instantMillis=zone.getMillisKeepLocal(DateTimeZone.UTC,instantMillis);
}
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setTime(instantMillis);
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=chrono.monthOfYear().set(millis,iDefaultYear);
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=chrono.millisOfDay().set(millis,iDefaultYear);
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=chronology.withUTC();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=chrono.millisOfDay().get(chrono.getZone().getMillisKeepLocal(DateTimeZone.UTC,instantMillis));
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=chrono.dayOfMonth().roundFloor(chrono.getZone().getMillisKeepLocal(DateTimeZone.UTC,instantMillis));
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=chronology.withUTC();
iChrono=chrono;
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chrono==getChronology()){
return this;
}else {
YearMonthDay new YearMonthDay(this,chrono)=new YearMonthDay(this,newChronology);
newChronology.validate(newYearMonthDay,getValues());
return newYearMonthDay;
}
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chrono==getChronology()){
return this;
}else {
YearMonth new YearMonth(this,chrono)=new YearMonth(this,newChronology);
newChronology.validate(newYearMonth,getValues());
return newYearMonth;
}
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chrono==getChronology()){
return this;
}else {
MonthDay new MonthDay(this,chrono)=new MonthDay(this,newChronology);
newChronology.validate(newMonthDay,getValues());
return newMonthDay;
}
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chrono==getChronology()){
return this;
}else {
TimeOfDay new TimeOfDay(this,chrono)=new TimeOfDay(this,newChronology);
newChronology.validate(newTimeOfDay,getValues());
return newTimeOfDay;
}
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=iChrono.getDateTimeMillis(ConverterManager.getInstance().getPartialConverter(instant).getPartialValues(this,instant,chrono,ISODateTimeFormat.localDateParser())[0],values[1],values[2],0);
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
iChrono=ConverterManager.getInstance().getPartialConverter(instant).getChronology(instant,chronology);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
iChrono=DateTimeUtils.getChronology(chronology);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=chrono.getDateTimeMillis(ConverterManager.getInstance().getPartialConverter(instant).getPartialValues(this,instant,iChrono,ISODateTimeFormat.localDateParser())[0],values[1],values[2],0);
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=iChrono.getDateTimeMillis(ConverterManager.getInstance().getPartialConverter(instant).getPartialValues(this,instant,chrono,ISODateTimeFormat.localDateOptionalTimeParser())[0],values[1],values[2],values[3]);
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=chrono.getDateTimeMillis(ConverterManager.getInstance().getPartialConverter(instant).getPartialValues(this,instant,iChrono,ISODateTimeFormat.localDateOptionalTimeParser())[0],values[1],values[2],values[3]);
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
iChrono=ConverterManager.getInstance().getPartialConverter(instant).getChronology(instant,chronology);
iChrono=DateTimeUtils.getChronology(chronology);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=iChrono.getDateTimeMillis(0L,ConverterManager.getInstance().getPartialConverter(instant).getPartialValues(this,instant,chrono,ISODateTimeFormat.localTimeParser())[0],values[1],values[2],values[3]);
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=chrono.getDateTimeMillis(0L,ConverterManager.getInstance().getPartialConverter(instant).getPartialValues(this,instant,iChrono,ISODateTimeFormat.localTimeParser())[0],values[1],values[2],values[3]);
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=chrono.millisOfDay().set(next,0);
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=chrono.millisOfDay().add(next,iDefaultYear);
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=setDayOfMonthNext(chrono,next);
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=chrono.millisOfDay().set(prev,0);
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=chrono.millisOfDay().add(prev,iDefaultYear);
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=setDayOfMonthPrevious(chrono,prev);
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology chrono=instant.getChronology();
long instantLocal=instantUTC+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantMillis^instantLocal)<0&&(instantUTC^getOffset(instantMillis))>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=checkChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=checkInstant(ConverterManager.getInstance().getInstantConverter(instant).getInstantMillis(instant,iChrono),chrono);
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setDate(instantLocal);
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iChrono=chrono.withUTC();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
super();
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(text!=null){
return name;
}
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=instant;
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iChrono=chrono;
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
super();
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=instant;
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
super();
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iChrono=chrono;
instantLocal=instant;
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iChrono=chrono;
instantLocal=instant;
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
super();
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Chronology chrono=instant.getChronology();
long instantLocal=instant+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantMillis^instantLocal)<0&&(instant^this.iZone.getOffset(instantMillis))>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super.setInterval(instantLocal,getEndMillis(),getChronology());
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super.setInterval(getStartMillis(),instantLocal,getChronology());
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iLocale==null){
locale=Locale.getDefault();
}
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Calendar.getInstance(getZone().toTimeZone(),iLocale).setTime(toDate());
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(position==iZone.getOffset(instantMillis)&&text.equals(iZone.getNameKey(instantMillis))){
System.out.println("*d* Error in "+iZone.getID());
return false;
}
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(text.equals("UTC")){
return DateTimeZone.UTC;
}
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone!=null){
return zone;
}
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=ConverterManager.getInstance().getInstantConverter(instant).getInstantMillis(instant,ISOChronology.getInstanceUTC());
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
position=31*result+((int)(instantLocal^(start>>>32)));
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
position=31*result+((int)(getEndMillis()^(end>>>32)));
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
position=31*result+getChronology().hashCode();
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(position==0){
return this;
}
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ISODateTimeFormat.dateTime().printTo(new StringBuffer(48),getStartMillis());
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new StringBuffer(48).append('/');
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ISODateTimeFormat.dateTime().printTo(new StringBuffer(48),getEndMillis());
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nextTransition(instantLocal-position)==(instantLocal-position)){
nextLocal=Long.MAX_VALUE;
}
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setMillis(getChronology().millisOfDay().set(getMillis(),ISOChronology.getInstanceUTC().millisOfDay().get(instantMillis)));
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantLocal)<0&&(instantLocal^position)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
Chronology chrono=instant.getChronology();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantMillis^instantLocal)<0&&(instant^this.iZone.getOffset(instantMillis))>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
Chronology chrono=instant.getChronology();
long instantLocal=instant+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.format.DateTimeFormatter,709
========
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
long defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
super();
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=instantLocal;
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
defaultYear=chrono.getZone();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setValues(chrono.get(this,instantLocal));
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setValues(chrono.get(this,instantLocal,instantMillis));
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
iZone=DateTimeUtils.getZone(zone);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chrono==null){
return ISOChronology.getInstance(iZone);
}
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantLocal=instantLocal+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(defaultYear==position){
return instantLocal;
}
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
defaultYear=chrono.get(this,instantLocal);
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant.setChronology(chrono);
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
defaultYear=chrono.get(this,instantLocal,instantMillis);
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setPeriod(instantLocal,chrono);
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
defaultYear=chrono.get(this,instantLocal,instantMillis);
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
long defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().getChronology(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(iDefaultYear);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
setDate(instantLocal);
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
iZone=DateTimeUtils.getZone(newZone);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone==DateTimeUtils.getZone(getZone())){
return this;
}
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone==DateTimeUtils.getZone(getZone())){
return this;
}
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
iZone=DateTimeUtils.getZone(newZone);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
super();
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iChrono=chrono;
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iChrono=chrono;
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
super();
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=chrono.withUTC();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
instant=chrono.dayOfMonth().roundFloor(instant);
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(text);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(iLocale);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super.setInterval(instantMillis,instantLocal,chrono);
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
if(instant==null){
return ISOChronology.getInstance();
}
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chrono==null){
return ISOChronology.getInstance();
}
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone==DateTimeUtils.getZone(getZone())){
return ;
}
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setChronology(getChronology().withZone(iZone));
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setMillis(instantLocal);
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=chrono.set(this,instant);
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=iBase.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().convertUTCToLocal(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super.setInterval(instantMillis,instantLocal,chrono);
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
long defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
if(text.length()<=0){
throw new IllegalArgumentException("Format invalid: "+text);
}
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(chrono.getZone()!=null){
instantLocal=zone.getMillisKeepLocal(DateTimeZone.UTC,instantMillis);
}
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setTime(instantLocal);
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
defaultYear=chrono;
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=checkInstant(ConverterManager.getInstance().getInstantConverter(instant).getInstantMillis(instant,chrono),chrono);
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantMillis==toDurationMillis()){
return this;
}
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantLocal=instantUTC+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantMillis^instantLocal)<0&&(instantUTC^defaultYear)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantMillis==toDurationMillis()){
return this;
}
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
long defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chronology.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=chronology.withUTC();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
defaultYear=chrono;
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
long defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setMillis(instantLocal);
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
long defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iChrono!=null){
chrono=iChrono;
}
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iZone!=null){
chrono=chrono.withZone(iZone);
}
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iChrono!=null){
chrono=iChrono;
}
if(iZone!=null){
chrono=chrono.withZone(iZone);
}
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
if(instant==null){
throw new IllegalArgumentException("The instant must not be null");
}
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
  - org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().getFieldType(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(iZone);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(Calendar.ERA);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getWrappedField().get(instantLocal)<=0){
year=1-year;
}
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(zone.iRules);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iPivotYear!=null){
return era.intValue();
}
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iPivotYear!=null){
return month.intValue();
}
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iPivotYear!=null){
return day.intValue();
}
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iChrono=chrono.withUTC();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
defaultYear=chrono.get(this,instantLocal);
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
super();
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantLocal=chrono.getZone().getMillisKeepLocal(DateTimeZone.UTC,instantMillis);
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
defaultYear=chrono.withUTC();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
long defaultYear=chronology.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getWrappedField().get(instantLocal)==0){
value=getMaximumValue();
}
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
if(position==0){
return instant;
}
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(text!=null){
return name;
}
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instant);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(r.iName);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(new PeriodType(null,type.iTypes,null));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
if(iLocale==null){
locale=Locale.getDefault();
}
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Calendar.getInstance(getZone().toTimeZone(),iLocale).setTime(toDate());
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=chronology.withUTC();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chronology.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
defaultYear=chrono;
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chronology.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=chronology.withUTC();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
long defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=chronology.withUTC();
defaultYear=chrono;
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=chronology.withUTC();
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
long defaultYear=chronology.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
defaultYear=chrono;
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
long defaultYear=chronology.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=chronology.withUTC();
defaultYear=chrono;
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chronology.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=chronology.withUTC();
defaultYear=chrono;
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
long defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chrono=chronology.withUTC();
defaultYear=chrono;
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
long defaultYear=chronology.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().roundCeiling(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
defaultYear=PeriodType.standard();
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().getNameKey(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(position==defaultYear&&text.equals(iZone.getNameKey(instantMillis))){
System.out.println("*d* Error in "+iZone.getID());
return false;
}
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().nextTransition(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantLocal==(instantLocal-position)){
nextLocal=Long.MAX_VALUE;
}
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=monthOfYear().set(instant,iDefaultYear);
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=dayOfMonth().set(instant,position);
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
long defaultYear=chrono.year().nextTransition(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
if(text.equals("UTC")){
return DateTimeZone.UTC;
}
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone!=null){
return zone;
}
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getWrappedField().get(instantLocal)>=0){
return value/iDefaultYear;
}else {
return ((value+1)/iDivisor)-1;
}
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getWrappedField().get(instantLocal)>=0){
return value%iDefaultYear;
}else {
return (iDivisor-1)+((value+1)%iDivisor);
}
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=hourOfDay().set(instant,position);
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=minuteOfHour().set(instant,position);
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=secondOfMinute().set(instant,position);
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=monthOfYear().set(instant,iDefaultYear);
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
long defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=dayOfMonth().set(instant,position);
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
long defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=monthOfYear().set(instant,iDefaultYear);
instant=dayOfMonth().set(instant,position);
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instant=monthOfYear().set(instant,iDefaultYear);
instant=dayOfMonth().set(instant,position);
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
long defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantLocal)<0&&(instantLocal^position)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().previousTransition(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
if(text==null){
return null;
}
int defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setDate(instantLocal);
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
long defaultYear=chrono.year().get(instantLocal);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long instantLocal=instantMillis+chrono.getZone().getOffset(instantMillis);
chrono=selectChronology(chrono);
int defaultYear=chrono.year().get(instantMillis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_newYork_startOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_newYork_startOfYear
Failing tests: 0
FAILED TEST:org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_tokyo_endOfYear
COUNT THESE===> Subject [_name=time, _id=7, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.joda.time.format.TestDateTimeFormatter testParseInto_monthDay_feb29_tokyo_endOfYear
TESTING : org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_tokyo_endOfYear
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.format.TestDateTimeFormatter::testParseInto_monthDay_feb29_tokyo_endOfYear
Failing tests: 0
TESTING : time_7
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_5/time/time_7_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
Failing tests: 0
Successfully repair!
