java version "1.7.0_231"
OpenJDK Runtime Environment (rhel-2.6.19.1.el7_6-x86_64 u231-b01)
OpenJDK 64-Bit Server VM (build 24.231-b01, mixed mode)
Check out 523df0c1 to /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/ OK
Init local repository...................................................... OK
Tag post-fix revision...................................................... OK
Initialize fixed program version........................................... OK
Apply patch................................................................ OK
Initialize buggy program version........................................... OK
Diff 523df0c1:39e2ad8a..................................................... OK
Apply patch................................................................ OK
Tag pre-fix revision....................................................... OK
Check out program version: Math-75b........................................ OK
Running ant (compile)...................................................... OK
Running ant (compile.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Running ant (run.dev.tests)................................................ OK
Failing tests: 1
  - org.apache.commons.math.stat.FrequencyTest::testPcts
/home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3
PURIFY IS FALSE
=================================================
Project : math_75	start : 19/10/16 10:32

readFailedTest: path is /mnt/nfs/work1/brun/mmotwani/SimFix/d4j-info/failed_tests/math/75.txt#ATTEMPTS: 1

# FAILING TESTS: 1
TIMEOUT : 18000000
===========
locations= [<org.apache.commons.math.stat.Frequency,215>, <org.apache.commons.math.stat.Frequency,216>, <org.apache.commons.math.stat.Frequency,217>, <org.apache.commons.math.stat.Frequency,218>, <org.apache.commons.math.stat.Frequency,220>, <org.apache.commons.math.stat.Frequency,244>, <org.apache.commons.math.stat.Frequency,247>, <org.apache.commons.math.stat.Frequency,249>, <org.apache.commons.math.stat.Frequency,250>, <org.apache.commons.math.stat.Frequency,251>, <org.apache.commons.math.stat.Frequency,255>, <org.apache.commons.math.stat.Frequency,256>, <org.apache.commons.math.stat.Frequency,303>, <org.apache.commons.math.stat.Frequency,316>, <org.apache.commons.math.stat.Frequency,317>, <org.apache.commons.math.stat.Frequency,320>, <org.apache.commons.math.stat.Frequency,331>, <org.apache.commons.math.stat.Frequency,342>, <org.apache.commons.math.stat.Frequency,382>, <org.apache.commons.math.stat.Frequency,385>, <org.apache.commons.math.stat.Frequency,386>, <org.apache.commons.math.stat.Frequency,388>, <org.apache.commons.math.stat.Frequency,389>, <org.apache.commons.math.stat.Frequency,390>, <org.apache.commons.math.stat.Frequency,392>, <org.apache.commons.math.stat.Frequency,395>, <org.apache.commons.math.stat.Frequency,396>, <org.apache.commons.math.stat.Frequency,397>, <org.apache.commons.math.stat.Frequency,401>, <org.apache.commons.math.stat.Frequency,403>, <org.apache.commons.math.stat.Frequency,407>, <org.apache.commons.math.stat.Frequency,408>, <org.apache.commons.math.stat.Frequency,444>, <org.apache.commons.math.stat.Frequency,491>, <org.apache.commons.math.stat.Frequency,492>, <org.apache.commons.math.stat.Frequency,495>, <org.apache.commons.math.stat.Frequency,541>, <org.apache.commons.math.stat.Frequency,561>, <org.apache.commons.math.stat.Frequency,59>, <org.apache.commons.math.stat.Frequency,60>, <org.apache.commons.math.stat.Frequency,61>, <org.apache.commons.math.stat.Frequency,133>, <org.apache.commons.math.stat.Frequency,134>, <org.apache.commons.math.stat.Frequency,138>, <org.apache.commons.math.stat.Frequency,139>, <org.apache.commons.math.stat.Frequency,140>, <org.apache.commons.math.stat.Frequency,142>, <org.apache.commons.math.stat.Frequency,149>, <org.apache.commons.math.stat.Frequency,150>, <org.apache.commons.math.stat.Frequency,158>, <org.apache.commons.math.stat.Frequency,159>, <org.apache.commons.math.stat.Frequency,177>, <org.apache.commons.math.stat.Frequency,178>, <org.apache.commons.math.stat.Frequency,69>, <org.apache.commons.math.stat.Frequency,70>, <org.apache.commons.math.stat.Frequency,71>, <org.apache.commons.math.stat.Frequency,81>, <org.apache.commons.math.stat.Frequency,82>, <org.apache.commons.math.stat.Frequency,83>, <org.apache.commons.math.stat.Frequency,84>, <org.apache.commons.math.stat.Frequency,85>, <org.apache.commons.math.stat.Frequency,86>, <org.apache.commons.math.stat.Frequency,87>, <org.apache.commons.math.stat.Frequency,88>, <org.apache.commons.math.stat.Frequency,89>, <org.apache.commons.math.stat.Frequency,90>, <org.apache.commons.math.stat.Frequency,91>, <org.apache.commons.math.stat.Frequency,92>, <org.apache.commons.math.stat.Frequency,93>, <org.apache.commons.math.stat.Frequency,94>, <org.apache.commons.math.stat.Frequency,95>, <org.apache.commons.math.stat.Frequency,96>, <org.apache.commons.math.stat.Frequency,113>, <org.apache.commons.math.stat.Frequency,114>, <org.apache.commons.math.stat.Frequency,116>, <org.apache.commons.math.stat.Frequency,120>, <org.apache.commons.math.stat.Frequency,135>, <org.apache.commons.math.stat.Frequency,144>, <org.apache.commons.math.stat.Frequency,146>, <org.apache.commons.math.stat.Frequency,168>, <org.apache.commons.math.stat.Frequency,169>, <org.apache.commons.math.stat.Frequency,186>, <org.apache.commons.math.stat.Frequency,187>, <org.apache.commons.math.stat.Frequency,191>, <org.apache.commons.math.stat.Frequency,192>, <org.apache.commons.math.stat.Frequency,204>, <org.apache.commons.math.stat.Frequency,233>, <org.apache.commons.math.stat.Frequency,245>, <org.apache.commons.math.stat.Frequency,253>, <org.apache.commons.math.stat.Frequency,266>, <org.apache.commons.math.stat.Frequency,276>, <org.apache.commons.math.stat.Frequency,286>, <org.apache.commons.math.stat.Frequency,318>, <org.apache.commons.math.stat.Frequency,353>, <org.apache.commons.math.stat.Frequency,369>, <org.apache.commons.math.stat.Frequency,383>, <org.apache.commons.math.stat.Frequency,399>, <org.apache.commons.math.stat.Frequency,400>, <org.apache.commons.math.stat.Frequency,404>, <org.apache.commons.math.stat.Frequency,411>, <org.apache.commons.math.stat.Frequency,412>, <org.apache.commons.math.stat.Frequency,413>, <org.apache.commons.math.stat.Frequency,414>, <org.apache.commons.math.stat.Frequency,415>, <org.apache.commons.math.stat.Frequency,417>, <org.apache.commons.math.stat.Frequency,419>, <org.apache.commons.math.stat.Frequency,420>, <org.apache.commons.math.stat.Frequency,432>, <org.apache.commons.math.stat.Frequency,456>, <org.apache.commons.math.stat.Frequency,475>, <org.apache.commons.math.stat.Frequency,493>, <org.apache.commons.math.stat.Frequency,508>, <org.apache.commons.math.stat.Frequency,521>, <org.apache.commons.math.stat.Frequency,534>, <org.apache.commons.math.stat.Frequency,568>, <org.apache.commons.math.stat.Frequency,569>, <org.apache.commons.math.stat.Frequency,570>, <org.apache.commons.math.stat.Frequency,572>, <org.apache.commons.math.stat.Frequency,578>, <org.apache.commons.math.stat.Frequency,579>, <org.apache.commons.math.stat.Frequency,580>, <org.apache.commons.math.stat.Frequency,581>, <org.apache.commons.math.stat.Frequency,582>, <org.apache.commons.math.stat.Frequency,583>, <org.apache.commons.math.stat.Frequency,584>, <org.apache.commons.math.stat.Frequency,585>, <org.apache.commons.math.stat.Frequency,586>, <org.apache.commons.math.stat.Frequency,587>, <org.apache.commons.math.stat.Frequency,588>, <org.apache.commons.math.stat.Frequency,589>, <org.apache.commons.math.stat.Frequency,590>]
======================org.apache.commons.math.stat.Frequency,215
UNKNOWN ASTNode type : catch (ClassCastException ex) {
  return result;
}

========
while(iterator.hasNext()){
iterator.advance();
result+=iterator.next().longValue();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iterator.hasNext()){
temp=Double.doubleToLongBits(iterator.value());
result+=iterator.next().longValue();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iterator.hasNext()){
iterator.advance();
temp=Double.doubleToLongBits(iterator.value());

result+=iterator.next().longValue();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iterator.hasNext()){
if(Double.isNaN(iterator.value())){
return false;
}
result+=iterator.next().longValue();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
while(iterator.hasNext()){
iterator.advance();
if(Double.isNaN(iterator.value())){
return false;
}

result+=iterator.next().longValue();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double result=0;
Iterator<Long> iterator=freqTable.values().iterator();
while(iterator.hasNext()){
result+=iterator.next().longValue();
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.length);
long result=0;
Iterator<Long> iterator=freqTable.values().iterator();
while(iterator.hasNext()){
result+=iterator.next().longValue();
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.length);
double result=0;
Iterator<Long> iterator=freqTable.values().iterator();
while(iterator.hasNext()){
result+=iterator.next().longValue();
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long result=0;
Iterator<Long> iterator=freqTable.values().iterator();
while(iterator.hasNext()){
result+=iterator.next().longValue();
}
return high;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long result=0;
Iterator<Long> iterator=freqTable.values().iterator();
while(iterator.hasNext()){
result+=iterator.next().longValue();
}
return low;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long result=0;
Iterator<Long> iterator=freqTable.values().iterator();
checkVectorDimensions(v.length);
while(iterator.hasNext()){
result+=iterator.next().longValue();
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long result=0;
checkVectorDimensions(v.length);
Iterator<Long> iterator=freqTable.values().iterator();
while(iterator.hasNext()){
result+=iterator.next().longValue();
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long result=0;
checkVectorDimensions(iterator.getDimension());
Iterator<Long> iterator=freqTable.values().iterator();
while(iterator.hasNext()){
result+=iterator.next().longValue();
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long result=0;
Iterator<Long> iterator=freqTable.values().iterator();
checkVectorDimensions(iterator.getDimension());
while(iterator.hasNext()){
result+=iterator.next().longValue();
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int result=0;
Iterator<Long> iterator=freqTable.values().iterator();
while(iterator.hasNext()){
result+=iterator.next().longValue();
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.stat.FrequencyTest::testPcts
COUNT THESE===> Subject [_name=math, _id=75, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.stat.FrequencyTest testPcts
TESTING : org.apache.commons.math.stat.FrequencyTest::testPcts
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.stat.FrequencyTest::testPcts
  - org.apache.commons.math.stat.FrequencyTest::testPcts
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
long result=iterator.key();
Iterator<Long> iterator=freqTable.values().iterator();
while(iterator.hasNext()){
result+=iterator.next().longValue();
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long result=0;
iterator=new OpenIntToDoubleHashMap(0.0);
Iterator<Long> iterator=freqTable.values().iterator();
while(iterator.hasNext()){
result+=iterator.next().longValue();
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long result=0;
Iterator<Long> iterator=freqTable.values().iterator();
iterator=new OpenIntToDoubleHashMap(0.0);
while(iterator.hasNext()){
result+=iterator.next().longValue();
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long result=0;
Iterator<Long> iterator=freqTable.values().iterator();
while(iterator.hasNext()){
previous=values[index];
result+=iterator.next().longValue();
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
long result=0;
Iterator<Long> iterator=freqTable.values().iterator();
while(iterator.hasNext()){
result+=iterator.next().longValue();
}
return previous;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.stat.Frequency,216
org.apache.commons.math.stat.Frequency,217
org.apache.commons.math.stat.Frequency,218
org.apache.commons.math.stat.Frequency,220
org.apache.commons.math.stat.Frequency,244
UNKNOWN ASTNode type : catch (ClassCastException ex) {
  throw MathRuntimeException.createIllegalArgumentException("instance of class {0} not comparable to existing values",v.getClass().getName());
}

========
if(v instanceof Integer){
return getCumFreq(((Integer)v).longValue());
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.stat.FrequencyTest::testPcts
COUNT THESE===> Subject [_name=math, _id=75, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.stat.FrequencyTest testPcts
TESTING : org.apache.commons.math.stat.FrequencyTest::testPcts
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.stat.FrequencyTest::testPcts
  - org.apache.commons.math.stat.FrequencyTest::testPcts
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.apache.commons.math.stat.Frequency,247
UNKNOWN ASTNode type : catch (ClassCastException ex) {
  return result;
}

========
if(count==null){
result=count.longValue();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.stat.FrequencyTest::testPcts
COUNT THESE===> Subject [_name=math, _id=75, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.stat.FrequencyTest testPcts
TESTING : org.apache.commons.math.stat.FrequencyTest::testPcts
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.stat.FrequencyTest::testPcts
  - org.apache.commons.math.stat.FrequencyTest::testPcts
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(v instanceof Integer){
return getCount(((Integer)v).longValue());
}
if((Comparator<Comparable<?>>)freqTable.comparator()==null){
c=new NaturalComparator();
}
long result=0;
try{
Long count=freqTable.get(v);
if(count!=null){
result=count.longValue();
}
}catch (ClassCastException ex) {
}

return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((Comparator<Comparable<?>>)freqTable.comparator().compare(v,freqTable.firstKey())<0){
return 0;
}
if(v instanceof Integer){
return getCount(((Integer)v).longValue());
}
long result=0;
try{
Long count=freqTable.get(v);
if(count!=null){
result=count.longValue();
}
}catch (ClassCastException ex) {
}

return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((Comparator<Comparable<?>>)freqTable.comparator().compare(v,freqTable.lastKey())>=0){
return getSumFreq();
}
if(v instanceof Integer){
return getCount(((Integer)v).longValue());
}
long result=0;
try{
Long count=freqTable.get(v);
if(count!=null){
result=count.longValue();
}
}catch (ClassCastException ex) {
}

return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(v instanceof Integer){
return getCount(((Integer)v).longValue());
}
int result=0;
try{
Long count=freqTable.get(v);
if(count!=null){
result=count.longValue();
}
}catch (ClassCastException ex) {
}

return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(v instanceof Integer){
return getCount(((Integer)v).longValue());
}
long result=0;
try{
Long count=freqTable.get(v);
if(count!=null){
result=count.longValue();
}
}catch (ClassCastException ex) {
}

result=count*result+((freqTable==null)?0:freqTable.hashCode());
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(v instanceof Integer){
return getCount(((Integer)v).longValue());
}
if(serialVersionUID<0){
throw MathRuntimeException.createIllegalArgumentException("cannot raise an integral value to a negative power ({0}^{1})",serialVersionUID,e);
}
long result=0;
try{
Long count=freqTable.get(v);
if(count!=null){
result=count.longValue();
}
}catch (ClassCastException ex) {
}

return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.stat.Frequency,249
org.apache.commons.math.stat.Frequency,250
org.apache.commons.math.stat.Frequency,251
org.apache.commons.math.stat.Frequency,255
Find no block!
org.apache.commons.math.stat.Frequency,256
org.apache.commons.math.stat.Frequency,303
========
return getCumPct(Long.valueOf(v));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getCumPct(Character.valueOf(v));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return dotProduct((ArrayRealVector)v);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getDistance((ArrayRealVector)v);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getL1Distance((ArrayRealVector)v);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getLInfDistance((ArrayRealVector)v);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getPct(Long.valueOf(v));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getPct((Comparable<?>)v);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.apache.commons.math.stat.FrequencyTest::testPcts
COUNT THESE===> Subject [_name=math, _id=75, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/target/classes, _tbin=/target/test-classes, _dependency=null] org.apache.commons.math.stat.FrequencyTest testPcts
TESTING : org.apache.commons.math.stat.FrequencyTest::testPcts
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.stat.FrequencyTest::testPcts
Failing tests: 0
TESTING : math_75
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_75_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
Failing tests: 0
Successfully repair!
