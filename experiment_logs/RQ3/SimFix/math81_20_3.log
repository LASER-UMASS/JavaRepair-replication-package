java version "1.7.0_231"
OpenJDK Runtime Environment (rhel-2.6.19.1.el7_6-x86_64 u231-b01)
OpenJDK 64-Bit Server VM (build 24.231-b01, mixed mode)
Check out program version: Math-81b........................................ OK
Running ant (compile)...................................................... FAIL
Buildfile: /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/framework/projects/defects4j.build.xml

init:
     [echo] -------- Commons MATH 2.1-SNAPSHOT --------
    [mkdir] Created dir: /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/target
    [mkdir] Created dir: /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/target/classes
    [mkdir] Created dir: /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/target/test-classes

compile:
    [javac] /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/build.xml:154: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 393 source files to /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/target/classes
    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.5
    [javac] /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:827: error: cannot find symbol
    [javac] if(fourI==1){
    [javac]    ^
    [javac]   symbol:   variable fourI
    [javac]   location: class EigenDecompositionImpl
    [javac] /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:828: error: cannot find symbol
    [javac] new double[f.length][0]=0.5*(work[0]+f[1]);
    [javac]            ^
    [javac]   symbol:   variable f
    [javac]   location: class EigenDecompositionImpl
    [javac] /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:828: error: unexpected type
    [javac] new double[f.length][0]=0.5*(work[0]+f[1]);
    [javac] ^
    [javac]   required: variable
    [javac]   found:    value
    [javac] /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:828: error: cannot find symbol
    [javac] new double[f.length][0]=0.5*(work[0]+f[1]);
    [javac]                                      ^
    [javac]   symbol:   variable f
    [javac]   location: class EigenDecompositionImpl
    [javac] /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:829: error: cannot find symbol
    [javac] transformed[1]=0.5*(f[0]-f[1]);
    [javac] ^
    [javac]   symbol:   variable transformed
    [javac]   location: class EigenDecompositionImpl
    [javac] /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:829: error: cannot find symbol
    [javac] transformed[1]=0.5*(f[0]-f[1]);
    [javac]                     ^
    [javac]   symbol:   variable f
    [javac]   location: class EigenDecompositionImpl
    [javac] /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:829: error: cannot find symbol
    [javac] transformed[1]=0.5*(f[0]-f[1]);
    [javac]                          ^
    [javac]   symbol:   variable f
    [javac]   location: class EigenDecompositionImpl
    [javac] /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:830: error: cannot return a value from method whose result type is void
    [javac] return transformed;
    [javac]        ^
    [javac] 8 errors
    [javac] 1 warning

BUILD FAILED
/mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/build.xml:154: Compile failed; see the compiler error output for details.

Total time: 13 seconds
Executed command:  cd /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && ant -f /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/framework/projects/defects4j.build.xml -Dd4j.home=/mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j -Dbasedir=/mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy  compile 2>&1
Cannot compile sources! at /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/framework/bin/d4j/d4j-compile line 82.
Compilation failed in require at /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/framework/bin/defects4j line 155.
Running ant (compile.tests)................................................ FAIL
Buildfile: /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/framework/projects/defects4j.build.xml

init:
     [echo] -------- Commons MATH 2.1-SNAPSHOT --------

compile:
    [javac] /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/build.xml:154: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
    [javac] Compiling 210 source files to /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/target/classes
    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.5
    [javac] /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:827: error: cannot find symbol
    [javac] if(fourI==1){
    [javac]    ^
    [javac]   symbol:   variable fourI
    [javac]   location: class EigenDecompositionImpl
    [javac] /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:828: error: cannot find symbol
    [javac] new double[f.length][0]=0.5*(work[0]+f[1]);
    [javac]            ^
    [javac]   symbol:   variable f
    [javac]   location: class EigenDecompositionImpl
    [javac] /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:828: error: unexpected type
    [javac] new double[f.length][0]=0.5*(work[0]+f[1]);
    [javac] ^
    [javac]   required: variable
    [javac]   found:    value
    [javac] /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:828: error: cannot find symbol
    [javac] new double[f.length][0]=0.5*(work[0]+f[1]);
    [javac]                                      ^
    [javac]   symbol:   variable f
    [javac]   location: class EigenDecompositionImpl
    [javac] /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:829: error: cannot find symbol
    [javac] transformed[1]=0.5*(f[0]-f[1]);
    [javac] ^
    [javac]   symbol:   variable transformed
    [javac]   location: class EigenDecompositionImpl
    [javac] /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:829: error: cannot find symbol
    [javac] transformed[1]=0.5*(f[0]-f[1]);
    [javac]                     ^
    [javac]   symbol:   variable f
    [javac]   location: class EigenDecompositionImpl
    [javac] /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:829: error: cannot find symbol
    [javac] transformed[1]=0.5*(f[0]-f[1]);
    [javac]                          ^
    [javac]   symbol:   variable f
    [javac]   location: class EigenDecompositionImpl
    [javac] /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:830: error: cannot return a value from method whose result type is void
    [javac] return transformed;
    [javac]        ^
    [javac] 8 errors
    [javac] 1 warning

BUILD FAILED
/mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/build.xml:154: Compile failed; see the compiler error output for details.

Total time: 6 seconds
Executed command:  cd /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && ant -f /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/framework/projects/defects4j.build.xml -Dd4j.home=/mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j -Dbasedir=/mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy  compile.tests 2>&1
Cannot compile test suite! at /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/framework/bin/d4j/d4j-test line 134.
Compilation failed in require at /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/framework/bin/defects4j line 155.
/home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3
PURIFY IS TRUE
=================================================
Project : math_81	start : 19/10/16 11:46

readFailedTest: path is /mnt/nfs/work1/brun/mmotwani/SimFix/d4j-info/failed_tests/math/81.txtTESTING : org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308
Compilation failed in require at /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j line 155.
Cannot compile test suite! at /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/framework/bin/d4j/d4j-test line 134.
Executed command:  cd /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && ant -f /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/framework/projects/defects4j.build.xml -Dd4j.home=/mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j -Dbasedir=/mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy  compile.tests 2>&1
Total time: 13 seconds

/mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/build.xml:154: Compile failed; see the compiler error output for details.
BUILD FAILED

    [javac] 1 warning
    [javac] 8 errors
    [javac]        ^
    [javac] return transformed;
    [javac] /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:830: error: cannot return a value from method whose result type is void
    [javac]   location: class EigenDecompositionImpl
    [javac]   symbol:   variable f
    [javac]                          ^
    [javac] transformed[1]=0.5*(f[0]-f[1]);
    [javac] /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:829: error: cannot find symbol
    [javac]   location: class EigenDecompositionImpl
    [javac]   symbol:   variable f
    [javac]                     ^
    [javac] transformed[1]=0.5*(f[0]-f[1]);
    [javac] /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:829: error: cannot find symbol
    [javac]   location: class EigenDecompositionImpl
    [javac]   symbol:   variable transformed
    [javac] ^
    [javac] transformed[1]=0.5*(f[0]-f[1]);
    [javac] /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:829: error: cannot find symbol
    [javac]   location: class EigenDecompositionImpl
    [javac]   symbol:   variable f
    [javac]                                      ^
    [javac] new double[f.length][0]=0.5*(work[0]+f[1]);
    [javac] /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:828: error: cannot find symbol
    [javac]   found:    value
    [javac]   required: variable
    [javac] ^
    [javac] new double[f.length][0]=0.5*(work[0]+f[1]);
    [javac] /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:828: error: unexpected type
    [javac]   location: class EigenDecompositionImpl
    [javac]   symbol:   variable f
    [javac]            ^
    [javac] new double[f.length][0]=0.5*(work[0]+f[1]);
    [javac] /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:828: error: cannot find symbol
    [javac]   location: class EigenDecompositionImpl
    [javac]   symbol:   variable fourI
    [javac]    ^
    [javac] if(fourI==1){
    [javac] /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java:827: error: cannot find symbol
    [javac] warning: [options] bootstrap class path not set in conjunction with -source 1.5
    [javac] Compiling 393 source files to /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/target/classes
    [javac] /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/build.xml:154: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds
compile:

    [mkdir] Created dir: /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/target/test-classes
    [mkdir] Created dir: /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy/target/classes
     [echo] -------- Commons MATH 2.1-SNAPSHOT --------
init:

Buildfile: /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/framework/projects/defects4j.build.xml
Running ant (compile.tests)................................................ FAIL
IN COMMENT TEST CASE: org.apache.commons.math.linear.EigenDecompositionImplTest::testMath308

# FAILING TESTS: 1
TIMEOUT : 18000000
===========
locations= [<org.apache.commons.math.linear.EigenDecompositionImpl,643>, <org.apache.commons.math.linear.EigenDecompositionImpl,644>, <org.apache.commons.math.linear.EigenDecompositionImpl,645>, <org.apache.commons.math.linear.EigenDecompositionImpl,646>, <org.apache.commons.math.linear.EigenDecompositionImpl,647>, <org.apache.commons.math.linear.EigenDecompositionImpl,648>, <org.apache.commons.math.linear.EigenDecompositionImpl,649>, <org.apache.commons.math.linear.EigenDecompositionImpl,651>, <org.apache.commons.math.linear.EigenDecompositionImpl,654>, <org.apache.commons.math.linear.EigenDecompositionImpl,657>, <org.apache.commons.math.linear.EigenDecompositionImpl,826>, <org.apache.commons.math.linear.EigenDecompositionImpl,827>, <org.apache.commons.math.linear.EigenDecompositionImpl,828>, <org.apache.commons.math.linear.EigenDecompositionImpl,829>, <org.apache.commons.math.linear.EigenDecompositionImpl,830>, <org.apache.commons.math.linear.EigenDecompositionImpl,833>, <org.apache.commons.math.linear.EigenDecompositionImpl,839>, <org.apache.commons.math.linear.EigenDecompositionImpl,842>, <org.apache.commons.math.linear.EigenDecompositionImpl,845>, <org.apache.commons.math.linear.EigenDecompositionImpl,846>, <org.apache.commons.math.linear.EigenDecompositionImpl,847>, <org.apache.commons.math.linear.EigenDecompositionImpl,848>, <org.apache.commons.math.linear.EigenDecompositionImpl,849>, <org.apache.commons.math.linear.EigenDecompositionImpl,850>, <org.apache.commons.math.linear.EigenDecompositionImpl,851>, <org.apache.commons.math.linear.EigenDecompositionImpl,854>, <org.apache.commons.math.linear.EigenDecompositionImpl,855>, <org.apache.commons.math.linear.EigenDecompositionImpl,856>, <org.apache.commons.math.linear.EigenDecompositionImpl,859>, <org.apache.commons.math.linear.EigenDecompositionImpl,860>, <org.apache.commons.math.linear.EigenDecompositionImpl,863>, <org.apache.commons.math.linear.EigenDecompositionImpl,864>, <org.apache.commons.math.linear.EigenDecompositionImpl,865>, <org.apache.commons.math.linear.EigenDecompositionImpl,866>, <org.apache.commons.math.linear.EigenDecompositionImpl,867>, <org.apache.commons.math.linear.EigenDecompositionImpl,868>, <org.apache.commons.math.linear.EigenDecompositionImpl,869>, <org.apache.commons.math.linear.EigenDecompositionImpl,873>, <org.apache.commons.math.linear.EigenDecompositionImpl,874>, <org.apache.commons.math.linear.EigenDecompositionImpl,875>, <org.apache.commons.math.linear.EigenDecompositionImpl,877>, <org.apache.commons.math.linear.EigenDecompositionImpl,878>, <org.apache.commons.math.linear.EigenDecompositionImpl,880>, <org.apache.commons.math.linear.EigenDecompositionImpl,883>, <org.apache.commons.math.linear.EigenDecompositionImpl,885>, <org.apache.commons.math.linear.EigenDecompositionImpl,886>, <org.apache.commons.math.linear.EigenDecompositionImpl,887>, <org.apache.commons.math.linear.EigenDecompositionImpl,888>, <org.apache.commons.math.linear.EigenDecompositionImpl,893>, <org.apache.commons.math.linear.EigenDecompositionImpl,894>, <org.apache.commons.math.linear.EigenDecompositionImpl,898>, <org.apache.commons.math.linear.EigenDecompositionImpl,936>, <org.apache.commons.math.linear.EigenDecompositionImpl,937>, <org.apache.commons.math.linear.EigenDecompositionImpl,940>, <org.apache.commons.math.linear.EigenDecompositionImpl,941>, <org.apache.commons.math.linear.EigenDecompositionImpl,942>, <org.apache.commons.math.linear.EigenDecompositionImpl,946>, <org.apache.commons.math.linear.EigenDecompositionImpl,951>, <org.apache.commons.math.linear.EigenDecompositionImpl,952>, <org.apache.commons.math.linear.EigenDecompositionImpl,953>, <org.apache.commons.math.linear.EigenDecompositionImpl,954>, <org.apache.commons.math.linear.EigenDecompositionImpl,955>, <org.apache.commons.math.linear.EigenDecompositionImpl,960>, <org.apache.commons.math.linear.EigenDecompositionImpl,962>, <org.apache.commons.math.linear.EigenDecompositionImpl,963>, <org.apache.commons.math.linear.EigenDecompositionImpl,964>, <org.apache.commons.math.linear.EigenDecompositionImpl,965>, <org.apache.commons.math.linear.EigenDecompositionImpl,970>, <org.apache.commons.math.linear.EigenDecompositionImpl,973>, <org.apache.commons.math.linear.EigenDecompositionImpl,977>, <org.apache.commons.math.linear.EigenDecompositionImpl,992>, <org.apache.commons.math.linear.EigenDecompositionImpl,995>, <org.apache.commons.math.linear.EigenDecompositionImpl,996>, <org.apache.commons.math.linear.EigenDecompositionImpl,998>, <org.apache.commons.math.linear.EigenDecompositionImpl,1003>, <org.apache.commons.math.linear.EigenDecompositionImpl,1005>, <org.apache.commons.math.linear.EigenDecompositionImpl,1011>, <org.apache.commons.math.linear.EigenDecompositionImpl,1012>, <org.apache.commons.math.linear.EigenDecompositionImpl,1014>, <org.apache.commons.math.linear.EigenDecompositionImpl,1043>, <org.apache.commons.math.linear.EigenDecompositionImpl,1047>, <org.apache.commons.math.linear.EigenDecompositionImpl,1049>, <org.apache.commons.math.linear.EigenDecompositionImpl,1052>, <org.apache.commons.math.linear.EigenDecompositionImpl,1053>, <org.apache.commons.math.linear.EigenDecompositionImpl,1066>, <org.apache.commons.math.linear.EigenDecompositionImpl,1071>, <org.apache.commons.math.linear.EigenDecompositionImpl,1074>, <org.apache.commons.math.linear.EigenDecompositionImpl,1077>, <org.apache.commons.math.linear.EigenDecompositionImpl,1080>, <org.apache.commons.math.linear.EigenDecompositionImpl,1082>, <org.apache.commons.math.linear.EigenDecompositionImpl,1083>, <org.apache.commons.math.linear.EigenDecompositionImpl,1084>, <org.apache.commons.math.linear.EigenDecompositionImpl,1093>, <org.apache.commons.math.linear.EigenDecompositionImpl,1095>, <org.apache.commons.math.linear.EigenDecompositionImpl,1098>, <org.apache.commons.math.linear.EigenDecompositionImpl,1100>, <org.apache.commons.math.linear.EigenDecompositionImpl,1101>, <org.apache.commons.math.linear.EigenDecompositionImpl,1118>, <org.apache.commons.math.linear.EigenDecompositionImpl,1120>, <org.apache.commons.math.linear.EigenDecompositionImpl,1132>, <org.apache.commons.math.linear.EigenDecompositionImpl,1145>, <org.apache.commons.math.linear.EigenDecompositionImpl,1157>, <org.apache.commons.math.linear.EigenDecompositionImpl,1158>, <org.apache.commons.math.linear.EigenDecompositionImpl,1159>, <org.apache.commons.math.linear.EigenDecompositionImpl,1160>, <org.apache.commons.math.linear.EigenDecompositionImpl,1161>, <org.apache.commons.math.linear.EigenDecompositionImpl,1162>, <org.apache.commons.math.linear.EigenDecompositionImpl,1163>, <org.apache.commons.math.linear.EigenDecompositionImpl,1167>, <org.apache.commons.math.linear.EigenDecompositionImpl,1168>, <org.apache.commons.math.linear.EigenDecompositionImpl,1169>, <org.apache.commons.math.linear.EigenDecompositionImpl,1170>, <org.apache.commons.math.linear.EigenDecompositionImpl,1172>, <org.apache.commons.math.linear.EigenDecompositionImpl,1175>, <org.apache.commons.math.linear.EigenDecompositionImpl,1176>, <org.apache.commons.math.linear.EigenDecompositionImpl,1177>, <org.apache.commons.math.linear.EigenDecompositionImpl,1179>, <org.apache.commons.math.linear.EigenDecompositionImpl,1180>, <org.apache.commons.math.linear.EigenDecompositionImpl,1183>, <org.apache.commons.math.linear.EigenDecompositionImpl,1186>, <org.apache.commons.math.linear.EigenDecompositionImpl,1187>, <org.apache.commons.math.linear.EigenDecompositionImpl,1188>, <org.apache.commons.math.linear.EigenDecompositionImpl,1190>, <org.apache.commons.math.linear.EigenDecompositionImpl,1194>, <org.apache.commons.math.linear.EigenDecompositionImpl,1197>, <org.apache.commons.math.linear.EigenDecompositionImpl,1198>, <org.apache.commons.math.linear.EigenDecompositionImpl,1199>, <org.apache.commons.math.linear.EigenDecompositionImpl,1201>, <org.apache.commons.math.linear.EigenDecompositionImpl,1202>, <org.apache.commons.math.linear.EigenDecompositionImpl,1205>, <org.apache.commons.math.linear.EigenDecompositionImpl,1208>, <org.apache.commons.math.linear.EigenDecompositionImpl,1209>, <org.apache.commons.math.linear.EigenDecompositionImpl,1210>, <org.apache.commons.math.linear.EigenDecompositionImpl,1212>, <org.apache.commons.math.linear.EigenDecompositionImpl,1216>, <org.apache.commons.math.linear.EigenDecompositionImpl,1218>, <org.apache.commons.math.linear.EigenDecompositionImpl,1230>, <org.apache.commons.math.linear.EigenDecompositionImpl,1231>, <org.apache.commons.math.linear.EigenDecompositionImpl,1232>, <org.apache.commons.math.linear.EigenDecompositionImpl,1233>, <org.apache.commons.math.linear.EigenDecompositionImpl,1234>, <org.apache.commons.math.linear.EigenDecompositionImpl,1235>, <org.apache.commons.math.linear.EigenDecompositionImpl,1238>, <org.apache.commons.math.linear.EigenDecompositionImpl,1253>, <org.apache.commons.math.linear.EigenDecompositionImpl,1254>, <org.apache.commons.math.linear.EigenDecompositionImpl,1255>, <org.apache.commons.math.linear.EigenDecompositionImpl,1256>, <org.apache.commons.math.linear.EigenDecompositionImpl,1257>, <org.apache.commons.math.linear.EigenDecompositionImpl,1258>, <org.apache.commons.math.linear.EigenDecompositionImpl,1259>, <org.apache.commons.math.linear.EigenDecompositionImpl,1260>, <org.apache.commons.math.linear.EigenDecompositionImpl,1261>, <org.apache.commons.math.linear.EigenDecompositionImpl,1263>, <org.apache.commons.math.linear.EigenDecompositionImpl,1273>, <org.apache.commons.math.linear.EigenDecompositionImpl,1274>, <org.apache.commons.math.linear.EigenDecompositionImpl,1275>, <org.apache.commons.math.linear.EigenDecompositionImpl,1276>, <org.apache.commons.math.linear.EigenDecompositionImpl,1278>, <org.apache.commons.math.linear.EigenDecompositionImpl,1279>, <org.apache.commons.math.linear.EigenDecompositionImpl,1280>, <org.apache.commons.math.linear.EigenDecompositionImpl,1281>, <org.apache.commons.math.linear.EigenDecompositionImpl,1282>, <org.apache.commons.math.linear.EigenDecompositionImpl,1283>, <org.apache.commons.math.linear.EigenDecompositionImpl,1284>, <org.apache.commons.math.linear.EigenDecompositionImpl,1285>, <org.apache.commons.math.linear.EigenDecompositionImpl,1288>, <org.apache.commons.math.linear.EigenDecompositionImpl,1289>, <org.apache.commons.math.linear.EigenDecompositionImpl,1290>, <org.apache.commons.math.linear.EigenDecompositionImpl,1291>, <org.apache.commons.math.linear.EigenDecompositionImpl,1292>, <org.apache.commons.math.linear.EigenDecompositionImpl,1293>, <org.apache.commons.math.linear.EigenDecompositionImpl,1294>, <org.apache.commons.math.linear.EigenDecompositionImpl,1299>, <org.apache.commons.math.linear.EigenDecompositionImpl,1300>, <org.apache.commons.math.linear.EigenDecompositionImpl,1301>, <org.apache.commons.math.linear.EigenDecompositionImpl,1302>, <org.apache.commons.math.linear.EigenDecompositionImpl,1303>, <org.apache.commons.math.linear.EigenDecompositionImpl,1304>, <org.apache.commons.math.linear.EigenDecompositionImpl,1305>, <org.apache.commons.math.linear.EigenDecompositionImpl,1306>, <org.apache.commons.math.linear.EigenDecompositionImpl,1308>, <org.apache.commons.math.linear.EigenDecompositionImpl,1309>, <org.apache.commons.math.linear.EigenDecompositionImpl,1310>, <org.apache.commons.math.linear.EigenDecompositionImpl,1311>, <org.apache.commons.math.linear.EigenDecompositionImpl,1312>, <org.apache.commons.math.linear.EigenDecompositionImpl,1313>, <org.apache.commons.math.linear.EigenDecompositionImpl,1314>, <org.apache.commons.math.linear.EigenDecompositionImpl,1316>, <org.apache.commons.math.linear.EigenDecompositionImpl,1317>, <org.apache.commons.math.linear.EigenDecompositionImpl,1319>, <org.apache.commons.math.linear.EigenDecompositionImpl,1330>, <org.apache.commons.math.linear.EigenDecompositionImpl,1331>, <org.apache.commons.math.linear.EigenDecompositionImpl,1332>, <org.apache.commons.math.linear.EigenDecompositionImpl,1334>, <org.apache.commons.math.linear.EigenDecompositionImpl,1335>, <org.apache.commons.math.linear.EigenDecompositionImpl,1336>, <org.apache.commons.math.linear.EigenDecompositionImpl,1337>, <org.apache.commons.math.linear.EigenDecompositionImpl,1342>, <org.apache.commons.math.linear.EigenDecompositionImpl,1344>, <org.apache.commons.math.linear.EigenDecompositionImpl,1345>]
======================org.apache.commons.math.linear.EigenDecompositionImpl,643
========
case 2 :

default :
 final double[] range=eigenvaluesRange(begin,n);
 final double oneFourth=0.25*(3*range[0]+range[1]);


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,644
========
if(pingPong<getDomain(n,begin,getSampleSize())[0]){
TOLERANCE=0.0;
}else if(x>=domain[1]){
ret=1.0;
}else {
ret=innerCumulativeProbability(domain[0],x,1,n,begin,getSampleSize());
}
default :
 final double[] range=eigenvaluesRange(begin,n);
 final double oneFourth=0.25*(3*range[0]+range[1]);
 final int oneFourthCount=countEigenValues(oneFourth,begin,n);


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 2 :

default :
 final double[] range=eigenvaluesRange(begin,n);
 final double oneFourth=0.25*(3*range[0]+range[1]);
 final int oneFourthCount=countEigenValues(oneFourth,begin,n);


========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,645
========
 final double oneFourth=0.5*(3*range[0]+range[1]);
 final int oneFourthCount=countEigenValues(oneFourth,begin,n);
 final double threeFourth=0.25*(range[0]+3*range[1]);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double oneFourth=0.25*(3*range[0]+range[1]);
 final long oneFourthCount=countEigenValues(oneFourth,begin,n);
 final double threeFourth=0.25*(range[0]+3*range[1]);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,646
========
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
 final int oneFourthCount=countEigenValues(oneFourth,begin,n);
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(threeFourth,begin,n);
 final int oneFourthCount=countEigenValues(oneFourth,begin,n);
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int oneFourthCount=countEigenValues(threeFourth,begin,n);
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
range=new double[n];
 final int oneFourthCount=countEigenValues(oneFourth,begin,n);
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(oneFourthCount<getDomain(n,begin,getSampleSize())[0]){
TOLERANCE=1.0;
}else if(x>domain[1]){
ret=0.0;
}else {
ret=innerCumulativeProbability(domain[1],x,-1,n,begin,getSampleSize());
}
 final int oneFourthCount=countEigenValues(oneFourth,begin,n);
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(oneFourthCount<getDomain(n,begin,getSampleSize())[0]){
TOLERANCE=0.0;
}else if(x>=domain[1]){
ret=1.0;
}else {
ret=innerCumulativeProbability(domain[0],x,1,n,begin,getSampleSize());
}
 final int oneFourthCount=countEigenValues(oneFourth,begin,n);
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final long oneFourthCount=countEigenValues(oneFourth,begin,n);
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,647
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(oneFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final int chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
incrementIterationsCounter();
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final double chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<1){
throw MathRuntimeException.createIllegalArgumentException("polynomial degree must be positive: degree={0}",n);
}
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<1){
throw MathRuntimeException.createIllegalArgumentException("polynomial degree must be positive: degree={0}",n);
}
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final int chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final long chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<0){
throw MathRuntimeException.createIllegalArgumentException("simplex must contain at least one point");
}
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chooseLeft=new double[n][n];
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
if(n==2){
return new double[]{range[0],yval[1]};
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(threeFourthCount<2){
throw new MathException("the bandwidth must be large enough to "+"accomodate at least 2 points. There are {0} ",n,2.0/n,threeFourth);
}
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
if(n<=0){
throw MathRuntimeException.createIllegalArgumentException("upper bound must be positive ({0})",n);
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!FastFourierTransformer.isPowerOf2(n)){
throw MathRuntimeException.createIllegalArgumentException("{0} is not a power of 2 plus one",f.length);
}
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
checkIndex(oneFourthCount+n-1);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
checkIndex(oneFourthCount);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
checkIndex(oneFourthCount+n-1);
 final int chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
work[0]=0.0;
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
if(x.length<3){
throw MathRuntimeException.createIllegalArgumentException("{0} points are required, got only {1}",3,x.length);
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
range[0]=0.5*(work[0]+f[n]);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
range[n>>1]=work[n>>1];
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(columns-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(blockSize-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(work,0,work,0,begin);
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
range[0]=0.0;
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
range[n>>1]=2.0*work[n>>1];
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
if(n<=0){
throw MathRuntimeException.createIllegalArgumentException("number of sample is not positive: {0}",n);
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
verifyInterval(minPivot,TOLERANCE);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
++n;
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final long threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(work,begin,new double[n],0,n);
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Arrays.sort(new double[n]);
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE<1){
return new double[n][0];
}
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(work,0,work,0,begin);
 final double threeFourth=0.25*(range[0]+3*range[1]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final double chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,648
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final int chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!FastFourierTransformer.isPowerOf2(threeFourthCount)){
throw MathRuntimeException.createIllegalArgumentException("{0} is not a power of 2",n);
}
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(threeFourthCount<1){
throw MathRuntimeException.createIllegalArgumentException("polynomial degree must be positive: degree={0}",n);
}
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!FastFourierTransformer.isPowerOf2(n)){
throw MathRuntimeException.createIllegalArgumentException("{0} is not a power of 2 plus one",f.length);
}
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(threeFourthCount<0){
throw MathRuntimeException.createIllegalArgumentException("simplex must contain at least one point");
}
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lambda=new double[threeFourthCount][n];
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=m?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=n?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final int lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final double chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
work[0]=0.0;
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
if(n<=0){
throw MathRuntimeException.createIllegalArgumentException("upper bound must be positive ({0})",n);
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(oneFourthCount<getDomain(n,begin,getSampleSize())[0]){
lambda=1.0;
}else if(x>domain[1]){
ret=0.0;
}else {
ret=innerCumulativeProbability(domain[1],x,-1,n,begin,getSampleSize());
}
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
cachedV=MatrixUtils.createRealMatrix(n,n);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(oneFourthCount<getDomain(n,begin,getSampleSize())[0]){
lambda=0.0;
}else if(x>=domain[1]){
ret=1.0;
}else {
ret=innerCumulativeProbability(domain[0],x,1,n,begin,getSampleSize());
}
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
if(n<=0){
throw MathRuntimeException.createIllegalArgumentException("number of sample is not positive: {0}",n);
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
verifyInterval(threeFourth,TOLERANCE);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=i0?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=n0?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
sigma=(pingPong==n)?0:-range[4*n0-2];
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
sigmaLow=0;
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(work,begin,new double[n],0,n);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Arrays.sort(new double[n]);
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE<1){
return new double[n][0];
}
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=lambdaFractional?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=MIN_VALUE?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final long lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final long threeFourthCount=countEigenValues(threeFourth,begin,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
if(n==1){
range[0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
new double[n][0]=0.5*(work[0]+f[n]);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
new double[n][n>>1]=work[n>>1];
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!FastFourierTransformer.isPowerOf2(threeFourthCount)){
throw MathRuntimeException.createIllegalArgumentException("{0} is not a power of 2",n);
}
 final int threeFourthCount=countEigenValues(threeFourth,begin,n);
 final int chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,649
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=i0?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=n0?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
sigmaLow=0;
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==2){
return new double[]{range[0],yval[1]};
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((int)(minPivot*n)<2){
throw new MathException("the bandwidth must be large enough to "+"accomodate at least 2 points. There are {0} ",n,2.0/n,minPivot);
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<1){
throw MathRuntimeException.createIllegalArgumentException("polynomial degree must be positive: degree={0}",n);
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==1){
work[0]=0.5*(range[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new double[n][0]=0.5*(range[0]+f[n]);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new double[n][n>>1]=range[n>>1];
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=lambdaFractional?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=MIN_VALUE?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final long lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lambda=TOLERANCE*(y+1)/(2*lambda);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(minPivot<-lambda&&n==0){
TOLERANCE=lambda+y;
break;
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dMin1==minPivot){
tau=0.5*dMin1;
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=-9;
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tau>TOLERANCE||x<-lambda){
continue;
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<1){
throw MathRuntimeException.createIllegalArgumentException("polynomial degree must be positive: degree={0}",n);
}
 final int chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
if(tType==-6){
g+=0.333*(1-g);
}else if(tType==-18){
g=0.25*0.333;
}else {
g=0.25;
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=-6;
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<0){
throw MathRuntimeException.createIllegalArgumentException("simplex must contain at least one point");
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
TOLERANCE=TOLERANCE*a2;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
if(TOLERANCE<minPivot){
lambda=TOLERANCE*(1-Math.sqrt(a2))/(1+a2);
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lambda=tau-(TOLERANCE*t)/(3*(lambda+oneFourthCount*(TOLERANCE+1)));
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(minPivot<lambda){
TOLERANCE=lambda+y;
break;
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
if(TOLERANCE>(TOLERANCE+TOLERANCE)){
TOLERANCE=Math.min(s,a2-(b1+b2));
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=-3;
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<=0){
throw MathRuntimeException.createIllegalArgumentException("upper bound must be positive ({0})",n);
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
if(n==0){
throw MathRuntimeException.createIllegalArgumentException("cannot compute 0-th root of unity, indefinite result");
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!FastFourierTransformer.isPowerOf2(n)){
throw MathRuntimeException.createIllegalArgumentException("{0} is not a power of 2",n);
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final int lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=m?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=n?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[0]=0.0;
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final boolean chooseLeft=(TWO_PI-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<=0){
throw MathRuntimeException.createIllegalArgumentException("number of sample is not positive: {0}",n);
}
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
verifyInterval(TOLERANCE,minPivot);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
if(minPivot==0){
return ;
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
flipIfWarranted(n,2);
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
initialSplits(n);
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lambda=0;
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
cachedV=MatrixUtils.createRealMatrix(n,n);
 final boolean chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!FastFourierTransformer.isPowerOf2(n)){
throw MathRuntimeException.createIllegalArgumentException("{0} is not a power of 2",n);
}
 final int chooseLeft=(oneFourthCount-1)>=(n-threeFourthCount);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,651
========
processGeneralBlock(n);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=lambdaFractional?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=MIN_VALUE?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final long lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=chooseLeft?range[0]:range[1];
oneFourthCount=TOLERANCE<0?1:0;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(minPivot<-tau&&oneFourthCount==0){
TOLERANCE=lambda+y;
break;
}
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=chooseLeft?range[0]:range[1];
work[4*oneFourthCount-3-pingPong]=0.0;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=i0?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=n0?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lambda=(n==n)?0:-range[4*n0-2];
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sigmaLow=0;
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=chooseLeft?range[0]:range[1];
if(n<0){
throw MathRuntimeException.createIllegalArgumentException("simplex must contain at least one point");
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=chooseLeft?range[0]:range[1];
lambda=TOLERANCE*((2*TOLERANCE+1)/(6*lambda)-1);
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(minPivot<tau){
TOLERANCE=lambda+y;
break;
}
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dMin1==minPivot){
lambda=0.5*dMin1;
}
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=-9;
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=chooseLeft?range[0]:range[1];
if(!isStrictlyIncreasing(work)){
throw MathRuntimeException.createIllegalArgumentException("knot values must be strictly increasing");
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=chooseLeft?range[0]:range[1];
this.n=knots.length-1;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=chooseLeft?range[0]:range[1];
this.work=new double[n+1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=chooseLeft?range[0]:range[1];
System.arraycopy(work,0,this.knots,0,n+1);
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=chooseLeft?range[0]:range[1];
if(n<1){
throw MathRuntimeException.createIllegalArgumentException("upper bound must be positive ({0})",n);
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=chooseLeft?range[0]:range[1];
if(n<=0){
throw MathRuntimeException.createIllegalArgumentException("invalid number of elements {0} (must be positive)",n);
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=m?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=n?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=chooseLeft?range[0]:range[1];
lambda=TOLERANCE*a2;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=chooseLeft?range[0]:range[1];
if(lambda<minPivot){
TOLERANCE=TOLERANCE*(1-Math.sqrt(a2))/(1+a2);
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=chooseLeft?range[0]:range[1];
if(tType==-6){
g+=0.333*(1-g);
}else if(tType==-18){
g=0.25*0.333;
}else {
g=0.25;
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=-6;
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=chooseLeft?range[0]:range[1];
if(TOLERANCE>(TOLERANCE+TOLERANCE)){
lambda=Math.min(s,a2-(b1+b2));
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=-3;
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=chooseLeft?range[0]:range[1];
n=Math.max((int)(Math.min(4,Math.pow(TOLERANCE/TOLERANCE,0.5/abscissas.length))*n),n+1);
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
if(minPivot==0){
return ;
}
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
flipIfWarranted(n,2);
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=chooseLeft?range[0]:range[1];
tType=0;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
if(oneFourthCount==0){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) must be positive",k);
}
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
if(n<=0){
throw MathRuntimeException.createIllegalArgumentException("number of sample is not positive: {0}",n);
}
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final double lambda=chooseLeft?range[0]:range[1];
if((n!=sample2.length)||(n<1)){
throw MathRuntimeException.createIllegalArgumentException("input arrays must have the same positive length ({0} and {1})",n,sample2.length);
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n==oneFourthCount)||(k==0)){
return 1;
}
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((oneFourthCount==1)||(k==n-1)){
return n;
}
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n==oneFourthCount)||(k==0)){
return 1.0;
}
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
cachedV=MatrixUtils.createRealMatrix(n,n);
 final double lambda=chooseLeft?range[0]:range[1];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,654
========
dN2=0;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<0){
throw MathRuntimeException.createIllegalArgumentException("simplex must contain at least one point");
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<=0){
throw MathRuntimeException.createIllegalArgumentException("invalid number of elements {0} (must be positive)",n);
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
checkIndex(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super();
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
cachedVt=null;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<1){
throw MathRuntimeException.createIllegalArgumentException("upper bound must be positive ({0})",n);
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n++;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
if(minPivot==0){
return ;
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
flipIfWarranted(n,2);
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=0;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=(range[1]-range[0])*MathUtils.EPSILON+2*p;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++n;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=0.0;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dest.n=source.n;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
range[4*oneFourthCount-3-pingPong]=0.0;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
System.arraycopy(work,0,work,0,n);
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
oneFourthCount=cachedVt.getRowDimension();
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=Math.max((int)(Math.min(4,Math.pow(TOLERANCE/TOLERANCE,0.5/abscissas.length))*n),n+1);
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work=new double[Math.min(oneFourthCount,begin)];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
cachedVt=computeCovarianceMatrix(cachedVt,chooseLeft);
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
if(n<=0){
throw MathRuntimeException.createIllegalArgumentException("number of sample is not positive: {0}",n);
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
if(n==0){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) must be positive",k);
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
resetEvaluations();
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dMin1==minPivot){
tau=0.5*dMin1;
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=-9;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n==oneFourthCount)||(k==0)){
return 1;
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((oneFourthCount==1)||(k==n-1)){
return n;
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n==oneFourthCount)||(k==0)){
return 1.0;
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin=range[4*oneFourthCount+pingPong]-minPivot;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin1=-range[4*oneFourthCount+pingPong];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
range[oneFourthCount+1]=TOLERANCE;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
range[oneFourthCount+2]=TOLERANCE;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
oneFourthCount+=6;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
range[oneFourthCount+10]=TOLERANCE;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
range[oneFourthCount+5]=minPivot*TOLERANCE;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
oneFourthCount-=6;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lowerSpectra=Math.min(lowerSpectra,lambda);
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
range[oneFourthCount+oneFourthCount-1]=dN2+eMin;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
oneFourthCount=TOLERANCE<0?1:0;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(minPivot<-tau&&oneFourthCount==0){
TOLERANCE=lambda+y;
break;
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=TOLERANCE*a2;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE<minPivot){
TOLERANCE=TOLERANCE*(1-Math.sqrt(a2))/(1+a2);
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tType==-6){
g+=0.333*(1-g);
}else if(tType==-18){
g=0.25*0.333;
}else {
g=0.25;
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=-6;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[oneFourthCount-2]=dN1+work[oneFourthCount];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[oneFourthCount]=work[oneFourthCount+2]*(work[j4p2]/work[j4-2]);
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lambda=Math.min(dMin,tau);
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[oneFourthCount+2]=tau;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE>(TOLERANCE+TOLERANCE)){
TOLERANCE=Math.min(s,a2-(b1+b2));
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=-3;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[oneFourthCount-2]=dN2+work[oneFourthCount];
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lambda=work[oneFourthCount+2]*(dN2/work[oneFourthCount-2])-minPivot;
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin=Math.min(dMin,lambda);
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=TOLERANCE*((2*TOLERANCE+1)/(6*lambda)-1);
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(minPivot<tau){
TOLERANCE=lambda+y;
break;
}
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,657
UNKNOWN ASTNode type : catch (FunctionEvaluationException fee) {
  optima[i]=null;
}

UNKNOWN ASTNode type : catch (OptimizationException oe) {
  optima[i]=null;
}

UNKNOWN ASTNode type : catch (FunctionEvaluationException fee) {
  optima[i]=null;
}

UNKNOWN ASTNode type : catch (OptimizationException oe) {
  optima[i]=null;
}

UNKNOWN ASTNode type : catch (FunctionEvaluationException fee) {
  optima[i]=null;
}

UNKNOWN ASTNode type : catch (OptimizationException oe) {
  optima[i]=null;
}

UNKNOWN ASTNode type : catch (FunctionEvaluationException fee) {
  optima[i]=Double.NaN;
  optimaValues[i]=Double.NaN;
}

UNKNOWN ASTNode type : catch (FunctionEvaluationException fee) {
  optima[i]=Double.NaN;
  optimaValues[i]=Double.NaN;
}

UNKNOWN ASTNode type : catch (ConvergenceException ce) {
  optima[i]=Double.NaN;
  optimaValues[i]=Double.NaN;
}

UNKNOWN ASTNode type : catch (ConvergenceException ce) {
  optima[i]=Double.NaN;
  optimaValues[i]=Double.NaN;
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

========
for(int i=0;i<=n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<k;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<=k;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<m;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<begin;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<begin;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<length;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work=new double[n];
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<order;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<dimension;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<l;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<virtualSize;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<stages;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<rank;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nRows;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<binCount;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<iHeight;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<cols;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<row;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yRow+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nCols;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
z*=-work[6*i+2];
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nSteps;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<N;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nvars;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
oneFourthCount++;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<highLength;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=xJ+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<m;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=gamma+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
z*=-work[6*i-1];
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<m;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<degree;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<j;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<=j;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<col;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<lowLength;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nSum;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<ncols;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nrows;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<microsphereElements;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n+i)>internalArray.length){
expandTo(startIndex+i);
}
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
oneFourthCount=i;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<k;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<rows;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<halfN;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<pos;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<size;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<max;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<length;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<rows;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i<0){
i=-i-2;
}
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<index;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<solvedCols;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
++oneFourthCount;
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<solvedCols;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=TOLERANCE-TOLERANCE;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=ypk+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
index+=oneFourthCount;
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++oneFourthCount;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<endRow;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<=n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<outCols;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<n;++i){
realEigenvalues[begin+i]=gamma+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<n;++i){
index+=oneFourthCount;
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<rows;++i){
realEigenvalues[begin+i]=gamma+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<rows;++i){
index+=oneFourthCount;
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
index+=oneFourthCount;
realEigenvalues[begin+i]=gamma+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<rows;++i){
realEigenvalues[begin+i]=gamma+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<rows;++i){
index+=oneFourthCount;
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<n;++i){
index+=oneFourthCount;
realEigenvalues[begin+i]=gamma+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<rows;++i){
index+=oneFourthCount;
realEigenvalues[begin+i]=gamma+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<rows;++i){
index+=oneFourthCount;
realEigenvalues[begin+i]=gamma+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN2=work[pingPong];
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<order;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<=n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<endRow;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<=endRow;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<=endRow;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<solvedCols;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=factor+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
subVector[d]=i;
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<endColumn;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[j]=realEigenvalues[i];
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
--realEigenvalues.length-1;
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[j]=realEigenvalues[i];
--realEigenvalues.length-1;

realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Arrays.sort(realEigenvalues);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<len;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=normalizedSum+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
qMax=Math.max(diagMax,work[i]+work[i+2]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
eMin=Math.min(offDiagMin,work[i+2]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
bDecrementData[j]=lambda*TOLERANCE;
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
multistep[i-1]=realEigenvalues;
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<=nSteps;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<crossoverIndex;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
yEnd[i]=y0[i]+lambda*f[0][i];
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
tmp=luMax[i];
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
luCol[i]=TOLERANCE;
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
tmp=luMax[i];
luCol[i]=TOLERANCE;

realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
power*=TOLERANCE;
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<iEnd;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE/=realEigenvalues[oneFourthCount];
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
d[i]=y[i];
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
if(Math.abs(lambda-imagEigenvalues[oneFourthCount])<TOLERANCE){
nearest=oneFourthCount;
min_dist=Math.abs(lambda-imagEigenvalues[oneFourthCount]);
}
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
d[i]=y[i];
if(Math.abs(lambda-imagEigenvalues[oneFourthCount])<TOLERANCE){
nearest=oneFourthCount;
min_dist=Math.abs(lambda-imagEigenvalues[oneFourthCount]);
}

realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nM1;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<maxIter;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<lastNaN;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<end;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<mu;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues=imagEigenvalues;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=coeff1+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot1+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<absN;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=cosT+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
omegaImaginaryForward[i]=omegaImaginaryForward[i-1]*TOLERANCE-omegaReal[i-1]*TOLERANCE;
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
omegaImaginaryInverse[i]=-omegaImaginaryForward[i];
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
omegaImaginaryForward[i]=omegaImaginaryForward[i-1]*TOLERANCE-omegaReal[i-1]*TOLERANCE;
omegaImaginaryInverse[i]=-omegaImaginaryForward[i];

realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<order;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nVars;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nCol;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=alpha+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
alpha/=lambda*householderVectors[k][k];
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<oldLength;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<starts;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=sin+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=rik+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
jacobian[i*cols+pk]=TOLERANCE*work[i*begin+oneFourthCount]+TOLERANCE*realEigenvalues[i];
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
ltI[q]*=1.0/imagEigenvalues[oneFourthCount];
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues[oneFourthCount]=Math.sqrt(ltI[i]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=tc+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
if(imagEigenvalues[oneFourthCount]-x[i+j]==0.0){
throw new DuplicateSampleAbscissaException(imagEigenvalues[i],i,i+oneFourthCount);
}
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
d[j]=imagEigenvalues[i+oneFourthCount]-TOLERANCE*(realEigenvalues[oneFourthCount+1]-work[j])/imagEigenvalues[oneFourthCount]-x[i+j];
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
if(imagEigenvalues[oneFourthCount]-x[i+j]==0.0){
throw new DuplicateSampleAbscissaException(imagEigenvalues[i],i,i+oneFourthCount);
}
d[j]=imagEigenvalues[i+oneFourthCount]-TOLERANCE*(realEigenvalues[oneFourthCount+1]-work[j])/imagEigenvalues[oneFourthCount]-x[i+j];

realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=coeff23+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot23+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=coeff1+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=yDot1+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
sumSqImpl[i]=new SumOfSquares();
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
minImpl[i]=new Min();
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
maxImpl[i]=new Max();
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
sumLogImpl[i]=new SumOfLogs();
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
geoMeanImpl[i]=new GeometricMean();
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
meanImpl[i]=new Mean();
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
sumSqImpl[i]=new SumOfSquares();
minImpl[i]=new Min();
maxImpl[i]=new Max();
sumLogImpl[i]=new SumOfLogs();
geoMeanImpl[i]=new GeometricMean();
meanImpl[i]=new Mean();

realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<maximalIterationCount;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
interpolatedDerivatives[i]=v1[i]+TOLERANCE*v2[i]+TOLERANCE*v3[i]+TOLERANCE*v4[i];
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<=maximalIterationCount;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=coeff2+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot2+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=coeff3+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot3+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot6+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot7+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot8+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot9+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot10+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot11+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot12+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot13+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot14+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot15+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=b0+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot0+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=b2+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=b3+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=b4+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot4+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=yDot2+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=yDot3+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
g=2.0*(x[i+1]-x[i-1])-h[i-1]*mu[i-1];
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
mu[i]=h[i]/lambda;
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
g=2.0*(x[i+1]-x[i-1])-h[i-1]*mu[i-1];
mu[i]=h[i]/lambda;

realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
v1[i]=A70*i+A72*TOLERANCE+A73*TOLERANCE+A74*TOLERANCE+A75*TOLERANCE;
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
v2[i]=i-v1[i];
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
v4[i]=D0*i+D2*TOLERANCE+D3*TOLERANCE+D4*TOLERANCE+D5*TOLERANCE+D6*TOLERANCE;
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
v1[i]=A70*i+A72*TOLERANCE+A73*TOLERANCE+A74*TOLERANCE+A75*TOLERANCE;
v2[i]=i-v1[i];
v4[i]=D0*i+D2*TOLERANCE+D3*TOLERANCE+D4*TOLERANCE+D5*TOLERANCE+D6*TOLERANCE;

realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
interpolatedDerivatives[i]=v[0][i]+TOLERANCE*v[1][i]+TOLERANCE*v[2][i]+TOLERANCE*v[3][i]+TOLERANCE*v[4][i]+TOLERANCE*v[5][i]+TOLERANCE*v[6][i];
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Arrays.sort(work);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<p;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE*=work[i]/work[i4-2];
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE+=TOLERANCE;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=b2*(work[i]/work[i4-2]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lambda=a2+TOLERANCE;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=b1*(work[i]/work[i4-2]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lambda=b2+TOLERANCE;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=n*Math.sqrt(lambda+lambda)-0.5;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=work[i-5]/work[nn-7];
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
oneFourthCount=i-9;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=work[i-9]/work[nn-11];
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
oneFourthCount=i-13;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chooseLeft=n>0;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==0){
throw new MathException("Loess expects at least 1 point");
}
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
alpha/=lambda*qrtMinor[minor];
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.oneFourthCount=n;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
c[j]=z[j]-mu[j]*c[j+1];
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
d[j]=(c[j+1]-c[j])/(3.0*h[j]);
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
c[j]=z[j]-mu[j]*c[j+1];
d[j]=(c[j+1]-c[j])/(3.0*h[j]);

realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
oneFourthCount|=mask>>1;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
shuffle(getNatural(n),n-oneFourthCount);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<n;++i){
realEigenvalues[begin+i]=xJ+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<m;++i){
realEigenvalues[begin+i]=xJ+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<m;++i){
realEigenvalues[begin+i]=xJ+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=coeff2+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=coeff3+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
test(work,begin,oneFourthCount);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=b2*(work[i]/work[i4-2]);
lambda=a2+TOLERANCE;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkBinomial(n,oneFourthCount);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<iEnd;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<index;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==1){
realEigenvalues[0]=0.0;
return transformed;
}
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<endColumn;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
getVT().walkInOptimizedOrder(new DefaultRealMatrixPreservingVisitor(){
  /** 
 * {@inheritDoc} 
 */
  @Override public void visit(  final int row,  final int column,  final double value){
    data[row][column]=value / singularValues[row];
  }
}
,0,oneFourthCount-1,0,n-1);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b.length!=realEigenvalues.length){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",b.length,m);
}
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
UNKNOWN ASTNode type : catch (FunctionEvaluationException fee) {
  optima[i]=null;
}

UNKNOWN ASTNode type : catch (OptimizationException oe) {
  optima[i]=null;
}

UNKNOWN ASTNode type : catch (FunctionEvaluationException fee) {
  optima[i]=null;
}

UNKNOWN ASTNode type : catch (OptimizationException oe) {
  optima[i]=null;
}

UNKNOWN ASTNode type : catch (FunctionEvaluationException fee) {
  optima[i]=null;
}

UNKNOWN ASTNode type : catch (OptimizationException oe) {
  optima[i]=null;
}

UNKNOWN ASTNode type : catch (FunctionEvaluationException fee) {
  optima[i]=Double.NaN;
  optimaValues[i]=Double.NaN;
}

UNKNOWN ASTNode type : catch (FunctionEvaluationException fee) {
  optima[i]=Double.NaN;
  optimaValues[i]=Double.NaN;
}

UNKNOWN ASTNode type : catch (ConvergenceException ce) {
  optima[i]=Double.NaN;
  optimaValues[i]=Double.NaN;
}

UNKNOWN ASTNode type : catch (ConvergenceException ce) {
  optima[i]=Double.NaN;
  optimaValues[i]=Double.NaN;
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

UNKNOWN ASTNode type : catch (IndexOutOfBoundsException e) {
  checkIndex(index);
  checkIndex(index + n - 1);
}

========
for(int i=0;i<=n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<k;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<=k;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<m;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<begin;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<begin;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<length;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work=new double[n];
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<order;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<dimension;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<l;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<virtualSize;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<stages;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<rank;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nRows;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<binCount;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<iHeight;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<cols;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<row;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yRow-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nCols;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
z*=-work[6*i+2];
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nSteps;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<N;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nvars;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
oneFourthCount++;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<highLength;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=xJ-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<m;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=gamma-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
z*=-work[6*i-1];
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<m;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<degree;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<j;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<=j;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<col;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<lowLength;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nSum;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<ncols;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nrows;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<microsphereElements;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n+i)>internalArray.length){
expandTo(startIndex+i);
}
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
oneFourthCount=i;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<k;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<rows;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<halfN;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<pos;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<size;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<max;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<length;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<rows;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i<0){
i=-i-2;
}
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<index;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<solvedCols;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
++oneFourthCount;
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<solvedCols;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=TOLERANCE-TOLERANCE;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=ypk-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
index+=oneFourthCount;
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++oneFourthCount;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<endRow;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<=n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<outCols;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<n;++i){
realEigenvalues[begin+i]=gamma-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<n;++i){
index+=oneFourthCount;
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<rows;++i){
realEigenvalues[begin+i]=gamma-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<rows;++i){
index+=oneFourthCount;
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
index+=oneFourthCount;
realEigenvalues[begin+i]=gamma-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<rows;++i){
realEigenvalues[begin+i]=gamma-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<rows;++i){
index+=oneFourthCount;
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<n;++i){
index+=oneFourthCount;
realEigenvalues[begin+i]=gamma-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<rows;++i){
index+=oneFourthCount;
realEigenvalues[begin+i]=gamma-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<rows;++i){
index+=oneFourthCount;
realEigenvalues[begin+i]=gamma-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN2=work[pingPong];
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<order;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<=n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<endRow;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<=endRow;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<=endRow;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<solvedCols;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=factor-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
subVector[d]=i;
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<endColumn;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[j]=realEigenvalues[i];
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
--realEigenvalues.length-1;
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[j]=realEigenvalues[i];
--realEigenvalues.length-1;

realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Arrays.sort(realEigenvalues);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<len;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=normalizedSum-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
qMax=Math.max(diagMax,work[i]+work[i+2]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
eMin=Math.min(offDiagMin,work[i+2]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
bDecrementData[j]=lambda*TOLERANCE;
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
multistep[i-1]=realEigenvalues;
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<=nSteps;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<crossoverIndex;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
yEnd[i]=y0[i]+lambda*f[0][i];
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
tmp=luMax[i];
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
luCol[i]=TOLERANCE;
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
tmp=luMax[i];
luCol[i]=TOLERANCE;

realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
power*=TOLERANCE;
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<iEnd;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE/=realEigenvalues[oneFourthCount];
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
d[i]=y[i];
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
if(Math.abs(lambda-imagEigenvalues[oneFourthCount])<TOLERANCE){
nearest=oneFourthCount;
min_dist=Math.abs(lambda-imagEigenvalues[oneFourthCount]);
}
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
d[i]=y[i];
if(Math.abs(lambda-imagEigenvalues[oneFourthCount])<TOLERANCE){
nearest=oneFourthCount;
min_dist=Math.abs(lambda-imagEigenvalues[oneFourthCount]);
}

realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nM1;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<maxIter;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<lastNaN;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<end;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<mu;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues=imagEigenvalues;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=coeff1-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot1-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<absN;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=cosT-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
omegaImaginaryForward[i]=omegaImaginaryForward[i-1]*TOLERANCE-omegaReal[i-1]*TOLERANCE;
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
omegaImaginaryInverse[i]=-omegaImaginaryForward[i];
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
omegaImaginaryForward[i]=omegaImaginaryForward[i-1]*TOLERANCE-omegaReal[i-1]*TOLERANCE;
omegaImaginaryInverse[i]=-omegaImaginaryForward[i];

realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<order;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nVars;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nCol;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=alpha-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
alpha/=lambda*householderVectors[k][k];
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<oldLength;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<starts;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=sin-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=rik-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
jacobian[i*cols+pk]=TOLERANCE*work[i*begin+oneFourthCount]+TOLERANCE*realEigenvalues[i];
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
ltI[q]*=1.0/imagEigenvalues[oneFourthCount];
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues[oneFourthCount]=Math.sqrt(ltI[i]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=tc-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
if(imagEigenvalues[oneFourthCount]-x[i+j]==0.0){
throw new DuplicateSampleAbscissaException(imagEigenvalues[i],i,i+oneFourthCount);
}
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
d[j]=imagEigenvalues[i+oneFourthCount]-TOLERANCE*(realEigenvalues[oneFourthCount+1]-work[j])/imagEigenvalues[oneFourthCount]-x[i+j];
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
if(imagEigenvalues[oneFourthCount]-x[i+j]==0.0){
throw new DuplicateSampleAbscissaException(imagEigenvalues[i],i,i+oneFourthCount);
}
d[j]=imagEigenvalues[i+oneFourthCount]-TOLERANCE*(realEigenvalues[oneFourthCount+1]-work[j])/imagEigenvalues[oneFourthCount]-x[i+j];

realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=coeff23-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot23-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=coeff1-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=yDot1-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
sumSqImpl[i]=new SumOfSquares();
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
minImpl[i]=new Min();
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
maxImpl[i]=new Max();
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
sumLogImpl[i]=new SumOfLogs();
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
geoMeanImpl[i]=new GeometricMean();
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
meanImpl[i]=new Mean();
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
sumSqImpl[i]=new SumOfSquares();
minImpl[i]=new Min();
maxImpl[i]=new Max();
sumLogImpl[i]=new SumOfLogs();
geoMeanImpl[i]=new GeometricMean();
meanImpl[i]=new Mean();

realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<maximalIterationCount;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
interpolatedDerivatives[i]=v1[i]+TOLERANCE*v2[i]+TOLERANCE*v3[i]+TOLERANCE*v4[i];
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<=maximalIterationCount;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=coeff2-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot2-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=coeff3-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot3-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot6-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot7-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot8-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot9-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot10-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot11-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot12-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot13-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot14-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot15-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=b0-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot0-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=b2-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=b3-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=b4-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=yDot4-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=yDot2-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=yDot3-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
g=2.0*(x[i+1]-x[i-1])-h[i-1]*mu[i-1];
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
mu[i]=h[i]/lambda;
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
g=2.0*(x[i+1]-x[i-1])-h[i-1]*mu[i-1];
mu[i]=h[i]/lambda;

realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
v1[i]=A70*i+A72*TOLERANCE+A73*TOLERANCE+A74*TOLERANCE+A75*TOLERANCE;
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
v2[i]=i-v1[i];
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
v4[i]=D0*i+D2*TOLERANCE+D3*TOLERANCE+D4*TOLERANCE+D5*TOLERANCE+D6*TOLERANCE;
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
v1[i]=A70*i+A72*TOLERANCE+A73*TOLERANCE+A74*TOLERANCE+A75*TOLERANCE;
v2[i]=i-v1[i];
v4[i]=D0*i+D2*TOLERANCE+D3*TOLERANCE+D4*TOLERANCE+D5*TOLERANCE+D6*TOLERANCE;

realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
interpolatedDerivatives[i]=v[0][i]+TOLERANCE*v[1][i]+TOLERANCE*v[2][i]+TOLERANCE*v[3][i]+TOLERANCE*v[4][i]+TOLERANCE*v[5][i]+TOLERANCE*v[6][i];
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Arrays.sort(work);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<p;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE*=work[i]/work[i4-2];
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE+=TOLERANCE;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=b2*(work[i]/work[i4-2]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lambda=a2+TOLERANCE;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=b1*(work[i]/work[i4-2]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lambda=b2+TOLERANCE;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=n*Math.sqrt(lambda+lambda)-0.5;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=work[i-5]/work[nn-7];
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
oneFourthCount=i-9;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=work[i-9]/work[nn-11];
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
oneFourthCount=i-13;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chooseLeft=n>0;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==0){
throw new MathException("Loess expects at least 1 point");
}
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
alpha/=lambda*qrtMinor[minor];
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.oneFourthCount=n;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
c[j]=z[j]-mu[j]*c[j+1];
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
d[j]=(c[j+1]-c[j])/(3.0*h[j]);
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n;++i){
c[j]=z[j]-mu[j]*c[j+1];
d[j]=(c[j+1]-c[j])/(3.0*h[j]);

realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
oneFourthCount|=mask>>1;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
shuffle(getNatural(n),n-oneFourthCount);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<n;++i){
realEigenvalues[begin+i]=xJ-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<m;++i){
realEigenvalues[begin+i]=xJ-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<m;++i){
realEigenvalues[begin+i]=xJ-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=coeff2-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=coeff3-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
test(work,begin,oneFourthCount);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=b2*(work[i]/work[i4-2]);
lambda=a2+TOLERANCE;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkBinomial(n,oneFourthCount);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<iEnd;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=oneFourthCount;i<index;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==1){
realEigenvalues[0]=0.0;
return transformed;
}
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=begin;i<endColumn;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
getVT().walkInOptimizedOrder(new DefaultRealMatrixPreservingVisitor(){
  /** 
 * {@inheritDoc} 
 */
  @Override public void visit(  final int row,  final int column,  final double value){
    data[row][column]=value / singularValues[row];
  }
}
,0,oneFourthCount-1,0,n-1);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b.length!=realEigenvalues.length){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",b.length,m);
}
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
flipIfWarranted(n,2);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=0;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lambda=work[begin];
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((oneFourthCount+n)>internalArray.length){
expandTo(startIndex+i);
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
oneFourthCount=n;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==1){
return new double[]{0};
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE==0.0){
return TOLERANCE;
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
verifyInterval(lambda,TOLERANCE);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i<0){
i=-i-2;
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=polynomials.length){
i--;
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
oneFourthCount++;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==0){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) must be positive",k);
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
shuffle(getNatural(n),n-i);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(TOLERANCE-minPivot)<=lambda){
TOLERANCE=UnivariateRealSolverUtils.midpoint(min,max);
setResult(m,oneFourthCount);
return m;
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++oneFourthCount;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=x1+lambda;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=TOLERANCE-TOLERANCE;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(realEigenvalues[oneFourthCount]-xval[oneFourthCount]>xval[oneFourthCount]-xval[i]){
oneFourthCount=ileft;
}else {
edge=iright;
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<k;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<k;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<k;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<k;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i+1]=TOLERANCE;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
realEigenvalues[i+1]=lambda;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[oneFourthCount]=TOLERANCE*TOLERANCE+lambda-TOLERANCE*i;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
realEigenvalues[oneFourthCount]=Math.abs(imagEigenvalues[i]-work[i]);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=begin;i<begin;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=begin;i<begin;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<begin;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=begin;i<begin;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=begin;i<begin;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=begin;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<begin;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=begin;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<begin;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
new Variance().incrementAll(work,begin,oneFourthCount);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
accum3/=Math.pow(Math.sqrt(new Variance().getResult()),4.0);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
kurt=((i*(n0+1))/((n0-1)*(n0-2))*TOLERANCE)-(3*Math.pow(i-1,2.0))/((n0-2)*(n0-3));
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
new Variance().incrementAll(work,begin,oneFourthCount);
accum3/=Math.pow(Math.sqrt(new Variance().getResult()),4.0);
kurt=((i*(n0+1))/((n0-1)*(n0-2))*TOLERANCE)-(3*Math.pow(i-1,2.0))/((n0-2)*(n0-3));

for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
new Variance().incrementAll(work,begin,oneFourthCount);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
accum3/=Math.pow(Math.sqrt(new Variance().getResult()),4.0);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
kurt=((i*(n0+1))/((n0-1)*(n0-2))*TOLERANCE)-(3*Math.pow(i-1,2.0))/((n0-2)*(n0-3));
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
new Variance().incrementAll(work,begin,oneFourthCount);
accum3/=Math.pow(Math.sqrt(new Variance().getResult()),4.0);
kurt=((i*(n0+1))/((n0-1)*(n0-2))*TOLERANCE)-(3*Math.pow(i-1,2.0))/((n0-2)*(n0-3));

for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
interpolatedState[i]+=lambda*i;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
interpolatedDerivatives[i]+=(lambda*TOLERANCE+TOLERANCE*i)/TOLERANCE;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
interpolatedState[i]+=lambda*i;
interpolatedDerivatives[i]+=(lambda*TOLERANCE+TOLERANCE*i)/TOLERANCE;

for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
interpolatedState[i]+=lambda*i;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
interpolatedDerivatives[i]+=(lambda*TOLERANCE+TOLERANCE*i)/TOLERANCE;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
interpolatedState[i]+=lambda*i;
interpolatedDerivatives[i]+=(lambda*TOLERANCE+TOLERANCE*i)/TOLERANCE;

for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
pos=i+1;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
tiesTrace=new ArrayList<Integer>();
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
pos=i+1;
tiesTrace=new ArrayList<Integer>();

for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<mu;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<mu;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<mu;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<mu;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
polynoms[7][i]=16*(yMidDots[3][i]-6*(TOLERANCE-TOLERANCE)+3*polynoms[5][i]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
polynoms[7][i]=16*(yMidDots[3][i]-6*(TOLERANCE-TOLERANCE)+3*polynoms[5][i]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=-5;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
realEigenvalues[begin]=0.5*(lambda+Math.sqrt(lambda*s-4*qMax*qMax-eMin));
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
realEigenvalues[begin+1]=qMax*qMax-eMin/0.5*(lambda+Math.sqrt(lambda*s-4*qMax*qMax-eMin));
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
realEigenvalues[oneFourthCount]=TOLERANCE;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
realEigenvalues[oneFourthCount+1]=TOLERANCE;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
realEigenvalues[oneFourthCount+2]=TOLERANCE;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(work,0,work,0,begin);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Arrays.sort(work);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(work[begin/2])<TOLERANCE){
break;
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++n;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
scaled=new double[n];
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(imagEigenvalues,begin,work,0,oneFourthCount);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lambda>=n){
return work[oneFourthCount-1];
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=n*Math.sqrt(lambda+TOLERANCE)-0.5;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=TOLERANCE<0?Math.floor(x):Math.ceil(x);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=-nextExponential(1.0)-(n*n/2)+lambda;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<np;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
s=0.5*(TOLERANCE+TOLERANCE*(lambda-minPivot)/1L<<(n-1));
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
return TOLERANCE;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
s=0.5*(TOLERANCE+TOLERANCE*(lambda-minPivot)/1L<<(n-1));
return TOLERANCE;

for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isStrictlyIncreasing(work)){
throw MathRuntimeException.createIllegalArgumentException("knot values must be strictly increasing");
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.n=knots.length-1;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.work=new double[n+1];
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(work,0,this.knots,0,n+1);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chooseLeft=n>0;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(n)==begin){
return ;
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.sqrt(TOLERANCE*b2);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==1){
realEigenvalues[0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.oneFourthCount=n;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lambda=-TOLERANCE*work[oneFourthCount]+TOLERANCE*qtbpj;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
realEigenvalues[oneFourthCount*n+begin]=TOLERANCE*TOLERANCE+TOLERANCE*imagEigenvalues[k];
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isNonSingular()){
throw new SingularMatrixException();
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin=Math.min(dMin,dN2);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
eMin=Math.min(eMin,work[oneFourthCount]);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==0){
throw new MathException("Loess expects at least 1 point");
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkAllFiniteReal(work,"all abscissae must be finite real numbers, but {0}-th is {1}");
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkAllFiniteReal(work,"all ordinatae must be finite real numbers, but {0}-th is {1}");
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Arrays.fill(new double[n],1);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((int)(TOLERANCE*n)<2){
throw new MathException("the bandwidth must be large enough to "+"accomodate at least 2 points. There are {0} ",n,2.0/n,TOLERANCE);
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin=Math.min(dMin,dN);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[oneFourthCount+2]=dN;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*begin-n-1]=eMin;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[0]=0.0;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n>>1]=2.0*realEigenvalues[n>>1];
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkBinomial(n,i);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((i==1)||(k==n-1)){
return n;
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>n/2)return binomialCoefficient(n,n-k);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
test(work,begin,n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==0){
return Double.NaN;
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==1){
return work[begin];
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(oneFourthCount+n-1);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
t=work[k-7]+(lambda+work[k-5]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
work[k-3]*=work[k-7]/0.5*((work[i-7]-work[k-3])+work[k-5]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
work[k-7]=0.5*((work[i-7]-work[k-3])+work[k-5]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
t=work[k-7]+(lambda+work[k-5]);
work[k-3]*=work[k-7]/0.5*((work[i-7]-work[k-3])+work[k-5]);
work[k-7]=0.5*((work[i-7]-work[k-3])+work[k-5]);

for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
t=work[k-7]+(lambda+work[k-5]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
work[k-3]*=work[k-7]/0.5*((work[i-7]-work[k-3])+work[k-5]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
work[k-7]=0.5*((work[i-7]-work[k-3])+work[k-5]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
t=work[k-7]+(lambda+work[k-5]);
work[k-3]*=work[k-7]/0.5*((work[i-7]-work[k-3])+work[k-5]);
work[k-7]=0.5*((work[i-7]-work[k-3])+work[k-5]);

for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
getVT().walkInOptimizedOrder(new DefaultRealMatrixPreservingVisitor(){
  /** 
 * {@inheritDoc} 
 */
  @Override public void visit(  final int row,  final int column,  final double value){
    data[row][column]=value / singularValues[row];
  }
}
,0,oneFourthCount-1,0,n-1);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i|=mask>>1;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i|=mask>>2;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i|=mask>>4;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i|=mask>>8;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=(range[1]-range[0])*MathUtils.EPSILON+2*minPivot;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
flipIfWarranted(n,2);
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=0;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==1){
return new double[]{0};
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i<0){
i=-i-2;
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=polynomials.length){
i--;
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(oneFourthCount==0){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) must be positive",k);
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
oneFourthCount=begin;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
System.arraycopy(realEigenvalues,0,imagEigenvalues,0,n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
Arrays.sort(imagEigenvalues);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++oneFourthCount;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<k;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<k;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<k;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<k;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE==0.0){
return TOLERANCE;
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(!isNonSingular()){
throw new SingularMatrixException();
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
TOLERANCE=TOLERANCE;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
TOLERANCE=x1+lambda;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=TOLERANCE-TOLERANCE;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
oneFourthCount++;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(realEigenvalues[oneFourthCount]-xval[oneFourthCount]>xval[oneFourthCount]-xval[i]){
oneFourthCount=ileft;
}else {
edge=iright;
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((TOLERANCE>0)==(TOLERANCE>0)){
TOLERANCE=TOLERANCE;
y2=TOLERANCE;
TOLERANCE=TOLERANCE-x0;
TOLERANCE=delta;
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[oneFourthCount]=TOLERANCE*TOLERANCE+lambda-TOLERANCE*i;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
realEigenvalues[oneFourthCount]=Math.abs(imagEigenvalues[i]-work[i]);
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
xNormSqr=0;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
secondary[k]=(imagEigenvalues[i+1]>0)?-Math.sqrt(TOLERANCE):Math.sqrt(xNormSqr);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
if((imagEigenvalues[i+1]>0)?-Math.sqrt(TOLERANCE):Math.sqrt(xNormSqr)!=0.0){
hK[k+1]-=(imagEigenvalues[i+1]>0)?-Math.sqrt(TOLERANCE):Math.sqrt(xNormSqr);
for(int i+1=i+1;i+1<begin;++i+1){
double TOLERANCE=0;
for(int i+1=i+1;i+1<n;++i+1){
beta-=hI[j]*hK[j];
}
beta/=(imagEigenvalues[i+1]>0)?-Math.sqrt(TOLERANCE):Math.sqrt(xNormSqr)*hK[k+1];
for(int i+1=i+1;i+1<n;++i+1){
hI[j]-=TOLERANCE*hK[j];
}
}
}
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
xNormSqr=0;
secondary[k]=(imagEigenvalues[i+1]>0)?-Math.sqrt(TOLERANCE):Math.sqrt(xNormSqr);
if((imagEigenvalues[i+1]>0)?-Math.sqrt(TOLERANCE):Math.sqrt(xNormSqr)!=0.0){
hK[k+1]-=(imagEigenvalues[i+1]>0)?-Math.sqrt(TOLERANCE):Math.sqrt(xNormSqr);
for(int i+1=i+1;i+1<begin;++i+1){
double TOLERANCE=0;
for(int i+1=i+1;i+1<n;++i+1){
beta-=hI[j]*hK[j];
}
beta/=(imagEigenvalues[i+1]>0)?-Math.sqrt(TOLERANCE):Math.sqrt(xNormSqr)*hK[k+1];
for(int i+1=i+1;i+1<n;++i+1){
hI[j]-=TOLERANCE*hK[j];
}
}
}

for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
xNormSqr=0;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
secondary[k]=(imagEigenvalues[i+1]>0)?-Math.sqrt(TOLERANCE):Math.sqrt(xNormSqr);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
if((imagEigenvalues[i+1]>0)?-Math.sqrt(TOLERANCE):Math.sqrt(xNormSqr)!=0.0){
hK[k+1]-=(imagEigenvalues[i+1]>0)?-Math.sqrt(TOLERANCE):Math.sqrt(xNormSqr);
for(int i+1=i+1;i+1<begin;++i+1){
double TOLERANCE=0;
for(int i+1=i+1;i+1<n;++i+1){
beta-=hI[j]*hK[j];
}
beta/=(imagEigenvalues[i+1]>0)?-Math.sqrt(TOLERANCE):Math.sqrt(xNormSqr)*hK[k+1];
for(int i+1=i+1;i+1<n;++i+1){
hI[j]-=TOLERANCE*hK[j];
}
}
}
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
xNormSqr=0;
secondary[k]=(imagEigenvalues[i+1]>0)?-Math.sqrt(TOLERANCE):Math.sqrt(xNormSqr);
if((imagEigenvalues[i+1]>0)?-Math.sqrt(TOLERANCE):Math.sqrt(xNormSqr)!=0.0){
hK[k+1]-=(imagEigenvalues[i+1]>0)?-Math.sqrt(TOLERANCE):Math.sqrt(xNormSqr);
for(int i+1=i+1;i+1<begin;++i+1){
double TOLERANCE=0;
for(int i+1=i+1;i+1<n;++i+1){
beta-=hI[j]*hK[j];
}
beta/=(imagEigenvalues[i+1]>0)?-Math.sqrt(TOLERANCE):Math.sqrt(xNormSqr)*hK[k+1];
for(int i+1=i+1;i+1<n;++i+1){
hI[j]-=TOLERANCE*hK[j];
}
}
}

for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=begin;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=begin;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=begin;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=begin;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
interpolatedState[i]+=lambda*TOLERANCE;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
interpolatedState[i]+=lambda*TOLERANCE;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=begin;i<begin;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=begin;i<begin;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<begin;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=begin;i<begin;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=begin;i<begin;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<begin;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<begin;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<length;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
accum3/=(TOLERANCE-(TOLERANCE*accum2/n))/(length-1)*Math.sqrt((TOLERANCE-(TOLERANCE*accum2/n))/(length-1));
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
skew=(n/((n-1)*(n-2)))*TOLERANCE;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
accum3/=(TOLERANCE-(TOLERANCE*accum2/n))/(length-1)*Math.sqrt((TOLERANCE-(TOLERANCE*accum2/n))/(length-1));
skew=(n/((n-1)*(n-2)))*TOLERANCE;

for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
accum3/=(TOLERANCE-(TOLERANCE*accum2/n))/(length-1)*Math.sqrt((TOLERANCE-(TOLERANCE*accum2/n))/(length-1));
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
skew=(n/((n-1)*(n-2)))*TOLERANCE;
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
accum3/=(TOLERANCE-(TOLERANCE*accum2/n))/(length-1)*Math.sqrt((TOLERANCE-(TOLERANCE*accum2/n))/(length-1));
skew=(n/((n-1)*(n-2)))*TOLERANCE;

for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<mu;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<mu;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<mu;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<mu;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
polynoms[7][i]=16*(yMidDots[3][i]-6*(TOLERANCE-TOLERANCE)+3*polynoms[5][i]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
polynoms[7][i]=16*(yMidDots[3][i]-6*(TOLERANCE-TOLERANCE)+3*polynoms[5][i]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.oneFourthCount=n;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chooseLeft=n>0;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(n)==begin){
return ;
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==1){
realEigenvalues[0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isNonSingular()){
throw new SingularMatrixException();
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
scaled=new double[n];
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((int)(TOLERANCE*n)<2){
throw new MathException("the bandwidth must be large enough to "+"accomodate at least 2 points. There are {0} ",n,2.0/n,TOLERANCE);
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(knots.length-1!=polynomials.length){
throw MathRuntimeException.createIllegalArgumentException("number of polynomial interpolants must match the number of segments ({0} != {1} - 1)",polynomials.length,knots.length);
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isStrictlyIncreasing(work)){
throw MathRuntimeException.createIllegalArgumentException("knot values must be strictly increasing");
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.n=knots.length-1;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.work=new double[n+1];
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(work,0,this.knots,0,n+1);
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
FastFourierTransformer.verifyDataSet(work);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(work[0]!=0.0){
throw MathRuntimeException.createIllegalArgumentException("first element is not 0: {0}",f[0]);
}
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
realEigenvalues[0]=0.0;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
resetEvaluations();
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work!=work){
System.arraycopy(y0,0,y,0,n);
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
resetEvaluations();
if(work!=work){
System.arraycopy(y0,0,y,0,n);
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Arrays.fill(new double[n],1);
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
System.arraycopy(imagEigenvalues,begin,work,0,n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
Arrays.sort(work);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lambda>=n){
return work[n-1];
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
checkIndex(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
getVT().walkInOptimizedOrder(new DefaultRealMatrixPreservingVisitor(){
  /** 
 * {@inheritDoc} 
 */
  @Override public void visit(  final int row,  final int column,  final double value){
    data[row][column]=value / singularValues[row];
  }
}
,0,i-1,0,n-1);
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
test(work,begin,oneFourthCount);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(oneFourthCount==0){
return Double.NaN;
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(oneFourthCount==1){
return work[begin];
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<21){
return factorial(n);
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i|=mask>>1;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i|=mask>>2;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i|=mask>>4;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i|=mask>>8;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i|=mask>>16;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
realEigenvalues[begin]=0.5*(work[begin]+lambda+Math.sqrt(work[begin]+lambda*s-4*work[begin]*lambda-squaredSecondary[begin]));
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
realEigenvalues[begin+1]=work[begin]*lambda-squaredSecondary[begin]/0.5*(work[begin]+lambda+Math.sqrt(work[begin]+lambda*s-4*work[begin]*lambda-squaredSecondary[begin]));
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
TOLERANCE=work[oneFourthCount-13]/work[nn-15];
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
TOLERANCE=a2+TOLERANCE;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE<TOLERANCE){
 final double TOLERANCE=z0;
z0=z1;
z1=t;
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
realEigenvalues[oneFourthCount]=TOLERANCE;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
realEigenvalues[oneFourthCount+1]=TOLERANCE;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
realEigenvalues[oneFourthCount+2]=TOLERANCE;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=-TOLERANCE*work[oneFourthCount]+TOLERANCE*qtbpj;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[oneFourthCount]=TOLERANCE*work[oneFourthCount]+TOLERANCE*TOLERANCE;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
realEigenvalues[oneFourthCount*begin+oneFourthCount]=TOLERANCE*lambda+TOLERANCE*imagEigenvalues[k];
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=-TOLERANCE*work[oneFourthCount]+TOLERANCE*qtbpj;
work[oneFourthCount]=TOLERANCE*work[oneFourthCount]+TOLERANCE*TOLERANCE;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
tType=-5;
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=end;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=end;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=pingPong;i<pingPong;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=pingPong;i<pingPong;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<start;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<start;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<pingPong;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=pingPong;i<pingPong;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=pingPong;i<pingPong;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=end;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=pingPong;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<start;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<pingPong;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=end;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=pingPong;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<start;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<pingPong;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.sqrt(TOLERANCE*b2);
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[begin-7]+work[nn-9]-Math.sqrt(work[nn-11])*Math.sqrt(work[nn-9])-dMin2/(1+TOLERANCE*b2)>0.0&&gap2>TOLERANCE*dMin2/(1+TOLERANCE*b2)){
tau=Math.max(TOLERANCE,a2*(1-TOLERANCE*a2));
}else {
tau=Math.max(s,a2*(1-cnst2*b2));
}
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin=Math.min(dMin,dN2);
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
eMin=Math.min(eMin,work[oneFourthCount]);
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin=Math.min(dMin,dN);
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[oneFourthCount+2]=dN;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*end-begin-1]=eMin;
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
eMin=Math.min(eMin,work[oneFourthCount-1]);
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
t=work[k-7]+(work[i-3]*(work[k-5]/0.5*((work[i-7]-work[k-3])+work[k-5]))+work[k-5]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
work[k-3]*=work[k-7]/0.5*((work[i-7]-work[k-3])+work[k-5]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
work[k-7]=0.5*((work[i-7]-work[k-3])+work[k-5]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
t=work[k-7]+(work[i-3]*(work[k-5]/0.5*((work[i-7]-work[k-3])+work[k-5]))+work[k-5]);
work[k-3]*=work[k-7]/0.5*((work[i-7]-work[k-3])+work[k-5]);
work[k-7]=0.5*((work[i-7]-work[k-3])+work[k-5]);

for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
t=work[k-7]+(work[i-3]*(work[k-5]/0.5*((work[i-7]-work[k-3])+work[k-5]))+work[k-5]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
work[k-3]*=work[k-7]/0.5*((work[i-7]-work[k-3])+work[k-5]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
work[k-7]=0.5*((work[i-7]-work[k-3])+work[k-5]);
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
t=work[k-7]+(work[i-3]*(work[k-5]/0.5*((work[i-7]-work[k-3])+work[k-5]))+work[k-5]);
work[k-3]*=work[k-7]/0.5*((work[i-7]-work[k-3])+work[k-5]);
work[k-7]=0.5*((work[i-7]-work[k-3])+work[k-5]);

for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 2 :

ldlTDecomposition(lambda,begin,n);
processGeneralBlock(n);
if(chooseLeft){
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda+work[4*i];
}
}else {
for(int i=0;i<n;++i){
realEigenvalues[begin+i]=lambda-work[4*i];
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,826
Find no block!
org.apache.commons.math.linear.EigenDecompositionImpl,827
========
if(f.length==1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fourI==1){
new double[f.length][0]=0.5*(work[0]+f[1]);
F[0]=new Complex(work[0],0.0);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[0]!=0.0){
throw MathRuntimeException.createIllegalArgumentException("first element is not 0: {0}",f[0]);
}
if(fourI==1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fourI==1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!FastFourierTransformer.isPowerOf2(fourI)){
throw MathRuntimeException.createIllegalArgumentException("{0} is not a power of 2 plus one",f.length);
}
if(fourI==1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(d.length==1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[n-4]>work[np-2]){
return ;
}
if(fourI==1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=work[n-4]/work[np-2];
if(fourI==1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(coefficients.length==1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==0){
throw MathRuntimeException.createIllegalArgumentException("matrix must have at least one column");
}
if(fourI==1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fourI!=1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length==1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(array.length!=1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(2*n==1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fourI==1){
return new double[]{0};
}
if(fourI==1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(xval.length!=yval.length){
throw new MathException("Loess expects the abscissa and ordinate arrays "+"to be of the same size, ",xval.length,yval.length);
}
if(fourI==1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(data.length==1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>0){
throw MathRuntimeException.createIllegalStateException("first {0} rows are not initialized yet",row);
}
if(fourI==1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fourI==1){
new double[f.length][0]=0.5*(work[0]+f[1]);
setResult(length,n);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=Math.max((int)(Math.min(4,Math.pow(TOLERANCE/TOLERANCE,0.5/abscissas.length))*n),n+1);
if(fourI==1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(f[n].length==1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(f[n].length!=1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(refI.length==1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(v.length==1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b.length==1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(v.length!=1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subRow.length==1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b.length!=1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(data.length!=1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(jacobian.length==1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(objective.length==1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isNonSingular()){
throw new SingularMatrixException();
}
if(fourI==1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fourI==MULTIPLICATIVE_MODE){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(work,0,new double[n],0,internalArray.length);
if(fourI==1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work=new double[n];
if(fourI==1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.length);
if(fourI==1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(mean.length==1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(xvalI.length==1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(subRow.length!=1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,828
org.apache.commons.math.linear.EigenDecompositionImpl,829
org.apache.commons.math.linear.EigenDecompositionImpl,830
org.apache.commons.math.linear.EigenDecompositionImpl,833
========
for(int i=0;i<=n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
pingPong--;
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
lower=Math.min(ei,work[pingPong+pingPong]);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=ei;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work=new double[i];
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;j<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
fourI++;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
z*=-work[6*i+2];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
eigenvector[i]=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
z*=-work[6*i+2];
eigenvector[i]=ei;

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<length-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
work[fourI]=Math.abs(sumOffDiag);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<binCount-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
z*=-work[6*i-1];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
z*=-work[6*i-1];
eigenvector[i]=ei;

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i++;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;k<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
iterationCount=i;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=2*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
yCurrent[i]=yPrevious[twoI-n]-yPrevious[twoI-n+1];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<nvars-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=fourI;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<begin-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((i+i)>internalArray.length){
expandTo(startIndex+i);
}
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
pingPong=i;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
v[i]=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
ak2=TOLERANCE;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*medianResidual;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final double fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
if(work[i]/(6*TOLERANCE)>=1){
robustnessWeights[i]=0;
}else {
 final double fourI=1-work[i]/(6*TOLERANCE)*arg;
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
gradient[i]=sumOffDiag;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN2=work[fourI];
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=ei;i<begin-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
yCurrent[i]=yPrevious[twoI]+yPrevious[twoI+1];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[0]=0.0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=Math.max((int)(fourI*n),n+1);
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sumOffDiag=ei;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;length<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setSeed(19650218);
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
index+=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
work1[i]+=jacobian[index]*TOLERANCE;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<=n-1;++i){
index+=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sumOffDiag=fourI-TOLERANCE;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
sumExpected+=expected[i];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
countSum2+=observed2[i];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<m-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
sixI+=6;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=ei;i<=n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<pos-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<index-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
lmDir[permutation[i]]-=TOLERANCE*jacobian[index];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
if(true){
throw MathRuntimeException.createIllegalArgumentException("equals vertices {0} and {1} in simplex configuration",i,i);
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
x2=TOLERANCE;
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
y2=TOLERANCE;
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
x2=TOLERANCE;
y2=TOLERANCE;

sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;i<n-1;++i){
index+=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
y[i]-=TOLERANCE*jacobian[index];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
numElements-=i;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=ei;j<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
pingPong++;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*xMean;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
result+=(sumOffDiag*ei-fourI)/(i+1);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
z[j]+=imagEigenvalues[i]*TOLERANCE;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=fourI;j<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
dev=values[i]-TOLERANCE;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
outBlock[outIndex++]=block[i*jWidth+jColumn];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
block[i*jWidth+jColumn]=mBlock[mIndex++];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;i<begin-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
if(Double.isInfinite(work[i])){
throw MathRuntimeException.createArithmeticException("Array contains an infinite element, {0} at index {1}",work[i],i);
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;i<n-1;++i){
dev=values[i]-TOLERANCE;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<begin-1;++i){
dev=values[i]-TOLERANCE;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;i<begin-1;++i){
dev=values[i]-TOLERANCE;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
if(eMin>=4*qMax){
diagMin=Math.min(eMin,work[i+4]);
offDiagMax=Math.max(qMax,work[i+2]);
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
diagMax=Math.max(ei,work[i]+work[i+2]);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
offDiagMin=Math.min(eMin,work[i+2]);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
if(eMin>=4*qMax){
diagMin=Math.min(eMin,work[i+4]);
offDiagMax=Math.max(qMax,work[i+2]);
}
diagMax=Math.max(ei,work[i]+work[i+2]);
offDiagMin=Math.min(eMin,work[i+2]);

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
work[j]=(work[j]-sumOffDiag)/lmDiag[j];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i<0){
i=-i-2;
}
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=polynomials.length){
i--;
}
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
midPoint+=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
c[i]=y[i];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
d[i]=y[i];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
c[i]=y[i];
d[i]=y[i];

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;j<n-1;++i){
 final int fourI=4*j;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*j;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
c=polynoms[j][i]+TOLERANCE*fourI;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;j<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;i<n-1;++i){
 final double fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;j<n-1;++i){
 final double fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;j<n-1;++i){
 final double fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues[n-1]=imagEigenvalues[n];
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n-1]+=fourI*imagEigenvalues[n-1];
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues=imagEigenvalues;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;j<=n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
mIY=optimaValues[i];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
mIY=Double.NaN;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
residuals[i]=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
cost+=residualsWeights[i]*ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
residuals[i]=ei;
cost+=residualsWeights[i]*ei;

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
a[i]=divdiff[0];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
x[i]=sumOffDiag+fourI;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
x[n-i]=sumOffDiag-fourI;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
x[i]=sumOffDiag+fourI;
x[n-i]=sumOffDiag-fourI;

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n>>1]=2.0*work[n>>1];
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[0]=0.0;
for(int i=0;i<n-1;++i){
 final double fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues[0]=imagEigenvalues[n];
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
polynoms[j+4][i]=16*(yMidDots[j][i]+sumOffDiag*polynoms[j+2][i]-fourI*polynoms[j][i]);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final double fourI=4*j;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;j<n-1;++i){
 final double fourI=4*j;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
if(Double.isNaN(work[i])){
throw MathRuntimeException.createIllegalArgumentException("NaN weight at index {0}",i);
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
if(Double.isInfinite(work[i])){
throw MathRuntimeException.createIllegalArgumentException("Infinite weight at index {0}",i);
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
if(weights[i]<0){
throw MathRuntimeException.createIllegalArgumentException("negative weight {0} at index {1} ",work[i],i);
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
if(Double.isNaN(work[i])){
throw MathRuntimeException.createIllegalArgumentException("NaN weight at index {0}",i);
}
if(Double.isInfinite(work[i])){
throw MathRuntimeException.createIllegalArgumentException("Infinite weight at index {0}",i);
}
if(weights[i]<0){
throw MathRuntimeException.createIllegalArgumentException("negative weight {0} at index {1} ",work[i],i);
}

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<4*n-11;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n0-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*yScale;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*n;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[6*pingPong+1]=imagEigenvalues[nM1]+TOLERANCE;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[6*pingPong]=TOLERANCE;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*sin;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
lmDiag[i]=-TOLERANCE*sumOffDiag+TOLERANCE*lmDiag[i];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
jacobian[i][pk]=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
lmDiag[i]=-TOLERANCE*sumOffDiag+TOLERANCE*lmDiag[i];
jacobian[i][pk]=ei;

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=fourI;i<n-1;++i){
 final double fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*ratio;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
eCurrent=Math.abs(work[i]);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
work[lowerStart+i]=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
lowerSpectra=Math.min(lowerSpectra,ei);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
work[upperStart+i]=main[i]+fourI+eMin;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
upperSpectra=Math.max(upperSpectra,main[i]+fourI+eMin);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
eCurrent=Math.abs(work[i]);
work[lowerStart+i]=ei;
lowerSpectra=Math.min(lowerSpectra,ei);
work[upperStart+i]=main[i]+fourI+eMin;
upperSpectra=Math.max(upperSpectra,main[i]+fourI+eMin);

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues[i]=TOLERANCE*TOLERANCE+fourI;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i]=Math.abs(imagEigenvalues[i]-imagEigenvalues[i]);
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*z;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
if(imagEigenvalues[pingPong]-x[i+j]==0.0){
throw new DuplicateSampleAbscissaException(imagEigenvalues[i],i,i+pingPong);
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
c[j]=fourI*(imagEigenvalues[pingPong+1]-work[j])/imagEigenvalues[pingPong]-x[i+j];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
d[j]=sumOffDiag*(imagEigenvalues[pingPong+1]-work[j])/imagEigenvalues[pingPong]-x[i+j];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
if(imagEigenvalues[pingPong]-x[i+j]==0.0){
throw new DuplicateSampleAbscissaException(imagEigenvalues[i],i,i+pingPong);
}
c[j]=fourI*(imagEigenvalues[pingPong+1]-work[j])/imagEigenvalues[pingPong]-x[i+j];
d[j]=sumOffDiag*(imagEigenvalues[pingPong+1]-work[j])/imagEigenvalues[pingPong]-x[i+j];

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
jacobian[i*cols+pk]=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
lmDiag[i]=-TOLERANCE*sumOffDiag+TOLERANCE*lmDiag[i];
jacobian[i*cols+pk]=ei;

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=fourI;i<n-1;++i){
 final int fourI=4*sin;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=fourI;i<n-1;++i){
lmDiag[i]=-TOLERANCE*sumOffDiag+TOLERANCE*lmDiag[i];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final double fourI=4*sin;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
lmDiag[i]=-TOLERANCE*sumOffDiag+TOLERANCE*lmDiag[i];
 final int fourI=4*sin;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
lmDiag[i]=-TOLERANCE*sumOffDiag+TOLERANCE*lmDiag[i];
 final double fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=fourI;i<n-1;++i){
 final double fourI=4*sin;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=fourI;i<n-1;++i){
lmDiag[i]=-TOLERANCE*sumOffDiag+TOLERANCE*lmDiag[i];
 final int fourI=4*sin;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=fourI;i<n-1;++i){
lmDiag[i]=-TOLERANCE*sumOffDiag+TOLERANCE*lmDiag[i];
 final double fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
lmDiag[i]=-TOLERANCE*sumOffDiag+TOLERANCE*lmDiag[i];
 final double fourI=4*sin;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=fourI;i<n-1;++i){
lmDiag[i]=-TOLERANCE*sumOffDiag+TOLERANCE*lmDiag[i];
 final double fourI=4*sin;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
x[i]=fourI-Math.sin(i*Math.PI/n)*(imagEigenvalues[i]-f[n-i]);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
x[n-i]=fourI+Math.sin(i*Math.PI/n)*(imagEigenvalues[i]-f[n-i]);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
x[i]=fourI-Math.sin(i*Math.PI/n)*(imagEigenvalues[i]-f[n-i]);
x[n-i]=fourI+Math.sin(i*Math.PI/n)*(imagEigenvalues[i]-f[n-i]);

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n>>1]=imagEigenvalues[n>>1];
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
if(i>=n){
 final double Math.abs(ei-sumOffDiag)=Math.abs(ei-sumOffDiag);
 final double fourI=TOLERANCE*(Math.abs(sumOffDiag)+Math.abs(ei));
if((Math.abs(ei-sumOffDiag)<=fourI)||(Math.abs(ei-sumOffDiag)<=TOLERANCE)){
setResult(ei,i);
return TOLERANCE;
}
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
if(Double.isInfinite(TOLERANCE)||Double.isNaN(TOLERANCE)){
throw new OptimizationException("unable to perform Q.R decomposition on the {0}x{1} jacobian matrix",pingPong,pingPong);
}
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
if(i>=n){
 final double Math.abs((4*ei-sumOffDiag)/3.0-TOLERANCE)=Math.abs((4*ei-sumOffDiag)/3.0-TOLERANCE);
 final double fourI=TOLERANCE*(Math.abs(TOLERANCE)+Math.abs((4*ei-sumOffDiag)/3.0));
if((Math.abs((4*ei-sumOffDiag)/3.0-TOLERANCE)<=fourI)||(Math.abs((4*ei-sumOffDiag)/3.0-TOLERANCE)<=TOLERANCE)){
setResult((4*ei-sumOffDiag)/3.0,i);
return TOLERANCE;
}
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
olds=(4*ei-sumOffDiag)/3.0;
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
if(i>=n){
 final double Math.abs((4*ei-sumOffDiag)/3.0-TOLERANCE)=Math.abs((4*ei-sumOffDiag)/3.0-TOLERANCE);
 final double fourI=TOLERANCE*(Math.abs(TOLERANCE)+Math.abs((4*ei-sumOffDiag)/3.0));
if((Math.abs((4*ei-sumOffDiag)/3.0-TOLERANCE)<=fourI)||(Math.abs((4*ei-sumOffDiag)/3.0-TOLERANCE)<=TOLERANCE)){
setResult((4*ei-sumOffDiag)/3.0,i);
return TOLERANCE;
}
}
olds=(4*ei-sumOffDiag)/3.0;

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
minRatioPositions=new ArrayList<Integer>();
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
work[j+2]=work[i]*ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
d*=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
work[j+2]=work[i]*ei;
d*=ei;

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*scalRelativeTolerance;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
after[i]+=previous[i]+scaled[i];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final double fourI=4*yScale;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*sigma;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
cachedVt.setEntry(i,i,1.0);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
if(ltI[i]<TOLERANCE){
throw new NotPositiveDefiniteMatrixException();
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
ltI[i]=Math.sqrt(imagEigenvalues[i]);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
if(ltI[i]<TOLERANCE){
throw new NotPositiveDefiniteMatrixException();
}
ltI[i]=Math.sqrt(imagEigenvalues[i]);

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=ei;k<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
flipIfWarranted(n,2);
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ei=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sumOffDiag=0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;minor<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
x+=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(imagEigenvalues,0,work,0,n);
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Arrays.sort(work);
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=n-2*fourI;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sumOffDiag=work[i-2];
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ei=dN1;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fourI==0){
throw new MathException("Loess expects at least 1 point");
}
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ei=n>0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==n){
return ;
}
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isStrictlyIncreasing(work)){
throw MathRuntimeException.createIllegalArgumentException("knot values must be strictly increasing");
}
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.i=knots.length-1;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.work=new double[i+1];
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(work,0,this.knots,0,i+1);
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.pingPong=n;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=0.0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ei=work[i-5]/work[nn-7];
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=i-9;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;i<n-pingPong;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i4<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<start-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-pingPong;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;i4<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;i<start-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=fourI;i<n-pingPong;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i4<n-pingPong;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<start-pingPong;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=fourI;i4<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=fourI;i<start-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i4<start-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;i4<n-pingPong;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;i<start-pingPong;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;i4<start-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=fourI;i4<n-pingPong;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=fourI;i<start-pingPong;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i4<start-pingPong;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=fourI;i4<start-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;i4<start-pingPong;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=fourI;i4<start-pingPong;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fourI==1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i|=mask>>1;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i|=mask>>2;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sumOffDiag=TOLERANCE;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=b2*(work[i]/work[i4-2]);
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=a2+TOLERANCE;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(TOLERANCE,sumOffDiag)<TOLERANCE||TOLERANCE<a2){
break;
}
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
work[j4-2]=dN2+work[j4-1];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
d=dN2*work[4*n+3+1]/work[j4-2]-tau;
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
dMin=Math.min(ei,dN2);
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
work[j4]=work[j4-1]*work[4*n+3+1]/work[j4-2];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
work[j4-2]=dN2+work[j4-1];
d=dN2*work[4*n+3+1]/work[j4-2]-tau;
dMin=Math.min(ei,dN2);
work[j4]=work[j4-1]*work[4*n+3+1]/work[j4-2];

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
work[j4-3]=dN2+work[j4];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
d=dN2*work[4*n+3+2]/work[j4-3]-tau;
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
work[j4-1]=work[j4]*work[4*n+3+2]/work[j4-3];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
work[j4-3]=dN2+work[j4];
d=dN2*work[4*n+3+2]/work[j4-3]-tau;
dMin=Math.min(ei,dN2);
work[j4-1]=work[j4]*work[4*n+3+2]/work[j4-3];

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;row<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
dMin2=Math.min(ei,work[i-1]);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
work[l-1]=Math.min(work[i-1],Math.min(work[3+pingPong],work[7+pingPong]));
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
work[l-2*pingPong]=Math.min(work[i-2*pingPong],Math.min(work[6+pingPong],work[6+pingPong]));
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
qMax=Math.max(qMax,Math.max(work[3+pingPong],work[7+pingPong]));
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
dMin2=Math.min(ei,work[i-1]);
work[l-1]=Math.min(work[i-1],Math.min(work[3+pingPong],work[7+pingPong]));
work[l-2*pingPong]=Math.min(work[i-2*pingPong],Math.min(work[6+pingPong],work[6+pingPong]));
qMax=Math.max(qMax,Math.max(work[3+pingPong],work[7+pingPong]));

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-fourI;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
if(TOLERANCE==0.0){
break;
}
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
if(work[i4]>work[i4-2]){
return ;
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
b2=TOLERANCE*(work[i4]/work[i4-2]);
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
if(100*Math.max(TOLERANCE,sumOffDiag)<TOLERANCE){
break;
}
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
if(TOLERANCE==0.0){
break;
}
if(work[i4]>work[i4-2]){
return ;
}
b2=TOLERANCE*(work[i4]/work[i4-2]);
if(100*Math.max(TOLERANCE,sumOffDiag)<TOLERANCE){
break;
}

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ei=work[i-4]/work[np-2];
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sumOffDiag=work[n-9]/work[nn-11];
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=n-13;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
cachedVt=MatrixUtils.createRealMatrix(pingPong,m);
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=pingPong;k<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
n+=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
innerPart+=ei;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;k<n-1;++i){
 final double fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isNonSingular()){
throw new SingularMatrixException();
}
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
l+=4;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
n+=pingPong;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
l+=4;
n+=pingPong;

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;col<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues[n]=0.0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new double[n+1][n]=0.0;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fourI==1){
imagEigenvalues[0]=0.0;
return transformed;
}
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
yCurrent[i]=yPrevious[twoI]+yPrevious[twoI+1];
 final int fourI=2*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
l+=4;
n+=pingPong;
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
l+=4;
l+=4;
n+=pingPong;

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
n+=pingPong;
l+=4;
n+=pingPong;

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
l+=4;
n+=pingPong;
l+=4;
n+=pingPong;

 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=work[n-7]+(TOLERANCE+work[k-5]);
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n-3]*=work[k-7]/TOLERANCE;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n-7]=TOLERANCE;
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkBinomial(n,i);
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((i==1)||(k==n-1)){
return n;
}
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkBinomial(n,i);
if((i==1)||(k==n-1)){
return n;
}
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=ei;i<n-1;++i){
 final int fourI=2*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=ei;i<n-1;++i){
yCurrent[i]=yPrevious[twoI-n]-yPrevious[twoI-n+1];
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
yCurrent[i]=yPrevious[twoI-n]-yPrevious[twoI-n+1];
 final int fourI=2*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=ei;i<n-1;++i){
yCurrent[i]=yPrevious[twoI-n]-yPrevious[twoI-n+1];
 final int fourI=2*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
x0+=ei;
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
getVT().walkInOptimizedOrder(new DefaultRealMatrixPreservingVisitor(){
  /** 
 * {@inheritDoc} 
 */
  @Override public void visit(  final int row,  final int column,  final double value){
    data[row][column]=value / singularValues[row];
  }
}
,0,i-1,0,n-1);
for(int i=0;i<n-1;++i){
 final int fourI=4*i;
 final double ei=work[fourI+2];
sumOffDiag+=ei;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,839
Find no block!
org.apache.commons.math.linear.EigenDecompositionImpl,842
Find no block!
org.apache.commons.math.linear.EigenDecompositionImpl,845
Find no block!
org.apache.commons.math.linear.EigenDecompositionImpl,846
Find no block!
org.apache.commons.math.linear.EigenDecompositionImpl,847
Find no block!
org.apache.commons.math.linear.EigenDecompositionImpl,848
org.apache.commons.math.linear.EigenDecompositionImpl,849
Find no block!
org.apache.commons.math.linear.EigenDecompositionImpl,850
org.apache.commons.math.linear.EigenDecompositionImpl,851
Find no block!
org.apache.commons.math.linear.EigenDecompositionImpl,854
========
tType=0;
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin1=0;
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==1){
return new double[]{0};
}
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sumOffDiag!=0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(refI.length==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(data.length==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length!=0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(xval.length!=yval.length){
throw new MathException("Loess expects the abscissa and ordinate arrays "+"to be of the same size, ",xval.length,yval.length);
}
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[0]!=0.0){
throw MathRuntimeException.createIllegalArgumentException("first element is not 0: {0}",f[0]);
}
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b.length==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sumOffDiag==pingPong){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isNonSingular()){
throw new SingularMatrixException();
}
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n==pingPong)||(k==0)){
return 0;
}
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==1)||(k==n-1)){
return Math.log(n);
}
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n==pingPong)||(k==0)){
return 1;
}
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==1)||(k==n-1)){
return n;
}
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n==pingPong)||(k==0)){
return 1.0;
}
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(work,0,work,0,n);
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Arrays.sort(work);
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
if(pingPong>n){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) exceeds n ({1})",k,n);
}
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
if(pingPong==0){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) must be positive",k);
}
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(v==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
tau=(work[1]-range[0])*MathUtils.EPSILON+2*minPivot;
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
processGeneralBlock(n);
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=Math.max((int)(Math.min(4,Math.pow(TOLERANCE/TOLERANCE,0.5/abscissas.length))*n),n+1);
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=TOLERANCE;
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sumOffDiag==pingPong+n){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
checkIndex(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sumOffDiag==pingPong){
return ;
}
flipIfWarranted(n,2);
checkIndex(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sumOffDiag==pingPong+n){
return ;
}
flipIfWarranted(n,2);
checkIndex(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=0;
dMin1=0;
if(sumOffDiag==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(q==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(epsilon==0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(data.length!=0){
return ;
}
flipIfWarranted(n,2);
initialSplits(n);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,855
Find no block!
org.apache.commons.math.linear.EigenDecompositionImpl,856
Find no block!
org.apache.commons.math.linear.EigenDecompositionImpl,859
Find no block!
org.apache.commons.math.linear.EigenDecompositionImpl,860
========
flipIfWarranted(n,2);
initialSplits(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin1=0;
initialSplits(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
super();
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
if(dMin1==dN1){
dMin1=0.5*dMin1;
}
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
initialSplits(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
cachedVt=null;
initialSplits(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
tType=0;
if(n<=0){
throw MathRuntimeException.createIllegalArgumentException("invalid number of elements {0} (must be positive)",n);
}
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[n-5]>work[nn-7]){
return ;
}
initialSplits(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n++;
initialSplits(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
if(n==0){
throw MathRuntimeException.createIllegalArgumentException("cannot compute 0-th root of unity, indefinite result");
}
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setInterpolatedTime(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
if(n<0){
throw MathRuntimeException.createIllegalArgumentException("simplex must contain at least one point");
}
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
tType=0;
if(n<1){
throw MathRuntimeException.createIllegalArgumentException("upper bound must be positive ({0})",n);
}
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
work=new double[Math.min(n,n)];
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
tType=source.n;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
verifyIterationCount();
initialSplits(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
tType=pingPong;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
tType=0;
dMin=Math.min(dMin,dN1);
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
pingPong=j4+4;
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pingPong==0){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) must be positive",k);
}
initialSplits(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
tType=0;
if(tType==-6){
g+=0.333*(1-g);
}else if(tType==-18){
g=0.25*0.333;
}else {
g=0.25;
}
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
tType=(n==n)?0:0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sigmaLow=0;
initialSplits(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
processGeneralBlock(n);
initialSplits(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
storeTime(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(work,0,work,0,n);
initialSplits(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n==pingPong)||(k==0)){
return 0;
}
initialSplits(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==1)||(k==n-1)){
return Math.log(n);
}
initialSplits(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
tType=0;
if(TOLERANCE>(TOLERANCE+TOLERANCE)){
TOLERANCE=Math.min(s,a2-(b1+b2));
}
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
resetEvaluations();
initialSplits(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n==pingPong)||(k==0)){
return 1;
}
initialSplits(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((pingPong==1)||(k==n-1)){
return n;
}
initialSplits(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n==pingPong)||(k==0)){
return 1.0;
}
initialSplits(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
tType=0;
dN1=work[tType+2]*(dN2/work[n-2])-tau;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
n=j4+4;
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
tType=pingPong;
dMin=Math.min(dMin,dN1);
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(pingPong+n-1);
initialSplits(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
tType=0;
++n;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(pingPong+n-1);
checkIndex(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
tType=0;
dMin1=tType;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
tType=0;
if((n!=sample2.length)||(n<1)){
throw MathRuntimeException.createIllegalArgumentException("input arrays must have the same positive length ({0} and {1})",n,sample2.length);
}
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
tType=0;
dMin=work[4*n+pingPong]-tau;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(work,0,work,0,n);
storeTime(n);
tType=0;
dMin1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,863
========
tType=0;
dMin2=0;
dN=0;
dN1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin1=0;
dMin2=0;
dN=0;
dN1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin2=0;
dN=0;
work[n]=0.0;
dN1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin2=0;
work[n]=0.0;
dN=0;
dN1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN=0.0;
dMin2=0;
dN=0;
dN1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[n-5]>work[nn-7]){
return ;
}
dMin2=0;
dN=0;
dN1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin2=0;
dN=pingPong;
dN1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin2=0;
n=j4+4;
dN=0;
dN1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n+2]=dN;
dMin2=0;
dN=0;
dN1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n-pingPong-1]=eMin;
dMin2=0;
dN=0;
dN1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[n-4]>work[np-2]){
return ;
}
dMin2=0;
dN=0;
dN1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin2=0;
work[n]=work[n+2]*(work[j4p2]/work[j4-2]);
dN=0;
dN1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=j4+4;
dMin2=0;
dN=0;
dN1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.sqrt(TOLERANCE*b2);
dMin2=0;
dN=0;
dN1=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,864
========
dMin1=0;
dN=0;
dN1=0;
dN2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin2=0;
dN=0;
dN1=0;
dN2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN=0;
work[n]=0.0;
dN1=0;
dN2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n]=0.0;
dN=0;
dN1=0;
dN2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN=0.0;
dN=0;
dN1=0;
dN2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[n-5]>work[nn-7]){
return ;
}
dN=0;
dN1=0;
dN2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN=pingPong;
dN1=0;
dN2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=j4+4;
dN=0;
dN1=0;
dN2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n+2]=dN;
dN=0;
dN1=0;
dN2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n-pingPong-1]=eMin;
dN=0;
dN1=0;
dN2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[n-4]>work[np-2]){
return ;
}
dN=0;
dN1=0;
dN2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n]=work[n+2]*(work[j4p2]/work[j4-2]);
dN=0;
dN1=0;
dN2=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,865
========
dMin2=0;
dN1=0;
dN2=0;
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN1=0;
dN1=0;
dN2=0;
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN1=0;
if(dMin1==dN1){
tau=0.5*dMin1;
}
dN2=0;
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n]=0.0;
dN1=0;
dN2=0;
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN1=0;
work[4*n-3-pingPong]=0.0;
dN2=0;
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
updateSigma(tau);
dN1=0;
dN2=0;
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN1=0;
dN2=0;
if(tType==-6){
g+=0.333*(1-g);
}else if(tType==-18){
g=0.25*0.333;
}else {
g=0.25;
}
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN1=0;
dN2=0;
tau=pingPong;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN1=0;
dN2=0;
n=j4+4;
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n]=work[n+2]*(work[j4p2]/work[j4-2]);
dN1=0;
dN2=0;
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=j4+4;
dN1=0;
dN2=0;
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[n-4]>work[np-2]){
return ;
}
dN1=0;
dN2=0;
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN1=0;
TOLERANCE=TOLERANCE*a2;
dN2=0;
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(dN2,n,n);
dN1=0;
dN2=0;
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
processGeneralBlock(n);
dN1=0;
dN2=0;
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n-2]=dN1+work[n];
dN1=0;
dN2=0;
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n+2]=dN1;
dN1=0;
dN2=0;
tau=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,866
========
dN=0;
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN1=0;
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n-3-pingPong]=0.0;
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
updateSigma(tau);
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN2=0;
tau=0;
double i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0=0;
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dMin1==dN1){
tau=0.5*dMin1;
}
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0=-9;
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN2=0;
if(i0==-6){
g+=0.333*(1-g);
}else if(tType==-18){
g=0.25*0.333;
}else {
g=0.25;
}
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0=-6;
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
eMin=work[4*n+2];
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n-2]=eMin;
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN2=0;
tau=0;
int i0=pingPong;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN2=pingPong;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>=n){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0=goodStep(n,n0);
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN2=0;
tau=0;
boolean i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(dN2,n,n);
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
processGeneralBlock(n);
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=TOLERANCE*a2;
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0=-3;
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN2=0;
work[n-2]=dN2+work[n];
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN2=0;
work[n]=work[n+2]*(work[j4p2]/work[j4-2]);
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin=Math.min(dMin,tau);
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0=work[4*n+pingPong]-tau;
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN2=0;
work[n-2]=dN1+work[n];
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n+2]=tau;
dN2=0;
tau=0;
int i0=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,867
Find no block!
org.apache.commons.math.linear.EigenDecompositionImpl,868
Find no block!
org.apache.commons.math.linear.EigenDecompositionImpl,869
========
dN2=0;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
double i0=0;
double n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
double i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
double n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0=0;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n0=0;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
long i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=p1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=q1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
if(n==0){
throw MathRuntimeException.createIllegalArgumentException("cannot compute 0-th root of unity, indefinite result");
}
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
n0=n>0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n0<1){
throw MathRuntimeException.createIllegalArgumentException("polynomial degree must be positive: degree={0}",n);
}
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
if(n<1){
throw MathRuntimeException.createIllegalArgumentException("upper bound must be positive ({0})",n);
}
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0|=mask>>1;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dest.n=source.n;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=pingPong;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=i0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*pingPong-2]=eMin;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
n0=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n0<0){
throw MathRuntimeException.createIllegalArgumentException("simplex must contain at least one point");
}
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n++;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sumOffDiag==0){
return ;
}
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
flipIfWarranted(n,2);
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[0]=0.0;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=n0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=length;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!FastFourierTransformer.isPowerOf2(n0)){
throw MathRuntimeException.createIllegalArgumentException("{0} is not a power of 2",n);
}
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0=cachedVt.getRowDimension();
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n0=cachedVt.getColumnDimension();
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
cachedVt=null;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
if(xval.length!=yval.length){
throw new MathException("Loess expects the abscissa and ordinate arrays "+"to be of the same size, ",xval.length,yval.length);
}
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n0==0){
throw new MathException("Loess expects at least 1 point");
}
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*i0-3-pingPong]=0.0;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
updateSigma(tau);
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
incrementIterationsCounter();
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dMin1==dN1){
tau=0.5*dMin1;
}
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0=-9;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n0<2||n!=sample2.length){
throw MathRuntimeException.createIllegalArgumentException("input arrays must have the same length and at least two elements ({0} and {1})",n,sample2.length);
}
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
double i0=0;
int n0=length;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!FastFourierTransformer.isPowerOf2(n0)){
throw MathRuntimeException.createIllegalArgumentException("{0} is not a power of 2 plus one",f.length);
}
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new double[n0][0]=work.clone()[0];
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=(householderVectors.length>=n)?0:1;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=(householderVectors.length>=n)?0:0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[0]=0.0;
tau=0;
int i0=0;
double n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
work[0]=0.0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=(work==null)?0:0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(b.length!=i0){
throw MathRuntimeException.createIllegalArgumentException("vector length mismatch: got {0} but expected {1}",b.length,m);
}
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
verifyInterval(minPivot,TOLERANCE);
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
verifyIterationCount();
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work=new double[Math.min(n,n0)];
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
if(n<=0){
throw MathRuntimeException.createIllegalArgumentException("upper bound must be positive ({0})",n);
}
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(cachedVt.getRowDimension()!=i0){
throw MathRuntimeException.createIllegalArgumentException("dimensions mismatch: got {0}x{1} but expected {2}x{3}",b.getRowDimension(),b.getColumnDimension(),m,"n");
}
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=stepStart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=stepSize;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(work,0,work,0,n);
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=i0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n0<1){
throw MathRuntimeException.createIllegalArgumentException("empty polynomials coefficients array");
}
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
cachedVt=MatrixUtils.createRealMatrix(i0,m);
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=max;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=min;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=np;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
long i0=0;
double n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
if(x.length<3){
throw MathRuntimeException.createIllegalArgumentException("{0} points are required, got only {1}",3,x.length);
}
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE>(TOLERANCE+TOLERANCE)){
TOLERANCE=Math.min(s,a2-(b1+b2));
}
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0=-3;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=step;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=TOLERANCE*a2;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE<TOLERANCE){
TOLERANCE=TOLERANCE*(1-Math.sqrt(a2))/(1+a2);
}
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
if((n0!=sample2.length)||(n<1)){
throw MathRuntimeException.createIllegalArgumentException("input arrays must have the same positive length ({0} and {1})",n,sample2.length);
}
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
if((i0+1>=i0)&&(TOLERANCE<=TOLERANCE)){
setResult(TOLERANCE,i);
return TOLERANCE;
}
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n0=Math.max((int)(Math.min(4,Math.pow(TOLERANCE/TOLERANCE,0.5/abscissas.length))*n),n+1);
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
eMin=work[4*i0+2];
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=subStep;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
double i0=n0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=n0;
double n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
double i0=n0;
double n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=r0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=a0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
++n;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
double n0=r0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
++n;
int n0=r0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
double n0=a0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
++n;
int n0=a0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
++n;
double n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
++n;
double n0=r0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
++n;
double n0=a0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=oneFourthCount;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=threeFourthCount;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
boolean n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=(work==null)?0:0;
int n0=length;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
resetEvaluations();
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i0==-6){
g+=0.333*(1-g);
}else if(tType==-18){
g=0.25*0.333;
}else {
g=0.25;
}
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0=-6;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=BlockRealMatrix.BLOCK_SIZE;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=BLOCK_SIZE;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
checkIndex(n+n-1);
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=nthRootOfAbs;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
if(n<=0){
throw MathRuntimeException.createIllegalArgumentException("number of sample is not positive: {0}",n);
}
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
verifyInterval(minPivot,TOLERANCE);
double i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
verifyInputArray(work,work);
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=d;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
if(dN2==0.0){
for(int i0=0;k<n;++k){
if((i0!=k)&&(work[i]==x[k])){
throw MathRuntimeException.createArithmeticException("identical abscissas x[{0}] == x[{1}] == {2} cause division by zero",i,k,x[i]);
}
}
}
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n-1]=work[n];
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n-1]+=tau*work[n-1];
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=a;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=b;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=p0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
double n0=p1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
++n;
int n0=p1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
++n;
double n0=p1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
char i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=tau;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n0=work[4*n+pingPong]-tau;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin1=-work[4*n+pingPong];
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0-2]=dN2+work[i0];
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0]=work[i0+2]*(work[j4p2]/work[j4-2]);
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN1=work[i0+2]*(dN2/work[i0-2])-tau;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin=Math.min(dMin,dN1);
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=nStart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0-2]=dN1+work[i0];
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dN=work[i0+2]*(dN1/work[i0-2])-tau;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0+2]=dN;
tau=0;
int i0=0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
double i0=i0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=n0;
int n0=length;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!FastFourierTransformer.isPowerOf2(n0)){
throw MathRuntimeException.createIllegalArgumentException("{0} is not a power of 2",n);
}
tau=0;
int i0=n0;
int n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!FastFourierTransformer.isPowerOf2(n0)){
throw MathRuntimeException.createIllegalArgumentException("{0} is not a power of 2",n);
}
tau=0;
int i0=0;
int n0=length;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!FastFourierTransformer.isPowerOf2(n0)){
throw MathRuntimeException.createIllegalArgumentException("{0} is not a power of 2",n);
}
tau=0;
int i0=n0;
int n0=length;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
double n0=stepStart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(work,0,work,0,n);
tau=0;
int i0=0;
int n0=stepStart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
double n0=stepSize;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(work,0,work,0,n);
tau=0;
int i0=0;
int n0=stepSize;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(work,0,work,0,n);
tau=0;
int i0=0;
double n0=n;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(work,0,work,0,n);
tau=0;
int i0=0;
double n0=stepStart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(work,0,work,0,n);
tau=0;
int i0=0;
double n0=stepSize;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=z;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=0;
int n0=divider;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
int i0=i0;
int n0=nStart;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
resetEvaluations();
tau=0;
int i0=0;
int n0=length;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,873
Find no block!
org.apache.commons.math.linear.EigenDecompositionImpl,874
========
if(i0>=n){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=goodStep(i0,n0);
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[n0-5]>work[nn-7]){
return ;
}
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=n0-9;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[n0-9]>work[nn-11]){
return ;
}
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=n0-13;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n0=i0-2*n;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=work[n0-2];
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[n0-4]>work[np-2]){
return ;
}
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i0]>work[i4-2]){
return ;
}
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=a2+sigma;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=b2+sigma;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n0==0){
throw MathRuntimeException.createIllegalArgumentException("cannot compute 0-th root of unity, indefinite result");
}
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==null)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
int offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sumOffDiag==0){
return ;
}
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
flipIfWarranted(n,2);
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=0;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(m==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i0]>work[i4-2]){
return ;
}
offDiagMin=a2+sigma;
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
cachedV=MatrixUtils.createRealMatrix(n0,n);
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,875
org.apache.commons.math.linear.EigenDecompositionImpl,877
Find no block!
org.apache.commons.math.linear.EigenDecompositionImpl,878
========
sigma=(n0==n)?0:-work[4*n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sigmaLow=pingPong;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i0>=n0){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n0=goodStep(i0,n0);
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[n0-5]>work[nn-7]){
return ;
}
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0=n0-9;
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[n0-9]>work[nn-11]){
return ;
}
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0=n0-13;
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n0=i0-2*pingPong;
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=work[n0-2];
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[n0-4]>work[np-2]){
return ;
}
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=i0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=n0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
int offDiagMax=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i0-2*n0-8]>offDiagMax||work[np-4]>sigmaLow){
return ;
}
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
int offDiagMax=n0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[n0]>work[i4-2]){
return ;
}
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=a2+sigmaLow;
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=b2+sigmaLow;
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sigmaLow>0.0&&gap2>TOLERANCE*dMin2/(1+TOLERANCE*b2)){
offDiagMin=Math.max(TOLERANCE,a2*(1-TOLERANCE*a2));
}else {
tau=Math.max(s,a2*(1-cnst2*b2));
}
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[n0]>work[i4-2]){
return ;
}
offDiagMin=a2+sigmaLow;
sigmaLow=0;
double offDiagMin=(i0==n0)?0:work[4*n0-6];
double offDiagMax=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,880
========
double offDiagMax=(n0==n0)?0:0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sigmaLow=0;
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=n0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=diagMax;
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMin=-Math.max(0,eMin-2*Math.sqrt(diagMin*offDiagMax));
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
pingPong=0;
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=i0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMin=work[4*i0];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMax=work[4*i0+2];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
progressiveQuotientDifferenceWithShift(imagEigenvalues,imagEigenvalues,TOLERANCE);
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offDiagMax=n0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offDiagMax=i0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=pingPong;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=dMin;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=b1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
if(work[i0-5]>work[nn-7]){
return ;
}
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=0;
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMin=diagMax;
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*(n0-2)-pingPong-1-2]=dN2+work[4*(n0-2)-pingPong-1+2*pingPong-1];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
int offDiagMax=pingPong;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=dCurrent;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=eCurrent;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
offDiagMax=Math.min(lowerSpectra,lowerSpectra);
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n0+i0-1]=diagMax;
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMin=MathUtils.SAFE_MIN*Math.max(1.0,eMin*eMax);
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=tau;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
diagMin=work[4*i0+pingPong+4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin=diagMax;
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMax=-work[4*i0+pingPong];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0-2]=dN2+work[i0+2*n0-1];
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0]=work[i0+2*n0-1+2]*(work[j4p2]/work[j4-2]);
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMax=work[i0+2*n0-1+2]*(dN2/work[i0-2])-tau;
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMin=Math.min(dMin,offDiagMax);
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=a2;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offDiagMax>0.0&&gap2>TOLERANCE*dMin2/(1+TOLERANCE*b2)){
diagMin=Math.max(TOLERANCE,a2*(1-TOLERANCE*a2));
}else {
tau=Math.max(s,a2*(1-cnst2*b2));
}
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=di;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=li;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=pi;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diP1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[3]=TOLERANCE;
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4]=TOLERANCE;
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=si;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[6*n+1]=imagEigenvalues[nM1]+TOLERANCE;
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[6*n]=TOLERANCE;
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=t;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=ePrevious;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n0+i0]=diagMax;
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMax=Math.min(lowerSpectra,diagMax);
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
if(work[i0-5]>work[nn-7]){
return ;
}
double diagMin=b1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=cos;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=rik;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
double diagMin=sin;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
diagMin=-TOLERANCE*work[i0]+TOLERANCE*qtbpj;
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
work[i0]=TOLERANCE;
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
diagMin=-TOLERANCE*work[i0]+TOLERANCE*qtbpj;
double diagMin=cos;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
work[i0]=TOLERANCE;
double diagMin=cos;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
diagMin=-TOLERANCE*work[i0]+TOLERANCE*qtbpj;
double diagMin=rik;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
work[i0]=TOLERANCE;
double diagMin=rik;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
diagMin=-TOLERANCE*work[i0]+TOLERANCE*qtbpj;
double diagMin=sin;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
work[i0]=TOLERANCE;
double diagMin=sin;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
diagMin=-TOLERANCE*work[i0]+TOLERANCE*qtbpj;
work[i0]=TOLERANCE;
double diagMin=diagMax;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
diagMin=-TOLERANCE*work[i0]+TOLERANCE*qtbpj;
work[i0]=TOLERANCE;
double diagMin=cos;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
diagMin=-TOLERANCE*work[i0]+TOLERANCE*qtbpj;
work[i0]=TOLERANCE;
double diagMin=rik;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
double offDiagMax=0;
double diagMax=work[4*n0-4];
diagMin=-TOLERANCE*work[i0]+TOLERANCE*qtbpj;
work[i0]=TOLERANCE;
double diagMin=sin;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,883
UNKNOWN ASTNode type : catch (FunctionEvaluationException fee) {
  optima[i]=Double.NaN;
  optimaValues[i]=Double.NaN;
}

UNKNOWN ASTNode type : catch (FunctionEvaluationException fee) {
  optima[i]=Double.NaN;
  optimaValues[i]=Double.NaN;
}

UNKNOWN ASTNode type : catch (ConvergenceException ce) {
  optima[i]=Double.NaN;
  optimaValues[i]=Double.NaN;
}

UNKNOWN ASTNode type : catch (ConvergenceException ce) {
  optima[i]=Double.NaN;
  optimaValues[i]=Double.NaN;
}

========
if(work[i+2]<0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i]<=0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i]<0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
numElements-=i;
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
work[i+2]=-sigma;
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
diagMax=0;
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
offDiagMin=work[i+6];
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
previousEMin=work[i+7];
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
work[i+2]=-sigma;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];

i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i++;
if(work[i+2]<=0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(1.5*work[pingPong]<=0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=work[i-5]/work[nn-7];
if(work[i+2]<=0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0=i-9;
if(work[i+2]<=0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=work[i-9]/work[nn-11];
if(work[i+2]<=0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0=i-13;
if(work[i+2]<=0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=n0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=i0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i]=Math.sqrt(ltI[i]);
if(work[i+2]<=0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
work[j4-1]=0.0;
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
d=work[j4+2];
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
dMin=dN2;
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
work[j4-1]=0.0;
d=work[j4+2];
dMin=dN2;

i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
work[j4]=0.0;
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
d=work[j4+1];
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
work[j4]=0.0;
d=work[j4+1];
dMin=dN2;

i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=b2*(work[i]/work[i4-2]);
if(work[i+2]<=0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=a2+TOLERANCE;
if(work[i+2]<=0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=b1*(work[i]/work[i4-2]);
if(work[i+2]<=0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=b2+TOLERANCE;
if(work[i+2]<=0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
dN1=work[j4p2+2];
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
dMin=dN1;
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
work[j4]=0.0;
dN1=work[j4p2+2];
dMin=dN1;

i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
dN=work[j4p2+2];
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
dMin=dN;
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
work[j4]=0.0;
dN=work[j4p2+2];
dMin=dN;

i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
obs1=observed1[i];
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
obs2=observed2[i];
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=0){
obs1=observed1[i];
obs2=observed2[i];

i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues[i-1]=work[n];
if(work[i+2]<=0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0=goodStep(i0,n0);
if(work[i+2]<=0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
pingPong=1-pingPong;
if(work[i+2]<=0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE<=0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=b2*(work[i]/work[i4-2]);
TOLERANCE=a2+TOLERANCE;
if(work[i+2]<=0){
i0=1+i/4;
break;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
UNKNOWN ASTNode type : catch (FunctionEvaluationException fee) {
  optima[i]=Double.NaN;
  optimaValues[i]=Double.NaN;
}

UNKNOWN ASTNode type : catch (FunctionEvaluationException fee) {
  optima[i]=Double.NaN;
  optimaValues[i]=Double.NaN;
}

UNKNOWN ASTNode type : catch (ConvergenceException ce) {
  optima[i]=Double.NaN;
  optimaValues[i]=Double.NaN;
}

UNKNOWN ASTNode type : catch (ConvergenceException ce) {
  optima[i]=Double.NaN;
  optimaValues[i]=Double.NaN;
}

========
if(paru>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin>=4*offDiagMax){
diagMin=Math.min(TOLERANCE,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMax=Math.min(diagMin,Math.max(lmPar,TOLERANCE));
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offDiagMax==0){
lmPar=g/TOLERANCE;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=Math.max((int)(Math.min(4,Math.pow(TOLERANCE/TOLERANCE,0.5/abscissas.length))*n),n+1);
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMax=TOLERANCE;
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.min(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(range>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(absoluteTolerance>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin>=4*relativeTolerance){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMin=Math.min(upper,TOLERANCE+100*MathUtils.EPSILON);
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(cost>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(previousCost>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMin=offDiagMax*Math.min(delta,10.0*TOLERANCE);
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE/=offDiagMax;
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(a2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lmPar>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin>=4*offDiagMax){
diagMin=Math.max(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin>4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offDiagMax>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(deltaNorm>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(yA>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(yB>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(difference>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(size>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(relativeThreshold>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin>=4*absoluteThreshold){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(interpError>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
hNew=TOLERANCE;
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin>=4*eps){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(absG>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin>=4*offDiagMax){
r=i;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin>=4*offDiagMax){
work[i+2]=-0.0;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMin=work[pingPong];
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin>=4*offDiagMax){
mt[0]=mt[N-1];
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i++;
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin>=4*offDiagMax){
iterationCount=i;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin>=4*offDiagMax){
numElements-=i;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((i+i)>internalArray.length){
expandTo(startIndex+i);
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0=i;
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(absAi>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(y2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(y1>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin>=4*offDiagMax){
x2=TOLERANCE;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=TOLERANCE-TOLERANCE;
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(getEntry(i)-work[i])>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(delta>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin>=4*offDiagMax){
oldDelta=TOLERANCE;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin>=4*offDiagMax){
x2=TOLERANCE;
oldDelta=TOLERANCE;

diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(y1>=4*offDiagMax){
x2=TOLERANCE;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i++;
if(y1>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i++;
if(diagMin>=4*offDiagMax){
x2=TOLERANCE;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i++;
if(y1>=4*offDiagMax){
x2=TOLERANCE;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0++;
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i++;
if(diagMin>=4*offDiagMax){
mt[0]=mt[N-1];
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin>=4*offDiagMax){
outBlock=out.blocks[++outBlockIndex];
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin>=4*offDiagMax){
mBlock=matrix.blocks[++mBlockIndex];
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin>=4*offDiagMax){
work[i]=-0.0;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin>=4*offDiagMax){
work[j]=diagMin;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin>=4*offDiagMax){
work[j+2]=0.0;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin>=4*offDiagMax){
work[i]=-0.0;
work[j]=diagMin;
work[j+2]=0.0;

diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i]>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues[i-1]=imagEigenvalues[n];
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(length>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(dist>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i]=TOLERANCE*TOLERANCE+TOLERANCE-TOLERANCE*TOLERANCE;
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues[i]=Math.abs(imagEigenvalues[i]-work[i]);
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(outValue>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(norm2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin>=4*offDiagMax){
nextColumn=i;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE>4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(norm2>4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin>4*offDiagMax){
nextColumn=i;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE>=4*offDiagMax){
nextColumn=i;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(norm2>=4*offDiagMax){
nextColumn=i;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE>4*offDiagMax){
nextColumn=i;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(norm2>4*offDiagMax){
nextColumn=i;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(s>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=work[i0-7]+(diagMin+work[k-5]);
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0-3]*=work[k-7]/TOLERANCE;
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0-7]=TOLERANCE;
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(paru>=4*offDiagMax){
diagMin=Math.min(TOLERANCE,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMax=Math.min(diagMin,Math.max(lmPar,TOLERANCE));
if(paru>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offDiagMax==0){
lmPar=g/TOLERANCE;
}
if(paru>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMax=Math.min(diagMin,Math.max(lmPar,TOLERANCE));
if(diagMin>=4*offDiagMax){
diagMin=Math.min(TOLERANCE,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offDiagMax==0){
lmPar=g/TOLERANCE;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(TOLERANCE,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMax=Math.min(diagMin,Math.max(lmPar,TOLERANCE));
if(offDiagMax==0){
lmPar=g/TOLERANCE;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMax=Math.min(diagMin,Math.max(lmPar,TOLERANCE));
if(paru>=4*offDiagMax){
diagMin=Math.min(TOLERANCE,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offDiagMax==0){
lmPar=g/TOLERANCE;
}
if(paru>=4*offDiagMax){
diagMin=Math.min(TOLERANCE,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMax=Math.min(diagMin,Math.max(lmPar,TOLERANCE));
if(offDiagMax==0){
lmPar=g/TOLERANCE;
}
if(paru>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMax=Math.min(diagMin,Math.max(lmPar,TOLERANCE));
if(offDiagMax==0){
lmPar=g/TOLERANCE;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(TOLERANCE,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMax=Math.min(diagMin,Math.max(lmPar,TOLERANCE));
if(offDiagMax==0){
lmPar=g/TOLERANCE;
}
if(paru>=4*offDiagMax){
diagMin=Math.min(TOLERANCE,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMin=offDiagMax*Math.min(delta,10.0*TOLERANCE);
if(cost>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE/=offDiagMax;
if(cost>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMin=offDiagMax*Math.min(delta,10.0*TOLERANCE);
if(previousCost>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE/=offDiagMax;
if(previousCost>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMin=offDiagMax*Math.min(delta,10.0*TOLERANCE);
TOLERANCE/=offDiagMax;
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMin=offDiagMax*Math.min(delta,10.0*TOLERANCE);
TOLERANCE/=offDiagMax;
if(cost>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMin=offDiagMax*Math.min(delta,10.0*TOLERANCE);
TOLERANCE/=offDiagMax;
if(previousCost>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offDiagMax*TOLERANCE>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fm>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(fmin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(sign>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(yInitial>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(yMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(yMax>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin*offDiagMax>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(y0>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(delta>4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(TOLERANCE)<=TOLERANCE){
setResult(TOLERANCE,0);
return TOLERANCE;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lmPar>=4*offDiagMax){
diagMin=Math.max(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(min>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(max>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
verifyInterval(offDiagMax,TOLERANCE);
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
work[l-1]=Math.min(work[n0-1],Math.min(work[3+i],work[7+pingPong]));
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
work[l-2*pingPong]=Math.min(work[n0-2*i],Math.min(work[6+pingPong],work[6+pingPong]));
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
dMin=-0.0;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
work[l-1]=Math.min(work[n0-1],Math.min(work[3+i],work[7+pingPong]));
work[l-2*pingPong]=Math.min(work[n0-2*i],Math.min(work[6+pingPong],work[6+pingPong]));
dMin=-0.0;

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
work[i+2]=-sigma;
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
diagMax=0;
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
offDiagMin=work[i+6];
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
previousEMin=work[i+7];
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
work[i+2]=-sigma;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];

i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
sum/=diag[pj];
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin==0){
paru=0.0/Math.min(offDiagMin,0.1);
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMax=Math.min(diagMin,Math.max(lmPar,TOLERANCE));
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offDiagMax==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin==0){
paru=0.0/Math.min(offDiagMin,0.1);
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
sum/=diag[pj];
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMax=Math.min(diagMin,Math.max(lmPar,TOLERANCE));
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
sum/=diag[pj];
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offDiagMax==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
sum/=diag[pj];
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin==0){
paru=0.0/Math.min(offDiagMin,0.1);
}
offDiagMax=Math.min(diagMin,Math.max(lmPar,TOLERANCE));
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin==0){
paru=0.0/Math.min(offDiagMin,0.1);
}
if(offDiagMax==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMax=Math.min(diagMin,Math.max(lmPar,TOLERANCE));
if(offDiagMax==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin==0){
paru=0.0/Math.min(offDiagMin,0.1);
}
offDiagMax=Math.min(diagMin,Math.max(lmPar,TOLERANCE));
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
sum/=diag[pj];
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin==0){
paru=0.0/Math.min(offDiagMin,0.1);
}
if(offDiagMax==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
sum/=diag[pj];
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMax=Math.min(diagMin,Math.max(lmPar,TOLERANCE));
if(offDiagMax==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
sum/=diag[pj];
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin==0){
paru=0.0/Math.min(offDiagMin,0.1);
}
offDiagMax=Math.min(diagMin,Math.max(lmPar,TOLERANCE));
if(offDiagMax==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin==0){
paru=0.0/Math.min(offDiagMin,0.1);
}
offDiagMax=Math.min(diagMin,Math.max(lmPar,TOLERANCE));
if(offDiagMax==0){
lmPar=Math.sqrt(diagMax)/TOLERANCE;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
sum/=diag[pj];
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.min(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sumOffDiag=0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
offDiagMin=Math.min(paru,lmPar);
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.max(diagMax,lmPar+TOLERANCE/(diagMin*sumOffDiag));
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
work[j4]=work[j4-1]*work[i+1]/work[j4-2];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
work[j4]=work[j4+1]*(work[j4-1]/work[j4-2]);
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMin=Math.min(dMin,diagMax);
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.min(eMin,work[i]);
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
work[j4-1]=work[j4]*work[i+2]/work[j4-3];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
work[j4-1]=work[j4+2]*(work[j4]/work[j4-3]);
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.min(eMin,work[i-1]);
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.max(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
tType=-8;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=Math.min(coefficients.length,p.coefficients.length);i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy((coefficients.length<p.coefficients.length)?p.coefficients:coefficients,Math.min(coefficients.length,p.coefficients.length),new double[Math.max(coefficients.length,p.coefficients.length)],lowLength,Math.max(coefficients.length,p.coefficients.length)-lowLength);
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(coefficients.length<p.coefficients.length){
for(int i=Math.min(coefficients.length,p.coefficients.length);i<Math.max(coefficients.length,p.coefficients.length);++i){
new double[Math.max(coefficients.length,p.coefficients.length)][i]=-p.coefficients[i];
}
}else {
System.arraycopy(coefficients,lowLength,newCoefficients,lowLength,highLength-lowLength);
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(range>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(absoluteTolerance>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*relativeTolerance){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(countEigenValues(diagMin,n,n)>=1){
right=diagMin;
}else {
left=diagMin;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=Math.max(lower,TOLERANCE-100*MathUtils.EPSILON);
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=diagMax-TOLERANCE;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=i0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
n=Math.max((int)(Math.min(4,Math.pow(Math.abs(TOLERANCE-diagMin)/Math.max(diagMax,TOLERANCE*(Math.abs(diagMin)+Math.abs(TOLERANCE))),0.5/abscissas.length))*n),n+1);
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
oldt=TOLERANCE;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
n=Math.max((int)(Math.min(4,Math.pow(Math.abs(TOLERANCE-diagMin)/Math.max(diagMax,TOLERANCE*(Math.abs(diagMin)+Math.abs(TOLERANCE))),0.5/abscissas.length))*n),n+1);
oldt=TOLERANCE;

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(countEigenValues(offDiagMax,n,n)>=n){
right=offDiagMax;
}else {
left=offDiagMax;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.min(upper,TOLERANCE+100*MathUtils.EPSILON);
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(i0,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
index+=n;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
a2=TOLERANCE+offDiagMax;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMax=work[i0-13]/work[nn-15];
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=a2+offDiagMax;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=n0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=pingPong;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=0;i-=4){
a2=TOLERANCE+offDiagMax;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=0;i-=4){
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
a2=TOLERANCE+offDiagMax;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
a2=TOLERANCE+offDiagMax;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
a2=TOLERANCE+offDiagMax;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
a2=TOLERANCE+offDiagMax;
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=n0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=n0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=n0;i-=4){
a2=TOLERANCE+offDiagMax;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=n0;i-=4){
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=n0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=pingPong;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=pingPong;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=pingPong;i-=4){
a2=TOLERANCE+offDiagMax;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=pingPong;i-=4){
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=pingPong;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=0;i-=4){
a2=TOLERANCE+offDiagMax;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=0;i-=4){
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=0;i-=4){
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=0;i-=4){
a2=TOLERANCE+offDiagMax;
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=0;i-=4){
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
a2=TOLERANCE+offDiagMax;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
a2=TOLERANCE+offDiagMax;
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
a2=TOLERANCE+offDiagMax;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
a2=TOLERANCE+offDiagMax;
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
a2=TOLERANCE+offDiagMax;
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=n0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=n0;i-=4){
a2=TOLERANCE+offDiagMax;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=n0;i-=4){
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=n0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=n0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=n0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=n0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=n0;i-=4){
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=n0;i-=4){
a2=TOLERANCE+offDiagMax;
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=n0;i-=4){
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=pingPong;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=pingPong;i-=4){
a2=TOLERANCE+offDiagMax;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=pingPong;i-=4){
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=pingPong;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=pingPong;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=pingPong;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=pingPong;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=pingPong;i-=4){
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=pingPong;i-=4){
a2=TOLERANCE+offDiagMax;
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=pingPong;i-=4){
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=0;i-=4){
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=0;i-=4){
a2=TOLERANCE+offDiagMax;
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=0;i-=4){
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i4>=0;i-=4){
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
a2=TOLERANCE+offDiagMax;
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
a2=TOLERANCE+offDiagMax;
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=pingPong;i-=4){
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(b2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}
b2=offDiagMax*(work[i4]/work[i4-2]);
a2=TOLERANCE+offDiagMax;
if(100*Math.max(offDiagMax,diagMax)<TOLERANCE||diagMin<TOLERANCE){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offDiagMax!=0.0){
for(int i=4*n-10+pingPong;i4>=4*n0+2+pingPong;i4-=4){
 final double diagMax=offDiagMin;
if(work[i4]>work[i4-2]){
return ;
}
b1=b1*(work[i4]/work[i4-2]);
b2=b2+b1;
if(100*Math.max(b1,oldB1)<b2){
break;
}
}
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMin=Math.sqrt(yDDotOnScale)/offDiagMax;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMax=Math.min(100.0*Math.abs(h),diagMax);
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMax=Math.max(h,1.0E-12*Math.abs(offDiagMin));
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offDiagMax<getMinStep()){
h=getMinStep();
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkVectorDimensions(v.length);
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.min(dMin,diagMin);
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=offDiagMin;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
work[j4]=work[j4p2]*work[i+2]/work[n0-2];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
work[j4]=work[j4p2+2]*(work[j4p2]/work[j4-2]);
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=Math.min(dMin,diagMax);
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n0+2]=diagMax;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(difference>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(size>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(relativeThreshold>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n<Math.max(i+1,(9*iMin+n)/10)){
index=low;
}else if(index>Math.min(n-1,(i+9*iMax)/10)){
index=high;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
lmPar*=0.5;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rescale(work,y,work);
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
null.storeTime(offDiagMin);
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=n0*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=2*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(yA>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(yB>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(diagMin)<=TOLERANCE){
setResult(TOLERANCE,i);
return TOLERANCE;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(diagMax)<=Math.max(offDiagMax*Math.abs(TOLERANCE),offDiagMin)){
setResult(TOLERANCE,i);
return TOLERANCE;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(diagMax)<=TOLERANCE){
setResult(TOLERANCE-(MathUtils.sign(offDiagMax)*MathUtils.sign(TOLERANCE))*(TOLERANCE-TOLERANCE)/Math.sqrt(diagMin),i);
return TOLERANCE;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(absG>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
sixI+=6;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
progressiveQuotientDifferenceWithShift(imagEigenvalues,imagEigenvalues,diagMax);
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(diagMax)<=TOLERANCE){
setResult(isSequence(TOLERANCE,TOLERANCE,TOLERANCE)?xplus:TOLERANCE+(-2.0*offDiagMax)/(TOLERANCE-Math.sqrt(diagMin)),i);
return TOLERANCE;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
i0--;
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
rDiag[minor]=(work[i0]>0)?-Math.sqrt(diagMax):Math.sqrt(xNormSqr);
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if((work[i0]>0)?-Math.sqrt(diagMax):Math.sqrt(xNormSqr)!=0.0){
qrtMinor[minor]-=(work[i0]>0)?-Math.sqrt(diagMax):Math.sqrt(xNormSqr);
for(int i0+1=i0+1;i0+1<n0;i0+1++){
double TOLERANCE=0;
for(int i=i0;i<i0;i++){
alpha-=qrtCol[row]*qrtMinor[row];
}
alpha/=(work[i0]>0)?-Math.sqrt(diagMax):Math.sqrt(xNormSqr)*qrtMinor[minor];
for(int i=i0;i<i0;i++){
qrtCol[row]-=TOLERANCE*qrtMinor[row];
}
}
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
rDiag[minor]=(work[i0]>0)?-Math.sqrt(diagMax):Math.sqrt(xNormSqr);
if((work[i0]>0)?-Math.sqrt(diagMax):Math.sqrt(xNormSqr)!=0.0){
qrtMinor[minor]-=(work[i0]>0)?-Math.sqrt(diagMax):Math.sqrt(xNormSqr);
for(int i0+1=i0+1;i0+1<n0;i0+1++){
double TOLERANCE=0;
for(int i=i0;i<i0;i++){
alpha-=qrtCol[row]*qrtMinor[row];
}
alpha/=(work[i0]>0)?-Math.sqrt(diagMax):Math.sqrt(xNormSqr)*qrtMinor[minor];
for(int i=i0;i<i0;i++){
qrtCol[row]-=TOLERANCE*qrtMinor[row];
}
}
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n+i)>internalArray.length){
expandTo(startIndex+i);
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0=i;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
reject=true;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
bytes[bytesOut++]=(byte)i0;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(n==bytes.length){
return ;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
bytes[bytesOut++]=(byte)i0;
if(n==bytes.length){
return ;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);j>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
cachedVt.setEntry(Math.min(i0,n)-1,minor,1.0);
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[0]=minPivot+TOLERANCE;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0-1]=TOLERANCE;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.midpoint(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
setResult(diagMax,i);
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
vector[i]++;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=rawData.length;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :

for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
outBlock=out.blocks[++outBlockIndex];
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
outBlock[outIndex++]=block[i*jWidth+jColumn];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
mBlock=matrix.blocks[++mBlockIndex];
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
block[i*jWidth+jColumn]=mBlock[mIndex++];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(Math.abs(getEntry(i)-work[i])>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(delta>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
list[target]=list[i];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
list[i]=i0;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
list[target]=list[i];
list[i]=i0;

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
absDCurrent=Math.abs(main[i+1]);
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=n0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i+1]=TOLERANCE;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues[i+1]=TOLERANCE;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE==0.0){
return TOLERANCE;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(length>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
verifyInterval(minPivot,diagMax);
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(Double.isNaN(work[i])){
throw MathRuntimeException.createIllegalArgumentException("NaN weight at index {0}",i);
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(Double.isInfinite(work[i])){
throw MathRuntimeException.createIllegalArgumentException("Infinite weight at index {0}",i);
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(weights[i]>0.0){
containsPositiveWeight=true;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(Double.isNaN(work[i])){
throw MathRuntimeException.createIllegalArgumentException("NaN weight at index {0}",i);
}
if(Double.isInfinite(work[i])){
throw MathRuntimeException.createIllegalArgumentException("Infinite weight at index {0}",i);
}
if(weights[i]>0.0){
containsPositiveWeight=true;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(work[i+2]<0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(work[i]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i]<0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(work[i]<0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
work[j]=dN2+work[i];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-3-pingPong]=dN2;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
pingPong=1-pingPong;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i<0){
i=-i-2;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=polynomials.length){
i--;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i]-xval[n0]>xval[n0]-xval[i]){
n0=ileft;
}else {
edge=iright;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(dist>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
nearest=i;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
c[i]=y[i];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
d[i]=y[i];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
c[i]=y[i];
d[i]=y[i];

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((offDiagMin>0)==(diagMin>0)){
diagMax=TOLERANCE;
y2=TOLERANCE;
offDiagMax=TOLERANCE-x0;
TOLERANCE=delta;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i++;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMax=offDiagMin;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=TOLERANCE;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=x1+TOLERANCE;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((TOLERANCE>0)==(diagMin>0)){
diagMax=offDiagMax;
y2=TOLERANCE;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=diagMax-offDiagMin;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(x>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
main=new double[Math.min(cachedVt.getRowDimension(),n)];
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondary=new double[Math.min(cachedVt.getRowDimension(),n)-1];
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
cachedVt=null;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
cachedV=null;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=n0){
 final double Math.abs(diagMax-diagMin)=Math.abs(diagMax-diagMin);
 final double offDiagMin=TOLERANCE*(Math.abs(olds)+Math.abs(s));
if((delta<=rLimit)||(delta<=TOLERANCE)){
setResult(s,i);
return TOLERANCE;
}
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
tiesTrace=new ArrayList<Integer>();
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
out[ranks[i].getPosition()]=i0;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues[i]=TOLERANCE*TOLERANCE+offDiagMin;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues[i]=Math.abs(imagEigenvalues[i]-imagEigenvalues[i]);
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(offDiagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(norm2>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
nextColumn=i;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(Double.isInfinite(offDiagMin)||Double.isNaN(offDiagMin)){
throw new OptimizationException("unable to perform Q.R decomposition on the {0}x{1} jacobian matrix",n,n);
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isRootOK(diagMin,offDiagMax,solve(new Complex[coefficients.length],new Complex(0.5*(diagMin+offDiagMax),0.0)))){
setResult(z.getReal(),n0);
return TOLERANCE;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(TOLERANCE>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(Double.isInfinite(TOLERANCE)||Double.isNaN(TOLERANCE)){
throw new EstimationException("unable to perform Q.R decomposition on the {0}x{1} jacobian matrix",n,n);
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(norm2>4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>4*offDiagMax){
nextColumn=i;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(norm2>=4*offDiagMax){
nextColumn=i;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(norm2>4*offDiagMax){
nextColumn=i;
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
b1*=work[i4]/work[i4-2];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(100*TOLERANCE<diagMax){
break;
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
b1*=work[i4]/work[i4-2];
if(100*TOLERANCE<diagMax){
break;
}

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
verifyIterationCount();
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=i0;i-=4){
if(work[i+2]<=n0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=(TOLERANCE-minPivot)/(Double.valueOf(n0)).doubleValue();
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=i0;i-=4){
oldt=TOLERANCE;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
oldt=TOLERANCE;
if(work[i+2]<=n0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=i0;i-=4){
oldt=TOLERANCE;
if(work[i+2]<=n0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
++i0;
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);k>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
sumWeights+=tricube((i<n0)?TOLERANCE-work[i]:xk-x*diagMin)*work[i];
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
sumX+=work[i]*tricube((i<n0)?TOLERANCE-work[i]:xk-x*diagMin)*work[i];
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
sumXY+=work[i]*work[i]*tricube((i<n0)?TOLERANCE-work[i]:xk-x*diagMin)*work[i];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
sumWeights+=tricube((i<n0)?TOLERANCE-work[i]:xk-x*diagMin)*work[i];
sumX+=work[i]*tricube((i<n0)?TOLERANCE-work[i]:xk-x*diagMin)*work[i];
sumXY+=work[i]*work[i]*tricube((i<n0)?TOLERANCE-work[i]:xk-x*diagMin)*work[i];

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
ltI[i]=Math.sqrt(work[i]);
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=i0;i-=4){
if(work[i+2]<0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=i0;i-=4){
if(work[i]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=i0;i-=4){
if(work[i]<0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(ratio>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
minRatioPositions=new ArrayList<Integer>();
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);j>=i0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=i-2*n0;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=work[n-2];
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=dN1;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=work[n-4]/work[np-2];
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i-9]>work[nn-11]){
return ;
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=work[i-9]/work[nn-11];
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=i-13;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=i-2){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(dN2==0.0){
for(int i0=0;i0<i;++i0){
if((i!=i0)&&(x[i]==x[k])){
throw MathRuntimeException.createArithmeticException("identical abscissas x[{0}] == x[{1}] == {2} cause division by zero",i,i0,work[i]);
}
}
}
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
tc[n-1]=c[n];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
coefficients[n-1]+=imagEigenvalues[i]/dN2*tc[n-1];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(dN2==0.0){
for(int i0=0;i0<i;++i0){
if((i!=i0)&&(x[i]==x[k])){
throw MathRuntimeException.createArithmeticException("identical abscissas x[{0}] == x[{1}] == {2} cause division by zero",i,i0,work[i]);
}
}
}
tc[n-1]=c[n];
coefficients[n-1]+=imagEigenvalues[i]/dN2*tc[n-1];

if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(outValue>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMin=-offDiagMax*work[i0]+TOLERANCE*qtbpj;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0]=diagMax;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues[i0*n0+i0]=TOLERANCE*TOLERANCE+TOLERANCE*imagEigenvalues[k];
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMin=-TOLERANCE*work[i0]+TOLERANCE*qtbpj;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*i0-8]=sigma+work[i-7];
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*i0-4]=sigma+work[i-3];
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0-=2;
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new CombinedEventsManager().addEventHandler(new EndTimeChecker(offDiagMin),Double.POSITIVE_INFINITY,Math.ulp(Math.max(Math.abs(diagMax),Math.abs(endTime))),100);
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sumOffDiag=0;
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
offDiagMin=Math.min(paru,lmPar);
}
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sumOffDiag=0;
TOLERANCE=Math.max(diagMax,lmPar+TOLERANCE/(diagMin*sumOffDiag));
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
offDiagMin=Math.min(paru,lmPar);
}
TOLERANCE=Math.max(diagMax,lmPar+TOLERANCE/(diagMin*sumOffDiag));
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
sumOffDiag=0;
if(TOLERANCE>0){
diagMax=Math.max(parl,TOLERANCE);
}else if(fp<0){
offDiagMin=Math.min(paru,lmPar);
}
TOLERANCE=Math.max(diagMax,lmPar+TOLERANCE/(diagMin*sumOffDiag));
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
outBlock=out.blocks[++outBlockIndex];
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
outBlock[outIndex++]=block[i*jWidth+jColumn];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
outBlock[outIndex++]=block[i*jWidth+jColumn];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
outBlock=out.blocks[++outBlockIndex];
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
outBlock[outIndex++]=block[i*jWidth+jColumn];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
outBlock=out.blocks[++outBlockIndex];
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
mBlock=matrix.blocks[++mBlockIndex];
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
block[i*jWidth+jColumn]=mBlock[mIndex++];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=0;i-=4){
block[i*jWidth+jColumn]=mBlock[mIndex++];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
mBlock=matrix.blocks[++mBlockIndex];
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n0-2);i>=n0;i-=4){
block[i*jWidth+jColumn]=mBlock[mIndex++];
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
mBlock=matrix.blocks[++mBlockIndex];
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
verifySequence(minPivot,TOLERANCE,TOLERANCE);
for(int i=4*(n0-2);i>=0;i-=4){
if(work[i+2]<=0){
i0=1+i/4;
break;
}
if(diagMin>=4*offDiagMax){
diagMin=Math.min(diagMin,work[i+4]);
offDiagMax=Math.max(offDiagMax,work[i+2]);
}
diagMax=Math.max(diagMax,work[i]+work[i+2]);
offDiagMin=Math.min(offDiagMin,work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,885
org.apache.commons.math.linear.EigenDecompositionImpl,886
org.apache.commons.math.linear.EigenDecompositionImpl,887
Find no block!
org.apache.commons.math.linear.EigenDecompositionImpl,888
org.apache.commons.math.linear.EigenDecompositionImpl,893
org.apache.commons.math.linear.EigenDecompositionImpl,894
Find no block!
org.apache.commons.math.linear.EigenDecompositionImpl,898
========
work[4*n0-2]=t;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin<=TOLERANCE){
s=work[i0-3]*work[k-5]/(t*(1+Math.sqrt(1+s/t)));
}else {
s=work[k-3]*work[k-5]/(t+Math.sqrt(t*(t+s)));
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=work[i0-7]+(diagMin+work[k-5]);
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0-7]=TOLERANCE;
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=b;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=a;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=betak;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
secondary[i0]=offDiagMin;
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
if((diagMin/TOLERANCE<0.0)||(c2/offDiagMax<0.0)){
throw new OptimizationException("unable to first guess the harmonic coefficients");
}
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.max(TOLERANCE,lmPar+offDiagMax);
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=e;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
qMax=0.5*Math.sqrt(offDiagMax+1.0);
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
diagMin=0.5*Math.sqrt(offDiagMax+1.0);
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=upper;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lowerSpectra=Math.min(lowerSpectra,lowerSpectra);
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
if(TOLERANCE>(diagMin+TOLERANCE)){
TOLERANCE=Math.min(s,a2-(b1+b2));
}
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin=Math.sqrt(xNorm);
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=i0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=s;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.sqrt(dxNorm);
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=residual;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.sqrt(dxNorm);
work[4*n0-2]=s;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=comp;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=largestRoot;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(diagMin<0){
throw new InvalidMatrixException("cannot solve degree {0} equation",2);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=c;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i0<=i0){
throw new OptimizationException("no degrees of freedom ({0} measurements, {1} parameters)",rows,cols);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n0<=i0){
throw new EstimationException("no degrees of freedom ({0} measurements, {1} parameters)",m,p);
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
updateSigma(tau);
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=dk;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
checkVectorDimensions(v.length);
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin=Math.sqrt(lmNorm);
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
TOLERANCE=Math.sqrt(c);
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.min(dMin,Math.max(lmPar,TOLERANCE));
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE==0){
lmPar=offDiagMax/TOLERANCE;
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=dN1;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=n0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
i0=j4+4;
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=dN2;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
offDiagMax=dN2;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.abs(main[i0+1]);
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
if((i0+1>=n0)&&(TOLERANCE<=diagMin)){
setResult(offDiagMin,i);
return TOLERANCE;
}
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=sigma;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin=-work[4*i0+n0];
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=scalAbsoluteTolerance;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=scalRelativeTolerance;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=yi;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=factor;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
dN1=work[pingPong+2]*(offDiagMax/work[i0-2])-tau;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
dMin=offDiagMin;
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
i0=j4+4;
pingPong=i0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
i0=j4+4;
pingPong=n0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=dN;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
dN=work[i0+2]*(dN1/work[i0-2])-offDiagMax;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*i0-n0-1]=offDiagMin;
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
diagMax=0;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=sigma;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=i0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
i0=n0-2*pingPong;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i0-4]>work[np-2]){
return ;
}
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
if(TOLERANCE<=0){
throw MathRuntimeException.createIllegalArgumentException("the Poisson mean must be positive ({0})",p);
}
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
qMax=Math.sqrt(0.5*(1.0+TOLERANCE/offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=d;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=tmp;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
if(work[i0-5]>work[nn-7]){
return ;
}
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
if(work[i0-9]>work[nn-11]){
return ;
}
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
if(tType==-6){
g+=0.333*(1-g);
}else if(tType==-18){
g=0.25*0.333;
}else {
g=0.25;
}
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=-6;
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=pingPong;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
if(n0>=i0){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=pi;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
work[i0+10]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
work[i0+5]=offDiagMax*diagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0-=6;
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
work[n0]=dMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
work[n0+2]=0.0;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=0;
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=si;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
work[i0+1]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
work[i0+2]=TOLERANCE;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0+=6;
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=dN2;
offDiagMax=dN2;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=ratio;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
cachedV=null;
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
cachedD=null;
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
cachedVt=null;
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
computeGershgorinCircles();
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
findEigenvalues();
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=temp;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=lower;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lowerSpectra=Math.min(lowerSpectra,offDiagMin);
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMax=-TOLERANCE*work[i0]+TOLERANCE*qtbpj;
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=sum;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
verifyIterationCount();
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
super();
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
this.TOLERANCE=mean;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
this.TOLERANCE=variance;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
this.n=n;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.offDiagMin=min;
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.sumOffDiag=sum;
work[4*n0-2]=offDiagMin;
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
pingPong=0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,936
========
dMin=-Math.max(0,diagMin-2*Math.sqrt(diagMin*offDiagMax));
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
pingPong=0;
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=sigma;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
diagMax=0;
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=work[n0+6];
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
updateSigma(tau);
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
if(work[n0-5]>work[nn-7]){
return ;
}
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
TOLERANCE=work[n0-5]/work[nn-7];
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
if(work[n0-9]>work[nn-11]){
return ;
}
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
TOLERANCE=work[n0-9]/work[nn-11];
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
work[4*n0-1]=d;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[split+2]=0.0;
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
previousEMin=work[n0+2];
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=dN1;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n0=j4+4;
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
maxIter=n0+2*split-1;
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=dN2;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
n0=split-2*pingPong;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=previousEMin;
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[n0-4]>work[np-2]){
return ;
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
if(split>=n0){
throw new InvalidMatrixException(new MaxIterationsExceededException(maxIter));
}
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
pingPong=1-pingPong;
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
cachedV=null;
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
cachedD=null;
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
cachedVt=null;
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
computeGershgorinCircles();
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
findEigenvalues();
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
eigenvectors=null;
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=tmp;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin=previousEMin;
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin1=-work[4*n0+pingPong];
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=pi;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
work[4*n0-1]=diP1;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i0+5]=TOLERANCE*TOLERANCE;
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
offDiagMin=pi*TOLERANCE-TOLERANCE;
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i0-=6;
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=upper;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lowerSpectra=Math.min(lowerSpectra,lowerSpectra);
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=si;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n0+2]=offDiagMin;
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=TOLERANCE*offDiagMin-TOLERANCE;
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n0+=6;
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
maxIter=j4+4;
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
maxIter=maxIter+2*split-1;
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=d;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=t;
work[4*n0-1]=t;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=t;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=offDiagMin;
work[4*n0-1]=t;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE<=TOLERANCE){
s=work[k-3]*work[k-5]/(t*(1+Math.sqrt(1+s/t)));
}else {
s=work[k-3]*work[k-5]/(t+Math.sqrt(t*(t+s)));
}
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=work[k-7]+(TOLERANCE+work[k-5]);
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=ratio;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=temp;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=-TOLERANCE*work[k]+TOLERANCE*qtbpj;
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=sum;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n0-2]=lower;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
lowerSpectra=Math.min(lowerSpectra,previousEMin);
work[4*n0-2]=offDiagMin;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=-TOLERANCE*work[k]+TOLERANCE*qtbpj;
work[4*n0-2]=temp;
work[4*n0-1]=previousEMin;
i0=split+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.apache.commons.math.linear.EigenDecompositionImpl,937
org.apache.commons.math.linear.EigenDecompositionImpl,940
Find no block!
org.apache.commons.math.linear.EigenDecompositionImpl,941
Find no block!
org.apache.commons.math.linear.EigenDecompositionImpl,942
Find no block!
org.apache.commons.math.linear.EigenDecompositionImpl,946
Find no block!
org.apache.commons.math.linear.EigenDecompositionImpl,951
========
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
mt[0]=mt[N-1];
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
mt[0]=mt[N-1];
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(1.5*work[pingPong]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
split=i/4;
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
offDiagMin=work[i+6];
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
previousEMin=work[i+7];
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
split=i/4;
offDiagMin=work[i+6];
previousEMin=work[i+7];

work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
offDiagMin=Math.min(eMin,work[i+2]);
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
previousEMin=Math.min(eMin,work[i+3]);
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
offDiagMin=Math.min(eMin,work[i+2]);
previousEMin=Math.min(eMin,work[i+3]);

d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*d-2]=eMin;
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues[i-1]=imagEigenvalues[n];
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
work[j]=d;
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
work[j+2]=0.0;
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
work[j]=d;
work[j+2]=0.0;

work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
i--;
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i]<TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
work[k-7]=work[i-3];
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=dN;
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=0.0;
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=work[i-5]/work[nn-7];
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=i-9;
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=-7;
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=-10;
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
nextColumn=n;
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
nextColumn=n;
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((d+i)>internalArray.length){
expandTo(startIndex+i);
}
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=i;
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=n-2*pingPong;
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=work[i-2];
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=dN1;
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=work[i-4]/work[np-2];
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super.increment(dN2);
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE+=((double)d-1)*TOLERANCE;
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
dMin=dN2;
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
eMin=0.0;
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
dMin=dN2;
eMin=0.0;

work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=Math.min(dMin,dN2);
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
eMin=Math.min(eMin,work[i]);
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
eMin=Math.min(eMin,work[i-1]);
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
dMin=dN2;
eMin=0.0;
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
dMin=dN2;
dMin=dN2;
eMin=0.0;

work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=Math.min(dMin,dN2);
if(work[i+2]<=TOLERANCE_2*d){
dMin=dN2;
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
eMin=0.0;
dMin=dN2;
eMin=0.0;

work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=Math.min(dMin,dN2);
if(work[i+2]<=TOLERANCE_2*d){
eMin=0.0;
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=Math.min(dMin,dN2);
if(work[i+2]<=TOLERANCE_2*d){
dMin=dN2;
eMin=0.0;

work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
dMin=dN2;
eMin=0.0;
dMin=dN2;
eMin=0.0;

work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=Math.min(dMin,dN2);
if(work[i+2]<=TOLERANCE_2*d){
dMin=dN2;
eMin=0.0;
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=Math.min(dMin,dN2);
if(work[i+2]<=TOLERANCE_2*d){
dMin=dN2;
dMin=dN2;
eMin=0.0;

work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=Math.min(dMin,dN2);
if(work[i+2]<=TOLERANCE_2*d){
eMin=0.0;
dMin=dN2;
eMin=0.0;

work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=Math.min(dMin,dN2);
if(work[i+2]<=TOLERANCE_2*d){
dMin=dN2;
eMin=0.0;
dMin=dN2;
eMin=0.0;

work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*TOLERANCE<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=y2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
x2=TOLERANCE;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
oldDelta=TOLERANCE;
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
x2=TOLERANCE;
oldDelta=TOLERANCE;

work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
x2=TOLERANCE;
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
oldDelta=TOLERANCE;
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
x2=TOLERANCE;
oldDelta=TOLERANCE;

d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n++;
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=TOLERANCE;
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=b2*(work[i]/work[i4-2]);
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=a2+TOLERANCE;
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(100*Math.max(TOLERANCE,TOLERANCE)<d||TOLERANCE<a2){
break;
}
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
outBlock=out.blocks[++outBlockIndex];
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
outBlock=out.blocks[++outBlockIndex];
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
mBlock=matrix.blocks[++mBlockIndex];
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
mBlock=matrix.blocks[++mBlockIndex];
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=eMin;
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
eMin=dN2;
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=TOLERANCE-TOLERANCE;
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
squaredSecondary[i]=0;
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
obs1=observed1[i];
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
obs2=observed2[i];
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
obs1=observed1[i];
obs2=observed2[i];

d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE*TOLERANCE>0.0){
d=TOLERANCE;
}else {
TOLERANCE=m;
}
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++n;
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=v*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i<0){
i=-i-2;
}
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=polynomials.length){
i--;
}
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(d<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=work[n-7]+(d+work[k-5]);
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n-3]*=work[k-7]/TOLERANCE;
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n-7]=TOLERANCE;
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(TOLERANCE-imagEigenvalues[i])<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
nearest=i;
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
nearest=i;
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
break;
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=range*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=cnst1*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
mIX=optima[i];
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
mIX=Double.NaN;
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i+1]=TOLERANCE;
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues[i+1]=TOLERANCE;
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=work[n];
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=imagEigenvalues[n];
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
dN1=work[j4p2+2];
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
dMin=dN1;
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
dN1=work[j4p2+2];
dMin=dN1;
eMin=0.0;

work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
dN=work[j4p2+2];
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
dMin=dN;
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
dN=work[j4p2+2];
dMin=dN;
eMin=0.0;

work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i]=Math.sqrt(ltI[i]);
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
nextColumn=i;
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
nextColumn=i;
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
mt[0]=mt[N-1];
d=work[i];
}else {
mt[0]=mt[N-1];
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
outBlock=out.blocks[++outBlockIndex];
d=work[i];
}else {
outBlock=out.blocks[++outBlockIndex];
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
mBlock=matrix.blocks[++mBlockIndex];
d=work[i];
}else {
mBlock=matrix.blocks[++mBlockIndex];
d*=work[i]/(d+work[i+2]);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE==0){
return ;
}
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
flipIfWarranted(n,2);
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initialSplits(n);
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=0;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=4*n-1;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tau=(work[1]-range[0])*MathUtils.EPSILON+2*minPivot;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ldlTDecomposition(TOLERANCE,d,n);
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
processGeneralBlock(n);
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
progressiveQuotientDifferenceWithShift(imagEigenvalues,imagEigenvalues,TOLERANCE);
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[j]=d;
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[j+2]=0.0;
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[j]=d;
work[j+2]=0.0;

work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
work[j]=d+work[i];
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+n0;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(eMin>=4*d){
diagMin=Math.min(eMin,work[i+4]);
offDiagMax=Math.max(d,work[i+2]);
}
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
diagMax=Math.max(qMax,work[i]+work[i+2]);
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
offDiagMin=Math.min(eMin,work[i+2]);
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(eMin>=4*d){
diagMin=Math.min(eMin,work[i+4]);
offDiagMax=Math.max(d,work[i+2]);
}
diagMax=Math.max(qMax,work[i]+work[i+2]);
offDiagMin=Math.min(eMin,work[i+2]);

if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n-2]=eMin;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin=-Math.max(0,eMin-2*Math.sqrt(diagMin*d));
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((d+i)>internalArray.length){
expandTo(startIndex+i);
}
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
pingPong=i;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==1){
return new double[]{0};
}
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE==0.0){
return TOLERANCE;
}
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
w[i]/=d;
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=pingPong;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
split=i/4;
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
diagMax=0;
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
offDiagMin=work[i+6];
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
previousEMin=work[i+7];
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
split=i/4;
diagMax=0;
offDiagMin=work[i+6];
previousEMin=work[i+7];

work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*pingPong-2]=eMin;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*pingPong-1]=eMin;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=n+1;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
bytes[bytesOut++]=(byte)d;
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(pingPong==bytes.length){
return ;
}
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
bytes[bytesOut++]=(byte)d;
if(pingPong==bytes.length){
return ;
}

if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
verifyInputArray(work,imagEigenvalues);
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :

for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
vector[i]++;
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[1]=TOLERANCE;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=rawData.length;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
divdiff[j]=(divdiff[j+1]-divdiff[j])/d;
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[n-1]=imagEigenvalues[n];
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues[n-1]+=imagEigenvalues[n]/d*work[n-1];
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
outBlock=out.blocks[++outBlockIndex];
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
outBlock=out.blocks[++outBlockIndex];
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
outBlock[outIndex++]=block[i*jWidth+jColumn];
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
mBlock=matrix.blocks[++mBlockIndex];
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
mBlock=matrix.blocks[++mBlockIndex];
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
block[i*jWidth+jColumn]=mBlock[mIndex++];
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
verifyInterval(minPivot,TOLERANCE);
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=x1+TOLERANCE;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=TOLERANCE-TOLERANCE;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
pingPong++;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n++;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
break;
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(d){
throw MathRuntimeException.createIllegalArgumentException("equals vertices {0} and {1} in simplex configuration",pingPong,tType);
}
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
list[target]=list[i];
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
list[i]=tType;
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
list[target]=list[i];
list[i]=tType;

if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
squaredSecondary[i]=0;
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
absDCurrent=Math.abs(main[i+1]);
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(TOLERANCE-d)<=TOLERANCE){
TOLERANCE=UnivariateRealSolverUtils.midpoint(min,max);
setResult(m,tType);
return m;
}
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++tType;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=range*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(countEigenValues(0.5*(TOLERANCE+TOLERANCE),tType,n)>=1){
right=0.5*(TOLERANCE+TOLERANCE);
}else {
left=0.5*(TOLERANCE+TOLERANCE);
}
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(Math.abs(TOLERANCE-imagEigenvalues[i])<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
nearest=i;
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
nearest=i;
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
c[i]=y[i];
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
d[i]=y[i];
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
c[i]=y[i];
d[i]=y[i];

if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(countEigenValues(0.5*(TOLERANCE+TOLERANCE),tType,n)>=n){
right=0.5*(TOLERANCE+TOLERANCE);
}else {
left=0.5*(TOLERANCE+TOLERANCE);
}
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pingPong==0){
throw MathRuntimeException.createIllegalArgumentException("permutation k ({0}) must be positive",k);
}
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
shuffle(getNatural(n),n-pingPong);
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i+1]=TOLERANCE;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues[i+1]=TOLERANCE;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
b1*=work[i4]/work[i4-2];
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
b2+=TOLERANCE;
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(100*TOLERANCE<d){
break;
}
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
b1*=work[i4]/work[i4-2];
b2+=TOLERANCE;
if(100*TOLERANCE<d){
break;
}

if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tType=-5;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i=d-2*pingPong;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=work[i-2];
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=dN1;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=work[i-4]/work[np-2];
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[d-9]>work[nn-11]){
return ;
}
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues[tType]=d*TOLERANCE+TOLERANCE-d*TOLERANCE;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues[tType]=Math.abs(imagEigenvalues[i]-imagEigenvalues[i]);
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(Double.isNaN(work[i])){
throw MathRuntimeException.createIllegalArgumentException("NaN weight at index {0}",i);
}
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(Double.isInfinite(work[i])){
throw MathRuntimeException.createIllegalArgumentException("Infinite weight at index {0}",i);
}
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(weights[i]>0.0){
containsPositiveWeight=true;
}
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(Double.isNaN(work[i])){
throw MathRuntimeException.createIllegalArgumentException("NaN weight at index {0}",i);
}
if(Double.isInfinite(work[i])){
throw MathRuntimeException.createIllegalArgumentException("Infinite weight at index {0}",i);
}
if(weights[i]>0.0){
containsPositiveWeight=true;
}

if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=pingPong;i-=4){
if(work[i+2]<TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=pingPong;i-=4){
if(work[i]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i]<TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=pingPong;i-=4){
if(work[i]<TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Double.isInfinite(TOLERANCE)||Double.isNaN(norm2)){
throw new EstimationException("unable to perform Q.R decomposition on the {0}x{1} jacobian matrix",tType,tType);
}
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=tType;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i]-xval[n]>xval[n]-xval[i]){
d=ileft;
}else {
edge=iright;
}
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
lJ[i]=0;
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
b1=TOLERANCE*(work[i4]/work[i4-2]);
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(100*Math.max(TOLERANCE,TOLERANCE)<TOLERANCE){
break;
}
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
b1=TOLERANCE*(work[i4]/work[i4-2]);
if(100*Math.max(TOLERANCE,TOLERANCE)<TOLERANCE){
break;
}

if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=Math.min(dMin,dN2);
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
eMin=Math.min(eMin,work[i-1]);
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
n=Math.max((int)(d*n),n+1);
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
oldt=TOLERANCE;
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
n=Math.max((int)(d*n),n+1);
oldt=TOLERANCE;

if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super.increment(dN2);
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE+=((double)d-1)*TOLERANCE;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tType>=n){
 final double Math.abs(work[tType]-TOLERANCE)=Math.abs(work[tType]-TOLERANCE);
 final double d=TOLERANCE*(Math.abs(olds)+Math.abs(s));
if((delta<=rLimit)||(delta<=TOLERANCE)){
setResult(s,i);
return TOLERANCE;
}
}
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(TOLERANCE<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
b1=d;
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i4]>work[i4-2]){
return ;
}
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
b2=d*(work[i4]/work[i4-2]);
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
a2=TOLERANCE+d;
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(100*Math.max(d,TOLERANCE)<TOLERANCE){
break;
}
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
b1=d;
if(work[i4]>work[i4-2]){
return ;
}
b2=d*(work[i4]/work[i4-2]);
a2=TOLERANCE+d;
if(100*Math.max(d,TOLERANCE)<TOLERANCE){
break;
}

if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
out[ranks[i].getPosition()]=pingPong;
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=pingPong;i-=4){
oldt=TOLERANCE;
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
olds=(4*TOLERANCE-d)/3.0;
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
olds=(4*TOLERANCE-d)/3.0;
oldt=TOLERANCE;

if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
nextColumn=i;
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
nextColumn=i;
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(Double.isInfinite(TOLERANCE)||Double.isNaN(TOLERANCE)){
throw new OptimizationException("unable to perform Q.R decomposition on the {0}x{1} jacobian matrix",tType,pingPong);
}
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(TOLERANCE==0.0){
break;
}
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
b1=TOLERANCE;
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
b2=TOLERANCE*(work[i4]/work[i4-2]);
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
a2=d+TOLERANCE;
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(100*Math.max(TOLERANCE,TOLERANCE)<d||TOLERANCE<d){
break;
}
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(TOLERANCE==0.0){
break;
}
b1=TOLERANCE;
b2=TOLERANCE*(work[i4]/work[i4-2]);
a2=d+TOLERANCE;
if(100*Math.max(TOLERANCE,TOLERANCE)<d||TOLERANCE<d){
break;
}

if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
qMax=2*(q-d);
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=eMin;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
eMin=dN2;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=TOLERANCE*nDev;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=m3-3.0*TOLERANCE+(n-1)*(n0-2);
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.sqrt(TOLERANCE*b2);
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=m4-4.0*TOLERANCE+6.0*TOLERANCE+((n*n0)-3*(n0-1))*(nDevSq*nDevSq);
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
ltI[i]=Math.sqrt(work[i]);
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=dN2-TOLERANCE;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=TOLERANCE/d;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE+=TOLERANCE;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
dMin=Math.min(dMin,dN);
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[tType+2]=dN;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n-pingPong-1]=eMin;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=-TOLERANCE*work[n]+TOLERANCE*qtbpj;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues[tType*n+pingPong]=TOLERANCE*TOLERANCE+TOLERANCE*work[k];
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=-TOLERANCE*work[tType]+TOLERANCE*qtbpj;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n-8]=sigma+work[pingPong-7];
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[4*n-4]=sigma+work[pingPong-3];
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n-=2;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==1){
new double[f.length][0]=0.5*(work[0]+f[1]);
transformed[1]=0.5*(f[0]-f[1]);
return transformed;
}
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isStrictlyIncreasing(work)){
throw MathRuntimeException.createIllegalArgumentException("knot values must be strictly increasing");
}
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.n=knots.length-1;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.work=new double[n+1];
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(work,0,this.knots,0,n+1);
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(d==n){
return ;
}
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[0]=0.0;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i>>1]=2.0*imagEigenvalues[n>>1];
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
++n;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==2){
return new double[]{work[0],yval[1]};
}
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(d<2){
throw new MathException("the bandwidth must be large enough to "+"accomodate at least 2 points. There are {0} ",i,2.0/n,TOLERANCE);
}
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(d<2){
throw new MathException("the bandwidth must be large enough to "+"accomodate at least 2 points. There are {0} ",n,2.0/n,TOLERANCE);
}
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
System.arraycopy(work,0,work,0,n);
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Arrays.sort(work);
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(work[n/2])<TOLERANCE){
break;
}
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkBinomial(i,n);
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n==1)||(k==i-1)){
return n;
}
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n>i/2)return binomialCoefficient(n,n-k);
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.pingPong=n;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==0){
throw new MathException("Loess expects at least 1 point");
}
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkAllFiniteReal(work,"all abscissae must be finite real numbers, but {0}-th is {1}");
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkAllFiniteReal(work,"all ordinatae must be finite real numbers, but {0}-th is {1}");
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
cachedVt.setEntry(Math.min(n,n)-1,minor,1.0);
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
cachedVt=MatrixUtils.createRealMatrix(i,m);
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
cachedV=MatrixUtils.createRealMatrix(i,n);
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i|=mask>>1;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i|=mask>>2;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i|=mask>>4;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
i|=mask>>8;
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(pingPong==0){
throw MathRuntimeException.createIllegalArgumentException("cutoff singular value is {0}, should be at most {1}",minPivot,work[0]);
}
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
getVT().walkInOptimizedOrder(new DefaultRealMatrixPreservingVisitor(){
  /** 
 * {@inheritDoc} 
 */
  @Override public void visit(  final int row,  final int column,  final double value){
    data[row][column]=value / singularValues[row];
  }
}
,0,pingPong-1,0,n-1);
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
outBlock=out.blocks[++outBlockIndex];
d=work[i];
}else {
outBlock=out.blocks[++outBlockIndex];
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
outBlock[outIndex++]=block[i*jWidth+jColumn];
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
outBlock=out.blocks[++outBlockIndex];
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
outBlock[outIndex++]=block[i*jWidth+jColumn];
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
outBlock=out.blocks[++outBlockIndex];
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
outBlock[outIndex++]=block[i*jWidth+jColumn];
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
outBlock=out.blocks[++outBlockIndex];
d=work[i];
}else {
outBlock=out.blocks[++outBlockIndex];
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
mBlock=matrix.blocks[++mBlockIndex];
d=work[i];
}else {
mBlock=matrix.blocks[++mBlockIndex];
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
block[i*jWidth+jColumn]=mBlock[mIndex++];
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
mBlock=matrix.blocks[++mBlockIndex];
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
block[i*jWidth+jColumn]=mBlock[mIndex++];
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
mBlock=matrix.blocks[++mBlockIndex];
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
block[i*jWidth+jColumn]=mBlock[mIndex++];
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
mBlock=matrix.blocks[++mBlockIndex];
d=work[i];
}else {
mBlock=matrix.blocks[++mBlockIndex];
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isNonSingular()){
throw new SingularMatrixException();
}
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkIndex(i+n-1);
for(int i=4*(n-2)+pingPong;i>=0;i-=4){
if(work[i+2]<=TOLERANCE_2*d){
work[i+2]=-0.0;
d=work[i];
}else {
d*=work[i]/(d+work[i+2]);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final int tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
work[k-7]=tmp;
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[k-7]=tmp;
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma)){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<=work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<=work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((work[i+3]<=TOLERANCE_2*work[i])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(work[i+2]<=TOLERANCE_2*sigma)){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<TOLERANCE_2*work[i])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<TOLERANCE_2*sigma)){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
split=i/4;
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
offDiagMin=work[i+6];
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
previousEMin=work[i+7];
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
split=i/4;
offDiagMin=work[i+6];
previousEMin=work[i+7];

 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
offDiagMin=Math.min(eMin,work[i+2]);
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
previousEMin=Math.min(eMin,work[i+3]);
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
offDiagMin=Math.min(eMin,work[i+2]);
previousEMin=Math.min(eMin,work[i+3]);

work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==j&&i<tmp){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i==j&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&i<tmp){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[j4p2+2]<work[j4-2])&&(MathUtils.SAFE_MIN*work[j4-2]<work[j4p2+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j-2])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j-2]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j-2])&&(MathUtils.SAFE_MIN*work[j-2]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=work[n-2];
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=dN1;
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tmp=work[n-4]/work[np-2];
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i-9]>work[nn-11]){
return ;
}
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=work[i-9]/work[nn-11];
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=i-13;
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[np-8]>work[i-6]||work[np-4]>tmp){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i-8]>work[i-6]&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&work[i-4]>tmp){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
dMin=dN2;
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
eMin=0.0;
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
dMin=dN2;
eMin=0.0;

 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
dMin=dN2;
eMin=0.0;
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
dMin=dN2;
dMin=dN2;
eMin=0.0;

 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
eMin=0.0;
dMin=dN2;
eMin=0.0;

 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
dMin=dN2;
eMin=0.0;
dMin=dN2;
eMin=0.0;

 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d+=TOLERANCE;
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tmp=work[n-13]/work[nn-15];
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=a2+tmp;
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
sin=1.0/Math.sqrt(1.0+TOLERANCE/imagEigenvalues[j]*cotan);
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
sin=d*imagEigenvalues[j]/TOLERANCE;
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=-TOLERANCE*work[j]+d*qtbpj;
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[j]=tmp;
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
t=work[k-7]+(d+work[k-5]);
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
work[k-7]=0.5*((work[i-7]-work[k-3])+work[k-5]);
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
t=work[k-7]+(d+work[k-5]);
work[k-7]=0.5*((work[i-7]-work[k-3])+work[k-5]);

 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
t=work[k-7]+(d+work[k-5]);
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[k-7]=0.5*((work[i-7]-work[k-3])+work[k-5]);
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
t=work[k-7]+(d+work[k-5]);
work[k-7]=0.5*((work[i-7]-work[k-3])+work[k-5]);

work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
imagEigenvalues[j*n+n]=d*TOLERANCE+TOLERANCE*imagEigenvalues[k];
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
sin=1.0/Math.sqrt(1.0+TOLERANCE/imagEigenvalues[j]*cotan);
d*=tmp;
}else {
sin=d*imagEigenvalues[j]/TOLERANCE;
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=-TOLERANCE*work[j]+d*qtbpj;
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
sin=1.0/Math.sqrt(1.0+TOLERANCE/imagEigenvalues[j]*cotan);
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[j]=tmp;
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
sin=1.0/Math.sqrt(1.0+TOLERANCE/imagEigenvalues[j]*cotan);
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=-TOLERANCE*work[j]+d*qtbpj;
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
sin=d*imagEigenvalues[j]/TOLERANCE;
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[j]=tmp;
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
sin=d*imagEigenvalues[j]/TOLERANCE;
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=-TOLERANCE*work[j]+d*qtbpj;
work[j]=tmp;
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=-TOLERANCE*work[j]+d*qtbpj;
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
sin=1.0/Math.sqrt(1.0+TOLERANCE/imagEigenvalues[j]*cotan);
d*=tmp;
}else {
sin=d*imagEigenvalues[j]/TOLERANCE;
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[j]=tmp;
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
sin=1.0/Math.sqrt(1.0+TOLERANCE/imagEigenvalues[j]*cotan);
d*=tmp;
}else {
sin=d*imagEigenvalues[j]/TOLERANCE;
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=-TOLERANCE*work[j]+d*qtbpj;
work[j]=tmp;
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
sin=1.0/Math.sqrt(1.0+TOLERANCE/imagEigenvalues[j]*cotan);
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=-TOLERANCE*work[j]+d*qtbpj;
work[j]=tmp;
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
sin=d*imagEigenvalues[j]/TOLERANCE;
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=-TOLERANCE*work[j]+d*qtbpj;
work[j]=tmp;
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
sin=1.0/Math.sqrt(1.0+TOLERANCE/imagEigenvalues[j]*cotan);
d*=tmp;
}else {
sin=d*imagEigenvalues[j]/TOLERANCE;
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((x[i]==x[k])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n!=n)&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(work[n]==x[n])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
TOLERANCE=Math.sqrt(TOLERANCE*b2);
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tmp>0.0&&gap2>TOLERANCE*dMin2/(1+TOLERANCE*b2)){
d=Math.max(TOLERANCE,a2*(1-TOLERANCE*a2));
}else {
tau=Math.max(s,a2*(1-cnst2*b2));
}
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
j--;
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(j<xval.length-1&&xval[right+1]-xval[i]<xval[i]-xval[left]){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(j<xval.length-1&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&work[j+1]-xval[i]<xval[i]-xval[n]){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&work[i-1]>=xval[i]){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((j+i)>internalArray.length){
expandTo(startIndex+i);
}
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
d=i;
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((realEigenvalues[i]==0)&&(imagEigenvalues[i]==0)){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((realEigenvalues[i]==0)&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(imagEigenvalues[i]==0)){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
obs1=observed1[i];
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
obs2=observed2[i];
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
obs1=observed1[i];
obs2=observed2[i];

work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE<knots[0]||TOLERANCE>knots[n]){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(TOLERANCE<work[0]&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&TOLERANCE>work[j]){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i<0){
i=-i-2;
}
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=polynomials.length){
i--;
}
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
mIY=optimaValues[i];
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
mIY=Double.NaN;
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i+1]=TOLERANCE;
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[i+1]=tmp;
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[j]=d*TOLERANCE+tmp;
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
work[j]=Math.abs(work[i]-work[i]);
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((j<=tmp)){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(j<=tmp)){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
if(d>4*Math.max(1.0E-15,TOLERANCE)){
return false;
}
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
if(d>4*Math.max(1.0E-15,TOLERANCE)){
return false;
}
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!d&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((i+1>=n)&&(Math.abs(TOLERANCE-TOLERANCE)<=Math.max(TOLERANCE,TOLERANCE*(Math.abs(TOLERANCE)+Math.abs(TOLERANCE))))){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((i+1>=n)&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(Math.abs(TOLERANCE-TOLERANCE)<=Math.max(TOLERANCE,TOLERANCE*(Math.abs(TOLERANCE)+Math.abs(TOLERANCE))))){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(TOLERANCE)<Math.abs(0.5*qMax)&&(TOLERANCE<qMax*(TOLERANCE-i))&&(TOLERANCE<qMax*(TOLERANCE-i))){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Math.abs(TOLERANCE)<Math.abs(0.5*qMax)&&(p<q*(TOLERANCE-i))&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(TOLERANCE<qMax*(TOLERANCE-i))){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<qMax*(TOLERANCE-i))&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<qMax*(TOLERANCE-i))){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
u=i+d;
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
e=((i<TOLERANCE)?TOLERANCE:TOLERANCE)-i;
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i+2]<=TOLERANCE_2*d){
work[i]=-0.0;
work[j]=d;
work[j+2]=0.0;
d=work[i+2];
}else if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i]<TOLERANCE_2*d){
work[i]=-0.0;
work[j]=d;
work[j+2]=0.0;
d=work[i+2];
}else if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(1.5*work[pingPong]<=TOLERANCE_2*d){
work[i]=-0.0;
work[j]=d;
work[j+2]=0.0;
d=work[i+2];
}else if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tmp<=TOLERANCE_2*d){
work[i]=-0.0;
work[j]=d;
work[j+2]=0.0;
d=work[i+2];
}else if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i]<=TOLERANCE_2*d){
r=n;
work[i]=-0.0;
work[j]=d;
work[j+2]=0.0;
d=work[i+2];
}else if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i]<=TOLERANCE_2*d){
offDiagMax=Math.max(qMax,work[i+2]);
work[i]=-0.0;
work[j]=d;
work[j+2]=0.0;
d=work[i+2];
}else if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i]<=TOLERANCE_2*d){
split=i/4;
work[i]=-0.0;
work[j]=d;
work[j+2]=0.0;
d=work[i+2];
}else if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i]<=TOLERANCE_2*d){
offDiagMin=work[i+6];
work[i]=-0.0;
work[j]=d;
work[j+2]=0.0;
d=work[i+2];
}else if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i]<=TOLERANCE_2*d){
previousEMin=work[i+7];
work[i]=-0.0;
work[j]=d;
work[j+2]=0.0;
d=work[i+2];
}else if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i]<=TOLERANCE_2*d){
split=i/4;
offDiagMin=work[i+6];
previousEMin=work[i+7];

work[i]=-0.0;
work[j]=d;
work[j+2]=0.0;
d=work[i+2];
}else if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i]<=TOLERANCE_2*d){
work[i]=-0.0;
work[j]=d;
work[j+2]=0.0;
d=work[i+2];
}else if((MathUtils.SAFE_MIN*work[j4+1]<work[j4-2])&&(MathUtils.SAFE_MIN*work[j4-2]<work[j4+1])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i]<=TOLERANCE_2*d){
work[i]=-0.0;
work[j]=d;
work[j+2]=0.0;
d=work[i+2];
}else if((MathUtils.SAFE_MIN*work[i+1]<work[j4-2])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i]<=TOLERANCE_2*d){
work[i]=-0.0;
work[j]=d;
work[j+2]=0.0;
d=work[i+2];
}else if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[i-2]<work[j4+1])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i]<=TOLERANCE_2*d){
work[i]=-0.0;
work[j]=d;
work[j+2]=0.0;
d=work[i+2];
}else if((MathUtils.SAFE_MIN*work[i+2]<work[i-2])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i]<=TOLERANCE_2*d){
work[i]=-0.0;
work[j]=d;
work[j+2]=0.0;
d=work[i+2];
}else if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+1])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i]<=TOLERANCE_2*d){
dMin=d;
work[i]=-0.0;
work[j]=d;
work[j+2]=0.0;
d=work[i+2];
}else if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i]<=TOLERANCE_2*d){
eMin=0.0;
work[i]=-0.0;
work[j]=d;
work[j+2]=0.0;
d=work[i+2];
}else if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i]<=TOLERANCE_2*d){
dMin=d;
eMin=0.0;

work[i]=-0.0;
work[j]=d;
work[j+2]=0.0;
d=work[i+2];
}else if((MathUtils.SAFE_MIN*work[i+2]<work[j])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i]<=TOLERANCE_2*d){
work[i]=-0.0;
work[j]=d;
work[j+2]=0.0;
d=work[i+2];
}else if((MathUtils.SAFE_MIN*work[j4+2]<work[j4-3])&&(MathUtils.SAFE_MIN*work[j4-3]<work[j4+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(work[i]<=TOLERANCE_2*d){
work[i]=-0.0;
work[j]=d;
work[j+2]=0.0;
d=work[i+2];
}else if((MathUtils.SAFE_MIN*work[i+2]<work[j4-3])&&(MathUtils.SAFE_MIN*work[j]<work[i+2])){
 final double tmp=work[i+2]/work[j];
work[j+2]=work[i]*tmp;
d*=tmp;
}else {
work[j+2]=work[i+2]*(work[i]/work[j]);
d*=work[i+2]/work[j];
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_3/math/math_81_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
Timeout!
