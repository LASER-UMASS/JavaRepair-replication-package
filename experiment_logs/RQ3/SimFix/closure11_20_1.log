java version "1.7.0_231"
OpenJDK Runtime Environment (rhel-2.6.19.1.el7_6-x86_64 u231-b01)
OpenJDK 64-Bit Server VM (build 24.231-b01, mixed mode)
Check out 482b7676 to /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/ OK
Init local repository...................................................... OK
Tag post-fix revision...................................................... OK
Run post-checkout hook..................................................... OK
Initialize fixed program version........................................... OK
Apply patch................................................................ OK
Initialize buggy program version........................................... OK
Diff 482b7676:bbf1b138..................................................... OK
Apply patch................................................................ OK
Tag pre-fix revision....................................................... OK
Check out program version: Closure-11b..................................... OK
Running ant (compile)...................................................... OK
Running ant (compile.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Running ant (run.dev.tests)................................................ OK
Failing tests: 2
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testIssue810
/home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1
PURIFY IS FALSE
=================================================
Project : closure_11	start : 19/10/15 16:39

Variable type inconsistancy of 'start' in method 'parseRegExp,String,String' with types : int and char
Variable type inconsistancy of 'end' in method 'parseRegExp,String,String' with types : int and char
Variable type inconsistancy of 'name' in method 'visit,NodeTraversal,Node,Node' with types : Name and String
Field type inconsistancy 'SUPER' with types : SimpleReference<SimpleSlot> and FunctionInjector.Reference
Field type inconsistancy 'type' with types : Type and JSType
Field type inconsistancy 'errors' with types : List<JSError> and JSError[]
Field type inconsistancy 'THIS' with types : Token and int
readFailedTest: path is /mnt/nfs/work1/brun/mmotwani/SimFix/d4j-info/failed_tests/closure/11.txt#ATTEMPTS: 2

# FAILING TESTS: 2
TIMEOUT : 18000000
===========
locations= [<com.google.javascript.jscomp.Compiler,2217>, <com.google.javascript.rhino.InputId,66>, <com.google.javascript.rhino.InputId,67>, <com.google.javascript.rhino.InputId,68>, <com.google.javascript.rhino.InputId,69>, <com.google.javascript.jscomp.TypeValidator,364>, <com.google.javascript.jscomp.TypeValidator,389>, <com.google.javascript.jscomp.TypeValidator,533>, <com.google.javascript.jscomp.TypeValidator,534>, <com.google.javascript.jscomp.TypeValidator,535>, <com.google.javascript.jscomp.TypeValidator,545>, <com.google.javascript.jscomp.TypeValidator,550>, <com.google.javascript.jscomp.TypeValidator,559>, <com.google.javascript.jscomp.TypeValidator,560>, <com.google.javascript.jscomp.TypeValidator,561>, <com.google.javascript.jscomp.TypeValidator,562>, <com.google.javascript.jscomp.TypeValidator,564>, <com.google.javascript.jscomp.TypeValidator,565>, <com.google.javascript.jscomp.TypeValidator,570>, <com.google.javascript.jscomp.TypeValidator,571>, <com.google.javascript.jscomp.TypeValidator,573>, <com.google.javascript.jscomp.TypeValidator,590>, <com.google.javascript.jscomp.TypeCheck,320>, <com.google.javascript.jscomp.TypeCheck,322>, <com.google.javascript.jscomp.TypeCheck,891>, <com.google.javascript.jscomp.TypeCheck,892>, <com.google.javascript.jscomp.TypeCheck,893>, <com.google.javascript.jscomp.TypeCheck,896>, <com.google.javascript.jscomp.TypeCheck,898>, <com.google.javascript.jscomp.TypeCheck,1055>, <com.google.javascript.jscomp.TypeCheck,1056>, <com.google.javascript.jscomp.TypeCheck,1057>, <com.google.javascript.jscomp.TypeCheck,1061>, <com.google.javascript.rhino.jstype.JSType,403>, <com.google.javascript.rhino.jstype.JSType,424>, <com.google.javascript.rhino.jstype.JSType,472>, <com.google.javascript.rhino.jstype.JSType,1109>, <com.google.javascript.jscomp.FunctionTypeBuilder,258>, <com.google.javascript.jscomp.FunctionTypeBuilder,259>, <com.google.javascript.jscomp.FunctionTypeBuilder,260>, <com.google.javascript.jscomp.FunctionTypeBuilder,269>, <com.google.javascript.jscomp.FunctionTypeBuilder,271>, <com.google.javascript.jscomp.FunctionTypeBuilder,272>, <com.google.javascript.jscomp.FunctionTypeBuilder,273>, <com.google.javascript.jscomp.FunctionTypeBuilder,274>, <com.google.javascript.jscomp.FunctionTypeBuilder,275>, <com.google.javascript.jscomp.FunctionTypeBuilder,276>, <com.google.javascript.jscomp.FunctionTypeBuilder,277>, <com.google.javascript.jscomp.FunctionTypeBuilder,278>, <com.google.javascript.jscomp.FunctionTypeBuilder,280>, <com.google.javascript.jscomp.FunctionTypeBuilder,286>, <com.google.javascript.jscomp.FunctionTypeBuilder,290>, <com.google.javascript.jscomp.FunctionTypeBuilder,303>, <com.google.javascript.jscomp.FunctionTypeBuilder,307>, <com.google.javascript.jscomp.FunctionTypeBuilder,309>, <com.google.javascript.jscomp.FunctionTypeBuilder,317>, <com.google.javascript.jscomp.FunctionTypeBuilder,318>, <com.google.javascript.jscomp.FunctionTypeBuilder,391>, <com.google.javascript.jscomp.FunctionTypeBuilder,393>, <com.google.javascript.jscomp.FunctionTypeBuilder,394>, <com.google.javascript.jscomp.FunctionTypeBuilder,395>, <com.google.javascript.jscomp.FunctionTypeBuilder,396>, <com.google.javascript.jscomp.FunctionTypeBuilder,400>, <com.google.javascript.jscomp.FunctionTypeBuilder,451>, <com.google.javascript.jscomp.FunctionTypeBuilder,488>, <com.google.javascript.jscomp.FunctionTypeBuilder,514>, <com.google.javascript.jscomp.FunctionTypeBuilder,529>, <com.google.javascript.jscomp.FunctionTypeBuilder,566>, <com.google.javascript.jscomp.FunctionTypeBuilder,571>, <com.google.javascript.jscomp.FunctionTypeBuilder,614>, <com.google.javascript.jscomp.FunctionTypeBuilder,687>, <com.google.javascript.jscomp.FunctionTypeBuilder,688>, <com.google.javascript.jscomp.FunctionTypeBuilder,689>, <com.google.javascript.jscomp.FunctionTypeBuilder,694>, <com.google.javascript.jscomp.FunctionTypeBuilder,695>, <com.google.javascript.jscomp.FunctionTypeBuilder,698>, <com.google.javascript.jscomp.FunctionTypeBuilder,703>, <com.google.javascript.jscomp.FunctionTypeBuilder,731>, <com.google.javascript.rhino.Node,455>, <com.google.javascript.rhino.Node,456>, <com.google.javascript.rhino.Node,457>, <com.google.javascript.rhino.Node,1200>, <com.google.javascript.rhino.Node,1901>, <com.google.javascript.rhino.Node,1919>, <com.google.javascript.jscomp.parsing.TypeSafeDispatcher,219>, <com.google.javascript.jscomp.parsing.IRFactory,631>, <com.google.javascript.jscomp.parsing.IRFactory,632>, <com.google.javascript.jscomp.parsing.IRFactory,641>, <com.google.javascript.jscomp.parsing.IRFactory,642>, <com.google.javascript.jscomp.parsing.IRFactory,643>, <com.google.javascript.jscomp.parsing.IRFactory,650>, <com.google.javascript.jscomp.parsing.IRFactory,654>, <com.google.javascript.jscomp.parsing.IRFactory,656>, <com.google.javascript.jscomp.parsing.IRFactory,657>, <com.google.javascript.jscomp.parsing.IRFactory,672>, <com.google.javascript.jscomp.parsing.IRFactory,735>, <com.google.javascript.jscomp.PrepareAst,238>, <com.google.javascript.jscomp.PrepareAst,242>, <com.google.javascript.jscomp.NodeTraversal,531>, <com.google.javascript.jscomp.NodeUtil,2834>, <com.google.javascript.jscomp.NodeUtil,2835>, <com.google.javascript.jscomp.NodeUtil,2837>, <com.google.javascript.jscomp.NodeUtil,3031>, <com.google.javascript.jscomp.NodeUtil,3054>, <com.google.javascript.jscomp.NodeUtil,3056>, <com.google.javascript.jscomp.NodeUtil,3057>, <com.google.javascript.jscomp.NodeUtil,3092>, <com.google.javascript.jscomp.Scope,516>, <com.google.javascript.jscomp.Scope,517>, <com.google.javascript.jscomp.Scope,518>, <com.google.javascript.jscomp.Scope,519>, <com.google.javascript.rhino.jstype.JSTypeRegistry,970>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1499>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1513>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1523>, <com.google.javascript.rhino.jstype.JSTypeRegistry,1571>, <com.google.javascript.rhino.jstype.NumberType,117>, <com.google.javascript.rhino.jstype.UnknownType,115>, <com.google.javascript.rhino.jstype.UnknownType,161>, <com.google.javascript.rhino.jstype.PrototypeObjectType,271>, <com.google.javascript.rhino.jstype.PrototypeObjectType,272>, <com.google.javascript.rhino.jstype.PrototypeObjectType,273>, <com.google.javascript.rhino.jstype.PrototypeObjectType,275>, <com.google.javascript.rhino.jstype.PrototypeObjectType,280>, <com.google.javascript.rhino.jstype.PrototypeObjectType,281>, <com.google.javascript.rhino.jstype.PrototypeObjectType,291>, <com.google.javascript.rhino.jstype.PrototypeObjectType,292>, <com.google.javascript.rhino.jstype.PrototypeObjectType,293>, <com.google.javascript.rhino.jstype.PrototypeObjectType,296>, <com.google.javascript.rhino.jstype.FunctionType,193>, <com.google.javascript.rhino.jstype.FunctionType,328>, <com.google.javascript.rhino.jstype.FunctionType,332>, <com.google.javascript.rhino.jstype.FunctionType,898>, <com.google.javascript.rhino.jstype.FunctionType,904>, <com.google.javascript.rhino.jstype.FunctionType,907>, <com.google.javascript.rhino.jstype.FunctionType,917>, <com.google.javascript.rhino.jstype.FunctionType,1010>, <com.google.javascript.rhino.jstype.FunctionType,1014>, <com.google.javascript.rhino.jstype.FunctionType,1015>, <com.google.javascript.rhino.jstype.FunctionType,1019>, <com.google.javascript.rhino.jstype.FunctionType,1030>, <com.google.javascript.rhino.jstype.FunctionType,1045>, <com.google.javascript.rhino.jstype.FunctionType,1094>, <com.google.javascript.rhino.jstype.FunctionType,1101>, <com.google.javascript.rhino.jstype.FunctionType,1107>, <com.google.javascript.rhino.jstype.FunctionType,1108>, <com.google.javascript.rhino.jstype.FunctionType,1112>, <com.google.javascript.rhino.jstype.FunctionType,1113>, <com.google.javascript.rhino.jstype.FunctionType,1269>, <com.google.javascript.rhino.jstype.FunctionParamBuilder,115>, <com.google.javascript.rhino.jstype.FunctionParamBuilder,116>, <com.google.javascript.rhino.jstype.FunctionParamBuilder,117>, <com.google.javascript.rhino.jstype.FunctionParamBuilder,118>, <com.google.javascript.rhino.jstype.ArrowType,81>, <com.google.javascript.rhino.jstype.ArrowType,85>, <com.google.javascript.rhino.jstype.ArrowType,91>, <com.google.javascript.rhino.jstype.ArrowType,114>, <com.google.javascript.rhino.jstype.ArrowType,115>, <com.google.javascript.rhino.jstype.ArrowType,116>, <com.google.javascript.rhino.jstype.ArrowType,117>, <com.google.javascript.rhino.jstype.ArrowType,118>, <com.google.javascript.rhino.jstype.ArrowType,119>, <com.google.javascript.rhino.jstype.ArrowType,120>, <com.google.javascript.rhino.jstype.ArrowType,126>, <com.google.javascript.rhino.jstype.ArrowType,127>, <com.google.javascript.rhino.jstype.ArrowType,128>, <com.google.javascript.rhino.jstype.ArrowType,129>, <com.google.javascript.rhino.jstype.ArrowType,132>, <com.google.javascript.rhino.jstype.ArrowType,138>, <com.google.javascript.rhino.jstype.ArrowType,143>, <com.google.javascript.rhino.jstype.ArrowType,149>, <com.google.javascript.rhino.jstype.ArrowType,150>, <com.google.javascript.rhino.jstype.ArrowType,152>, <com.google.javascript.rhino.jstype.ArrowType,157>, <com.google.javascript.rhino.jstype.ArrowType,161>, <com.google.javascript.rhino.jstype.ArrowType,164>, <com.google.javascript.rhino.jstype.ArrowType,170>, <com.google.javascript.rhino.jstype.ArrowType,178>, <com.google.javascript.rhino.jstype.ArrowType,179>, <com.google.javascript.rhino.jstype.ArrowType,180>, <com.google.javascript.rhino.jstype.ArrowType,181>, <com.google.javascript.rhino.jstype.ArrowType,182>, <com.google.javascript.rhino.jstype.ArrowType,183>, <com.google.javascript.rhino.jstype.ArrowType,185>, <com.google.javascript.rhino.jstype.ArrowType,194>, <com.google.javascript.rhino.jstype.ArrowType,195>, <com.google.javascript.rhino.jstype.ArrowType,196>, <com.google.javascript.rhino.jstype.ArrowType,199>, <com.google.javascript.rhino.jstype.ArrowType,205>, <com.google.javascript.rhino.jstype.ArrowType,208>, <com.google.javascript.rhino.jstype.ArrowType,209>, <com.google.javascript.rhino.jstype.ArrowType,212>, <com.google.javascript.rhino.jstype.ArrowType,294>, <com.google.javascript.rhino.jstype.ArrowType,299>, <com.google.javascript.rhino.jstype.ArrowType,300>, <com.google.javascript.rhino.jstype.ArrowType,301>, <com.google.javascript.rhino.jstype.ArrowType,302>, <com.google.javascript.rhino.jstype.ArrowType,303>, <com.google.javascript.rhino.jstype.ArrowType,308>, <com.google.javascript.rhino.jstype.ObjectType,627>]
======================com.google.javascript.jscomp.Compiler,2217
========
return errorFormat;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return cssRenamingMap;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return ideMode;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return acceptConstKeyword;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return checkTypes;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return propertyRenaming;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return HEURISTIC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return AGGRESSIVE_HEURISTIC;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
com.google.javascript.rhino.InputId,66
========
if(this==obj)return false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(obj==null)return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(this==null)return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(obj==null)return false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(this==null)return false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
com.google.javascript.rhino.InputId,67
========
if(obj==null)return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
com.google.javascript.rhino.InputId,68
========
if(obj==null||getClass()!=obj.getClass())return false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(getClass()!=o.getClass())return false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getClass()!=obj.getClass())return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(getClass()!=obj.getClass())return false;
if(getClass()!=obj.getClass())return false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(obj==null)return false;
if(getClass()!=obj.getClass())return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(getClass()!=obj.getClass())return false;
if(getClass()!=obj.getClass())return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
if(getClass()!=obj.getClass())return false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
if(getClass()!=obj.getClass())return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
com.google.javascript.rhino.InputId,69
========
if(this==obj)return false;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
return id.equals(((InputId)obj).id);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(this==o)return true;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
return id.equals(((InputId)obj).id);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this==obj)return true;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
return id.equals(m.id);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this==obj)return true;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
return key.equals(((InputId)obj).id);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this==obj)return true;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
return id.equals(m.key);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this==obj)return true;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
return id.equals(m.parts);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this==obj)return true;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
return meaning.equals(((InputId)obj).id);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this==obj)return true;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
return id.equals(m.meaning);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this==obj)return true;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
return id.equals(m.placeholders);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this==obj)return true;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
return desc.equals(((InputId)obj).id);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this==obj)return true;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
return id.equals(m.desc);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this==obj)return true;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
return sourceName.equals(((InputId)obj).id);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this==obj)return true;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
return id.equals(m.sourceName);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this==obj)return true;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
if(!(obj instanceof CharRanges)){
return false;
}
return id.equals(((InputId)obj).id);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(obj==null)return true;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
return id.equals(((InputId)obj).id);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(this==null)return true;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
return id.equals(((InputId)obj).id);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(this==value)return true;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
return id.equals(((InputId)obj).id);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this==obj)return true;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
return id.equals(that.body);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this==obj)return true;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
if(!(obj instanceof LookaheadAssertion)){
return false;
}
return id.equals(((InputId)obj).id);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this==newName)return true;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
return id.equals(((InputId)obj).id);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this==obj)return true;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
if(!(obj instanceof Repetition)){
return false;
}
return id.equals(((InputId)obj).id);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this==obj)return true;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
return reference.equals(((InputId)obj).id);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this!=obj)return true;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
return id.equals(((InputId)obj).id);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(this!=obj)return false;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
return id.equals(((InputId)obj).id);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(this==null)return false;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
return id.equals(((InputId)obj).id);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(this!=null)return true;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
return id.equals(((InputId)obj).id);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(this!=null)return false;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
return id.equals(((InputId)obj).id);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(this==obj)return true;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
return propName.equals(((InputId)obj).id);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this==obj)return true;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
return id.equals(id);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(this==obj)return true;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
Preconditions.checkNotNull(obj);
return id.equals(((InputId)obj).id);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this==obj)return true;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
return id.equals(state.out);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this==obj)return true;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
return id.equals(state.in);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this==obj)return true;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
return varName.equals(((InputId)obj).id);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this==obj)return true;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
return labelName.equals(((InputId)obj).id);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this==obj)return true;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
return id.toUpperCase().equals(name);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this==obj)return true;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
return name.equals(((InputId)obj).id);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this==obj)return true;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
if(id.isEmpty()||!Character.isUpperCase(name.charAt(0))){
return false;
}
return id.equals(((InputId)obj).id);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this==obj)return true;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
return id.equals(CrossModuleMethodMotion.STUB_METHOD_NAME);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this==obj)return true;
if(obj==null)return false;
if(getClass()!=obj.getClass())return false;
return id.equals(CrossModuleMethodMotion.UNSTUB_METHOD_NAME);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
com.google.javascript.jscomp.TypeValidator,364
========
if(ownerFn.isInterface()&&bType.isFunctionType()){
return true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(hasAnySingletonTypeTags()&&rightType.isFunctionType()){
return true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerFn.isInterface()&&propType.isFunctionType()){
return true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(ownerFn.isConstructor()||ctor.isInterface());
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerFn.isInterface()&&rightType.isConstructor()){
return true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(ownerFn.isInterface()&&ownerType.isFunctionType()){
return true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(ownerFn.isConstructor()&&rightType.isFunctionType()){
return true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(ownerFn.isInterface()&&iArgumentType.isFunctionType()){
return true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerFn.isInterface()&&nodeType.isFunctionType()){
return true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerFn.isInterface()&&required.isFunctionType()){
return true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(hasAnySingletonTypeTags()&&rightType.isFunctionType()){
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerFn.isInterface()&&rightType.setValidator(new ImplementedTypeValidator())){
return true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerFn.isInterface()&&maybeInterType.isFunctionType()){
return true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerFn.isInterface()&&rightType.matchesNumberContext()){
return true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isConstructor()&&rightType.isFunctionType()){
return true;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(ownerType.isFunctionPrototypeType()){
if(ownerFn.isInterface()){
return true;
}
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.isFunctionPrototypeType()){
if(this.isInterface()){
return false;
}
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.isFunctionPrototypeType()){
if(ownerFn.isInterface()){
return true;
}
if(this.isInterface()){
return false;
}

FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.isFunctionPrototypeType()){
if(ownerFn.isConstructor()){
return ownerFn.getInstanceType();
}
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.isFunctionPrototypeType()){
if(isInterface()){
for(ObjectType ownerType : getExtendedInterfaces()){
if(ownerType.getConstructor()!=null){
ownerType.getConstructor().addSubType(this);
}
}
}
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(isConstructor()||isInterface());
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(getInstanceType().hasProperty(propName));
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.isFunctionPrototypeType()){
valueType=ownerFn.getReturnType();
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.isFunctionPrototypeType()){
valueType=ownerFn.getParametersNode().getFirstChild().getJSType();
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.isRecordType()){
return RecordType.isSubtype(this,that.toMaybeRecordType());
}
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(ownerFn);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.isFunctionPrototypeType()){
registerIfMismatch(ownerFn.getReturnType(),ownerType.toMaybeFunctionType().getReturnType(),src);
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.isFunctionPrototypeType()){
if(ownerFn.isConstructor()){
JSType owner.getJSType()=owner.getJSType();
return ;
}
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.isFunctionPrototypeType()){
n.setJSType(ownerFn.getReturnType());
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.isFunctionPrototypeType()){
backwardsInferenceFromCallSite(n,ownerFn);
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.isFunctionPrototypeType()){
n.setJSType(ownerFn.getReturnType());
backwardsInferenceFromCallSite(n,ownerFn);

FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.isFunctionPrototypeType()){
result=null;
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.getJSType().isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(ownerType.isConstructor()||type.isInterface());
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return false;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(ownerType.isFunctionPrototypeType()){
if(ownerFn.getSource()!=null){
return true;
}
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ownerFn=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rightType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rightType==null){
rightType=getNativeType(UNKNOWN_TYPE);
}
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(ownerType.isFunctionPrototypeType()){
if(ownerFn.getReturnType()==null){
returnType=getNativeType(VOID_TYPE);
}
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.isFunctionPrototypeType()){
if(n.getFirstChild()==null){
actualReturnType=getNativeType(VOID_TYPE);
valueNode=n;
}else {
actualReturnType=getJSType(n.getFirstChild());
}
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.isFunctionPrototypeType()){
if(ownerFn.getReturnType()==null){
returnType=getNativeType(VOID_TYPE);
}
if(n.getFirstChild()==null){
actualReturnType=getNativeType(VOID_TYPE);
valueNode=n;
}else {
actualReturnType=getJSType(n.getFirstChild());
}

FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
ownerType.setNode(n);
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(shouldReport){
ensureTyped(t,owner,rightType);
}else {
ensureTyped(t,key);
}
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return false;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=n.getLastChild();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ownerType=getJSType(owner);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ownerFn=getJSType(n);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ownerType=getJSType(owner);
ownerFn=getJSType(n);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return ;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rightType==null){
rightType=getNativeType(UNKNOWN_TYPE);
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
if(t.getScope().getVar(n.getQualifiedName())!=null){
if(t.getScope().getVar(n.getQualifiedName()).isTypeInferred()){
return ;
}
if(NodeUtil.getRootOfQualifiedName(n).isThis()&&t.getScope()!=t.getScope().getVar(n.getQualifiedName()).getScope()){
return ;
}
if(t.getScope().getVar(n.getQualifiedName()).getType()!=null){
leftType=t.getScope().getVar(n.getQualifiedName()).getType();
}
}
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ensureTyped(t,n,BOOLEAN_TYPE);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
if(ownerType==null||ownerType.toObjectType()==null){
return ;
}
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
if(ownerType==null||ownerType.toObjectType()==null){
return ;
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(shouldReport){
ObjectType ownerType.dereference()=ownerType.dereference();
if(dereferenced!=null){
type=dereferenced;
}
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
if(ownerFn.getReturnType()==null){
returnType=getNativeType(VOID_TYPE);
}
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
if(owner==null){
actualReturnType=getNativeType(VOID_TYPE);
valueNode=n;
}else {
actualReturnType=getJSType(owner);
}
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
if(ownerFn.getReturnType()==null){
returnType=getNativeType(VOID_TYPE);
}
if(owner==null){
actualReturnType=getNativeType(VOID_TYPE);
valueNode=n;
}else {
actualReturnType=getJSType(owner);
}

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.setJSType(typeA);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
if(this.isInterface()){
return false;
}
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.putBooleanProp(Node.INFERRED_FUNCTION,true);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.putBooleanProp(Node.INFERRED_FUNCTION,true);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.putBooleanProp(Node.INFERRED_FUNCTION,true);
registerMismatch(rightType,leftType,null);
}else {
n.putBooleanProp(Node.INFERRED_FUNCTION,true);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,OBJECT_TYPE);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
return false;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,OBJECT_TYPE);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,STRING_TYPE);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,NUMBER_TYPE);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
n.children().iterator().next();
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.setJSType(rightType);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ensureTyped(t,n);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,NUMBER_STRING);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
type=ownerType.getType().evaluate(t.getScope(),typeRegistry);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
type=ownerType.getType().evaluate(t.getScope(),typeRegistry);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(!n.isFunction()||leftType.isFunctionType());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.getJSType()==null){
n.setJSType(leftType);
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(!n.isFunction()||leftType.isFunctionType());
if(n.getJSType()==null){
n.setJSType(leftType);
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
if(n.isGetProp()&&!t.inGlobalScope()){
return true;
}
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
if(n.isGetProp()&&!t.inGlobalScope()){
return true;
}
return false;

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
if(n.isGetProp()&&!t.inGlobalScope()){
return true;
}
return false;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(ownerType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerIfMismatch(ownerFn.getReturnType(),ownerType.toMaybeFunctionType().getReturnType(),src);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
registerIfMismatch(ownerFn.getReturnType(),ownerType.toMaybeFunctionType().getReturnType(),src);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
childType=rightType.autobox();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
childType=rightType.autobox();
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.isGetProp()&&ownerType.isAssign());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.getJSType()==null&&owner.isFunction()){
varType=parent.getJSType();
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
backwardsInferenceFromCallSite(n,ownerFn);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType==null){
return "";
}else if(type.isFunctionType()){
return getFunctionAnnotation(owner);
}else if(type.isEnumType()){
return "/** @enum {"+type.toMaybeEnumType().getElementsType().toAnnotationString();
}else if(!type.isUnknownType()&&!type.isEmptyType()){
return "/** @type {"+node.getJSType().toAnnotationString();
}else {
return "";
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
defineSlot(n,n,typeRegistry.getNativeObjectType(UNKNOWN_TYPE),true);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType!=null&&(stub.isExtern||ownerType.isFunctionPrototypeType())){
ownerType.defineInferredProperty(propName,typeRegistry.getNativeObjectType(UNKNOWN_TYPE),n);
}else {
typeRegistry.registerPropertyOnType(propName,ownerType==null?unknownType:ownerType);
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
rightType=src.restrictByNotNullOrUndefined();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
if(ownerType.getJSType()!=null){
return getTypeDeprecationInfo(ownerType.getJSType())!=null;
}
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!owner.isVarArgs()||owner.isOptionalArg()&&owner.isVarArgs()||owner.isOptionalArg()){
boolean owner.isVarArgs()&&(ownerType==null||thatParamType.isUnknownType()||thatParamType.isNoType())=owner.isVarArgs()&&(ownerType==null||thatParamType.isUnknownType()||thatParamType.isNoType());
if(!isTopFunction){
return false;
}
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
tryDefineLexicalQualifiedNameRef(NodeUtil.getBestLValueName(n),n);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
tryDefineLexicalQualifiedNameRef(NodeUtil.getBestLValueName(n),n);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
addSymbolUse(propName,t.getModule(),PROPERTY);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ObjectType.cast(dereference(n.getFirstChild().getJSType()))!=null){
String getPropertyDeprecationInfo(ObjectType.cast(dereference(n.getFirstChild().getJSType())),n.getLastChild().getString())=getPropertyDeprecationInfo(objectType,n.getLastChild().getString());
if(deprecationInfo!=null&&shouldEmitDeprecationWarning(t,n,n)){
if(!deprecationInfo.isEmpty()){
compiler.report(t.makeError(n,DEPRECATED_PROP_REASON,propertyName,ownerType.getReadableJSTypeName(n.getFirstChild(),true),deprecationInfo));
}else {
compiler.report(t.makeError(n,DEPRECATED_PROP,propertyName,validator.getReadableJSTypeName(n.getFirstChild(),true)));
}
}
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
ensureTyped(t,n);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
ensureTyped(t,n);
return ;

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
ensureTyped(t,n);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ownerType.isEnumType()){
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.FUNCTION :

if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super.visit(t,n,n);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
if(ownerType.toMaybeFunctionType().getJSDocInfo()!=null&&ownerType.toMaybeFunctionType().getJSDocInfo().getAssociatedNode()!=null){
isExtern=ownerType.toMaybeFunctionType().getJSDocInfo().getAssociatedNode().isFromExterns();
}
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
if(ownerType.toMaybeFunctionType().isOrdinaryFunction()&&!ownerType.toMaybeFunctionType().getTypeOfThis().isUnknownType()){
report(t,n,EXPECTED_THIS_TYPE,ownerType.toMaybeFunctionType().toString());
}
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
visitParameterList(t,n,ownerType.toMaybeFunctionType());
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
ensureTyped(t,n,ownerType.toMaybeFunctionType().getReturnType());
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
if(ownerType.toMaybeFunctionType().getJSDocInfo()!=null&&ownerType.toMaybeFunctionType().getJSDocInfo().getAssociatedNode()!=null){
isExtern=ownerType.toMaybeFunctionType().getJSDocInfo().getAssociatedNode().isFromExterns();
}
if(ownerType.toMaybeFunctionType().isOrdinaryFunction()&&!ownerType.toMaybeFunctionType().getTypeOfThis().isUnknownType()){
report(t,n,EXPECTED_THIS_TYPE,ownerType.toMaybeFunctionType().toString());
}
visitParameterList(t,n,ownerType.toMaybeFunctionType());
ensureTyped(t,n,ownerType.toMaybeFunctionType().getReturnType());

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.CATCH :

if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.POS :

if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
owner=addMarker(ownerFn,nodeToInsertAfter,null);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Iterables.addAll(Sets.newTreeSet(ALPHA),ownerFn.getAllImplementedInterfaces());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.copyNameAnnotations(n.getLastChild(),NodeUtil.newName(ownerType.getCodingConvention(),FOUND_REQUIRED,n,propName));
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getJSType()!=null){
NodeUtil.newName(ownerType.getCodingConvention(),FOUND_REQUIRED,n,propName).setJSType(type);
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
owner.replaceChild(n,NodeUtil.newName(ownerType.getCodingConvention(),FOUND_REQUIRED,n,propName));
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ownerType.reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(String FOUND_REQUIRED : ownerFn.getOwnPropertyNames()){
ownerType.defineNameIfNotExists(propName+".prototype.",shouldReport);
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
propName=n.getLastChild().getString();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(isConstructor()||isInterface());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(getInstanceType().hasProperty(propName));
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
functionType=ownerType.toMaybeFunctionType();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
functionType=ownerType.toMaybeFunctionType();
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(owner);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(owner.isName());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(owner.getJSType()==null){
return ConcreteType.ALL;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(owner);
Preconditions.checkArgument(owner.isName());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.INC :

if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==ownerType.getRootNode())return ;
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
super.visit(t,n,owner);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
if(FOUND_REQUIRED.equals(n.getString())){
return ;
}
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
if(FOUND_REQUIRED.equals(n.getString())){
return ;
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
if(ownerType==null){
break;
}
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
if(ownerFn==null){
break;
}
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
retType=createUnionWithSubTypes(createType(ownerFn.getReturnType()));
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
if(ownerType==null){
break;
}
if(ownerFn==null){
break;
}
retType=createUnionWithSubTypes(createType(ownerFn.getReturnType()));

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
if(ownerType==null){
break;
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
if(ownerFn==null){
break;
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
retType=createUnionWithSubTypes(createType(ownerFn.getReturnType()));
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
if(ownerType==null){
break;
}
if(ownerFn==null){
break;
}
retType=createUnionWithSubTypes(createType(ownerFn.getReturnType()));

mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
owner.replaceChild(n,owner);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
ownerType.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
owner.replaceChild(n,owner);
ownerType.reportCodeChange();

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
owner.replaceChild(n,owner);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(ownerFn!=null&&!define.isGlobal()){
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
owner.replaceChild(owner,ownerFn);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
ownerType.addSuppression("duplicate");
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
ownerType.addSuppression("duplicate");
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.getString().isEmpty()){
Preconditions.checkState(owner.isFunction());
Preconditions.checkState(NodeUtil.isFunctionExpression(parent));
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getEnclosingDeclNameNode(t)==null){
reportBadBaseClassUse(t,n,"Could not find enclosing method.");
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(OBJECT_PROPERTY_STRING.equals(n.getQualifiedName())){
Node n=IR.name(EXTERN_OBJECT_PROPERTY_STRING);
newName.copyInformationFrom(n);
owner.replaceChild(n,newName);
ownerType.reportCodeChange();
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!EXTERN_OBJECT_PROPERTY_STRING.equals(ownerFn.getQualifiedName())){
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getChildCount()!=3){
ownerType.report(t.makeError(n,INVALID_NUM_ARGUMENTS_ERROR,""+n.getChildCount()));
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
findFunctionExpressions(t,owner);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
findFunctionExpressions(t,owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ownerType=ownerFn.getChildAtIndex(1);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ownerType.isObjectLit()&&!(objectToLoopOver.isArrayLit()&&isArrayLitValidForExpansion(objectToLoopOver))){
t.report(n,JQUERY_UNABLE_TO_EXPAND_INVALID_LIT_ERROR,(String)null);
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ownerFn.isDeclared(ownerType.getString(),false)){
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.isRegistered()){
compiler.report(t.makeError(n,TWEAK_MULTIPLY_REGISTERED_ERROR,FOUND_REQUIRED));
break;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case OVERRIDE_DEFAULT_VALUE :

if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkNoTypeCheckSection(n,true);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.THIS :

if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(owner.isFunction()&&n.getString().length()==0){
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType==null){
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.isExtern()){
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getNativeType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
if(ownerFn==null?null:objType.getIndexType()!=null&&!ownerFn==null?null:objType.getIndexType().isUnknownType()){
JSType ownerType=rightType.getGreatestSubtype(ownerFn==null?null:objType.getIndexType());
if(!ownerType.isEmptyType()){
iterKeyType=ownerType;
}
}
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
NodeUtil.copyNameAnnotations(owner,ownerFn);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
NodeUtil.copyNameAnnotations(owner,ownerFn);
compiler.reportCodeChange();

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
NodeUtil.copyNameAnnotations(owner,ownerFn);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
NodeUtil.copyNameAnnotations(owner,ownerFn);
compiler.reportCodeChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerFn==null?null:var.getJSDocInfo()!=null&&docInfo.isDeprecated()&&shouldEmitDeprecationWarning(t,n,n)){
if(docInfo.getDeprecationReason()!=null){
ownerType.report(t.makeError(n,DEPRECATED_NAME_REASON,n.getString(),docInfo.getDeprecationReason()));
}else {
compiler.report(t.makeError(n,DEPRECATED_NAME,n.getString()));
}
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(t.getScopeDepth()<2){
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isGetProp()&&n==owner.getFirstChild()&&NodeUtil.isAssignmentOp(parent)){
return false;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ownerFn.isGetProp()){
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ownerType.isString()){
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
visit(t,owner,n,ownerType.getString());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
ownerType.setNode(n);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
ownerType.setNode(n);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
owner.replaceChild(n,n);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
Preconditions.checkState(n.isName());
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
updateAssignAllowedStack(n,false);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
owner.replaceChild(n,n);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
Preconditions.checkState(n.isName());
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(propName==null||qName.isEmpty()){
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType==null||var.isLocal()||var.isExtern()){
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(null==null){
reportBadBaseClassUse(t,n,"Could not find goog.inherits for base class");
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.replaceChild(owner,NodeUtil.newQualifiedNameNode(compiler.getCodingConvention(),String.format("%s.call",null.getQualifiedName()),callee,"goog.base"));
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
compiler.reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
if(n.getString().isEmpty()){
return ;
}
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
if(ownerFn!=null){
info=ownerFn.getJSDocInfo();
}
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
if(n.getString().isEmpty()){
return ;
}
if(ownerFn!=null){
info=ownerFn.getJSDocInfo();
}

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(n.getString().isEmpty()){
return ;
}
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
if(ownerFn!=null){
info=ownerFn.getJSDocInfo();
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(n.getString().isEmpty()){
return ;
}
if(ownerFn!=null){
info=ownerFn.getJSDocInfo();
}

if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
ownerFn.setJSType(n);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
owner.replaceChild(n,ownerFn);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
ownerType.reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
ownerFn.setJSType(n);
owner.replaceChild(n,ownerFn);
ownerType.reportCodeChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.getFunctionId(n)<0){
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!shouldReport){
for(Node n : n.getAncestors()){
if(NodeUtil.isControlStructure(ancestor)){
ownerType.report(t.makeError(n,CONDITIONAL_ID_GENERATOR_CALL));
return ;
}
}
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ownerFn.isString()){
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!NodeUtil.isReferenceName(n)){
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.getScope().isGlobal()){
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propName==null||!enclosingQname.endsWith(".prototype."+owner.getString())){
reportBadBaseClassUse(t,n,"Enclosing method does not match "+owner.getString());
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.replaceChild(n,NodeUtil.newQualifiedNameNode(ownerType.getCodingConvention(),String.format("%s.superClass_.%s.call",ownerFn.getQualifiedName(),owner.getString()),callee,"goog.base"));
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.removeChild(owner);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.removeChild(owner);
if(bothIntrinsics(rightType,leftType)){
return ;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ownerType.reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
return ;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.removeChild(owner);
ownerType.reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.removeChild(owner);
ownerType.reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
return ;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.getString().length()==0){
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(shouldReport&&ownerType!=null){
fnType=ownerType.restrictByNotNullOrUndefined().toMaybeFunctionType();
}
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.contains(n))return ;
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n=n.getNext();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
if(canReplaceWithSetProp(n.getLastChild(),n,n)){
String n.getLastChild().getString()=n.getLastChild().getString();
ownerType.get(n.getLastChild().getString()).recordMutator(t);
}
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(owner.getNext()!=null){
FOUND_REQUIRED=arg.getNext().getString();
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(typeA==null){
type=typeRegistry.createAnonymousObjectType();
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setDeferredType(owner,typeA);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
processObjectLitProperties(owner,ObjectType.cast(objectLit.getJSType()),!false);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(shouldReport&&!shouldReport){
reportWarning(CONSTRUCTOR_REQUIRED,"@struct",propName);
}else if(shouldReport&&!isConstructor){
reportWarning(CONSTRUCTOR_REQUIRED,"@dict",fnName);
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
replaceVarWithAssignment(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(owner.isFunction());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(ownerFn==null){
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.putProp(Node.ORIGINALNAME_PROP,FOUND_REQUIRED);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.putProp(Node.ORIGINALNAME_PROP,FOUND_REQUIRED);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.putProp(Node.ORIGINALNAME_PROP,FOUND_REQUIRED);
registerMismatch(rightType,leftType,null);
}else {
n.putProp(Node.ORIGINALNAME_PROP,FOUND_REQUIRED);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.setString(propName);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.setString(propName);
compiler.reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
if(ownerFn!=null&&ownerFn.isLocal()){
return ;
}
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerFn!=null&&ownerFn.isLocal()){
return ;
}
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
this.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return owner;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
this.reportCodeChange();
return owner;

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
this.reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
IR.objectlit().setJSType(ownerType.getJSType());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
IR.objectlit().setJSDocInfo(new JSDocInfo());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return n;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return n;

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
Preconditions.checkState(ownerType.getLastChild()==n);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
Preconditions.checkState(ownerType.getLastChild()==n);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n!=null){
ownerFn.addChildToBack(returnRhs);
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.addChildToFront(ownerFn);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
ownerType.clear();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
ownerType.clear();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
validateVar(n);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :

if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
owner.replaceChild(n,IR.exprResult(IR.assign(IR.getprop(IR.name("module"),IR.string("exports")),n)).useSourceInfoFromForTree(n));
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
owner.replaceChild(n,IR.exprResult(IR.assign(IR.getprop(IR.name("module"),IR.string("exports")),n)).useSourceInfoFromForTree(n));
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return owner;

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return owner;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return owner;
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return owner;
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.replaceChild(n,owner);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.replaceChild(n,owner);
reportCodeChange();
return owner;

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
NodeUtil.removeChild(n,n);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.replaceChild(n,owner);
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.replaceChild(n,owner);
return owner;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.replaceChild(n,owner);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
NodeUtil.removeChild(n,n);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
NodeUtil.removeChild(n,n);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return owner;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
NodeUtil.removeChild(n,n);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.replaceChild(n,owner);
reportCodeChange();
return owner;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.replaceChild(n,owner);
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
NodeUtil.removeChild(n,n);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.replaceChild(n,owner);
return owner;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
NodeUtil.removeChild(n,n);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return owner;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
NodeUtil.removeChild(n,n);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.replaceChild(n,owner);
reportCodeChange();
return owner;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
NodeUtil.removeChild(n,n);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
ownerType.addChildToBack(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
ownerType.addChildToBack(n);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
ownerType.addChildToBack(owner);
ownerType.addChildToBack(n);

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
if(NodeUtil.isImmutableValue(n)){
replacementNode=IR.falseNode();
}else if(owner.isName()&&"Object".equals(owner.getString())){
replacementNode=IR.trueNode();
}
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.isInstanceOf());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(owner==null){
return n;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(owner.isGetterDef()){
owner=IR.call(replacement);
replacement.putBooleanProp(Node.FREE_CALL,true);
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.getParent().replaceChild(n,owner.detachFromParent());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.getParent().replaceChild(n,owner.detachFromParent());
reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.isName());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isCandidateUsage(n)){
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.isName());
if(ownerFn==null){
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
maybeAddStringNodeToSymbolTable(n.getFirstChild().getNext());
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
maybeAddStringNodeToSymbolTable(n.getFirstChild().getNext());
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.isFunction());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(IR.and(owner,n.detachFromParent()).srcref(cond));
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildrenToBack(owner.detachFromParent());
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(IR.and(owner,n.detachFromParent()).srcref(cond));
n.addChildrenToBack(owner.detachFromParent());
reportCodeChange();
return n;

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(IR.and(owner,n.detachFromParent()).srcref(cond));
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.addChildrenToBack(owner.detachFromParent());
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(IR.and(owner,n.detachFromParent()).srcref(cond));
n.addChildrenToBack(owner.detachFromParent());
reportCodeChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildrenToBack(owner.detachFromParent());
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildrenToBack(owner.detachFromParent());
return n;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildrenToBack(owner.detachFromParent());
registerMismatch(rightType,leftType,null);
}else {
n.addChildrenToBack(owner.detachFromParent());
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.addChildrenToBack(owner.detachFromParent());
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return n;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.addChildrenToBack(owner.detachFromParent());
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return n;
registerMismatch(rightType,leftType,null);
}else {
n.addChildrenToBack(owner.detachFromParent());
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return n;
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.addChildrenToBack(owner.detachFromParent());
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildrenToBack(owner.detachFromParent());
reportCodeChange();
return n;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildrenToBack(owner.detachFromParent());
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.addChildrenToBack(owner.detachFromParent());
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildrenToBack(owner.detachFromParent());
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildrenToBack(owner.detachFromParent());
return n;
registerMismatch(rightType,leftType,null);
}else {
n.addChildrenToBack(owner.detachFromParent());
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildrenToBack(owner.detachFromParent());
return n;
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildrenToBack(owner.detachFromParent());
registerMismatch(rightType,leftType,null);
}else {
n.addChildrenToBack(owner.detachFromParent());
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return n;
registerMismatch(rightType,leftType,null);
}else {
n.addChildrenToBack(owner.detachFromParent());
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return n;
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.addChildrenToBack(owner.detachFromParent());
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return n;
registerMismatch(rightType,leftType,null);
}else {
n.addChildrenToBack(owner.detachFromParent());
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildrenToBack(owner.detachFromParent());
reportCodeChange();
return n;
registerMismatch(rightType,leftType,null);
}else {
n.addChildrenToBack(owner.detachFromParent());
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildrenToBack(owner.detachFromParent());
reportCodeChange();
return n;
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildrenToBack(owner.detachFromParent());
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.addChildrenToBack(owner.detachFromParent());
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildrenToBack(owner.detachFromParent());
return n;
registerMismatch(rightType,leftType,null);
}else {
n.addChildrenToBack(owner.detachFromParent());
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return n;
registerMismatch(rightType,leftType,null);
}else {
n.addChildrenToBack(owner.detachFromParent());
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
add(getFirstNonEmptyChild(n),Context.STATEMENT);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
add(getFirstNonEmptyChild(n),Context.STATEMENT);
return ;

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
reportCodeChange();
return owner;

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return owner;
reportCodeChange();
return owner;

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return owner;

registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return owner;
reportCodeChange();
return owner;

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
reportCodeChange();
return owner;

registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return owner;
reportCodeChange();
return owner;

registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return owner;
reportCodeChange();
return owner;

registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
owner.detachChildren();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.getParent().replaceChild(n,owner);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
owner.detachChildren();
n.getParent().replaceChild(n,owner);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
owner.detachChildren();
reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
owner.detachChildren();
default :

if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.getParent().replaceChild(n,owner);
reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.getParent().replaceChild(n,owner);
default :

if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
reportCodeChange();
default :

if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
owner.detachChildren();
n.getParent().replaceChild(n,owner);
reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
owner.detachChildren();
n.getParent().replaceChild(n,owner);
default :

if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
owner.detachChildren();
reportCodeChange();
default :

if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.getParent().replaceChild(n,owner);
reportCodeChange();
default :

if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
owner.detachChildren();
n.getParent().replaceChild(n,owner);
reportCodeChange();
default :

if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(owner);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
n.addChildToBack(owner);
reportCodeChange();
return n;

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
n.addChildToBack(owner);
reportCodeChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
n.addChildToBack(owner);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
return n;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(owner);
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(owner);
return n;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(owner);
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(owner);
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(owner);
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return n;
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return n;
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
n.addChildToBack(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
n.addChildToBack(owner);
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
n.addChildToBack(owner);
return n;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
n.addChildToBack(owner);
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
n.addChildToBack(owner);
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
n.addChildToBack(owner);
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
reportCodeChange();
return n;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
return n;
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
return n;
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
return n;
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
n.addChildToBack(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(owner);
reportCodeChange();
return n;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(owner);
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(owner);
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(owner);
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(owner);
return n;
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(owner);
return n;
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(owner);
return n;
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(owner);
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
n.addChildToBack(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(owner);
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(owner);
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return n;
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return n;
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
n.addChildToBack(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return n;
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
n.addChildToBack(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return n;
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return n;
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
n.addChildToBack(owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
n.addChildToBack(owner);
reportCodeChange();
return n;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
n.addChildToBack(owner);
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
n.addChildToBack(owner);
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
n.addChildToBack(owner);
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
n.addChildToBack(owner);
return n;
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
n.addChildToBack(owner);
return n;
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
n.addChildToBack(owner);
return n;
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
n.addChildToBack(owner);
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
n.addChildToBack(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
n.addChildToBack(owner);
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
n.addChildToBack(owner);
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
reportCodeChange();
return n;
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
reportCodeChange();
return n;
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
reportCodeChange();
return n;
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
n.addChildToBack(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
return n;
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
n.addChildToBack(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
return n;
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
return n;
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(owner);
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
n.addChildToBack(owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(owner);
reportCodeChange();
return n;
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(owner);
reportCodeChange();
return n;
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(owner);
reportCodeChange();
return n;
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(owner);
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
n.addChildToBack(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(owner);
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(owner);
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(owner);
return n;
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
n.addChildToBack(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(owner);
return n;
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(owner);
return n;
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(owner);
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
n.addChildToBack(owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return n;
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
n.addChildToBack(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return n;
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return n;
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
n.addChildToBack(owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return n;
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(owner);
n.addChildToBack(owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
Preconditions.checkState(owner.getFirstChild()==owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
if(!ownerType.contains(propName)){
if(NodeUtil.isVarOrSimpleAssignLhs(owner,n)){
ownerType.add(propName);
}else {
return false;
}
}
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
Preconditions.checkState(owner.getFirstChild()==owner);
if(!ownerType.contains(propName)){
if(NodeUtil.isVarOrSimpleAssignLhs(owner,n)){
ownerType.add(propName);
}else {
return false;
}
}

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ownerType.replaceChild(n,owner);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
if(!owner.isEmpty()){
ownerType.addChildrenToFront(owner);
}else {
ownerType.setWasEmptyNode(true);
}
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
c=ownerType;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportChange();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
if(!owner.isEmpty()){
ownerType.addChildrenToFront(owner);
}else {
ownerType.setWasEmptyNode(true);
}
c=ownerType;
reportChange();

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
c=ownerType;
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
reportChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
c=ownerType;
reportChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return true;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
if(isLowerPrecedenceInExpression(ownerType.getFirstChild(),OR_PRECEDENCE)){
return n;
}
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
if(isLowerPrecedenceInExpression(ownerType.getFirstChild(),OR_PRECEDENCE)){
return n;
}
reportCodeChange();
return owner;

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
owner.replaceChild(n,IR.getprop(n.getFirstChild(),n.getFirstChild().getNext()));
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
owner.replaceChild(n,IR.getprop(n.getFirstChild(),n.getFirstChild().getNext()));
ownerType.reportCodeChange();

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
owner.replaceChild(n,IR.getprop(n.getFirstChild(),n.getFirstChild().getNext()));
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
owner.replaceChild(n,IR.getprop(n.getFirstChild(),n.getFirstChild().getNext()));
ownerType.reportCodeChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
ownerType.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
registerMismatch(rightType,leftType,null);
}else {
ownerType.reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
ownerType.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
ownerType.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
ownerType.reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
ownerType.reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
ownerType.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
ownerType.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
ownerType.reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
ownerType.reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
ownerType.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
ownerType.reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild().getNext());
ownerType.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild().getNext());
ownerType.reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();
return ;

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
return ;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
return ;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
return ;
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return ;
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return ;
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();
return ;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
return ;
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
return ;
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
return ;
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
return ;
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
return ;
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
return ;
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
return ;
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return ;
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return ;
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();
return ;
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();
return ;
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();
return ;
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
return ;
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
return ;
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
return ;
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
return ;
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
return ;
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
return ;
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
return ;
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();
n.getParent().replaceChild(n,owner);
compiler.reportCodeChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
elseBody=null;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
elseBody=null;
reportCodeChange();

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
elseBody=null;
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
elseBody=null;
reportCodeChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(n);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkNotNull(n);
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(n);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(n);
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
return n;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.isHook());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(n.isHook());
Preconditions.checkNotNull(n);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
superCtor=ownerType.getConstructor();
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
staleInputs=true;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
staleInputs=true;
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==null){
continue;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
Preconditions.checkState(owner.isFunction());
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.setJSType(leftType);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.setJSType(leftType);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
Preconditions.checkState(owner.isFunction());
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.getImpureBooleanValue(owner)!=TernaryValue.FALSE){
return n;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.redeclareVarsInsideBranch(n);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!mayHaveSideEffects(owner)){
NodeUtil.removeChild(n.getParent(),n);
}else {
Node n=IR.exprResult(cond.detachFromParent()).copyInformationFrom(cond);
n.getParent().replaceChild(n,statement);
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.redeclareVarsInsideBranch(n);
reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
staleInputs=true;
registerMismatch(rightType,leftType,null);
}else {
staleInputs=true;
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
maybeAssign=n.getParent().getParent();
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(owner!=null){
n.replaceChild(fn,IR.string("prototype"));
compiler.reportCodeChange();
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.isFor());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(NodeUtil.isForIn(n)){
return n;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ownerFn.getNext().isEmpty()){
increment=trySimplifyUnusedResult(increment,false);
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.isCall());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(owner.isString());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(propName==null){
return n;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.isCall());
Preconditions.checkArgument(owner.isString());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
reportCodeChange();
return owner;

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
reportCodeChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
return owner;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return owner;
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
reportCodeChange();
return owner;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
return owner;
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
return owner;
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return owner;
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return owner;
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
reportCodeChange();
return owner;
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
reportCodeChange();
return owner;
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
return owner;
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
return owner;
registerMismatch(rightType,leftType,null);
}else {
n.getParent().replaceChild(n,owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.isNew());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(NodeUtil.isControlStructureCodeBlock(n,n.getFirstChild()));
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(NodeUtil.isControlStructureCodeBlock(n,n.getFirstChild()));
ownerType.replaceChild(n,owner);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.isName()||n.isString());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
key=ownerType.getFirstChild().getNext();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
key=ownerType.getFirstChild().getNext();
compiler.reportCodeChange();

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
if(n.getJSDocInfo()!=null){
compiler.report(JSError.make(propName,n,MULTIPLE_VAR_DEF));
}
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
assertDefinitionNode(n,Token.VAR);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerFn!=null){
if(name.equals("Function.prototype.bind.call")){
Node ownerType.getNext()=ownerType.getNext();
if(fn==null){
return null;
}
Node owner=safeNext(fn);
Node n=safeNext(thisValue);
return new Bind(fn,thisValue,parameters);
}
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.isName()||n.isGetProp());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(propName==null){
return false;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(n.isName()||n.isGetProp());
if(propName==null){
return false;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(shouldReport||typeA!=null);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
defineSlot(n,owner,n.getQualifiedName(),typeA,shouldReport);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.isCall());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!NodeUtil.isGet(ownerType)){
n.putBooleanProp(Node.FREE_CALL,true);
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(inferConcreteType(getTopScope(),n).isNone()||type.isAll()){
break;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
namedType=new IndexedType(this,(ObjectType)leftType,ownerType);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
if(shouldReport&&!n.getFirstChild().hasChildren()){
throw new IllegalStateException("Empty VAR node.");
}
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
addExpr(owner,NodeUtil.precedence(Token.COMMA),Context.OTHER);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
add(")");
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
addExpr(owner,NodeUtil.precedence(Token.COMMA),Context.OTHER);
add(")");

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==null||n==n){
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(!NodeUtil.isObjectLitKey(n,n.getParent()));
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeFirstChild();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
n.removeFirstChild();
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeFirstChild();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
n.removeFirstChild();
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
ownerFn.detachFromParent();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
getBlockReturnExpression(n).detachFromParent();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return IR.returnNode(IR.hook(owner,ownerFn,getBlockReturnExpression(n)).srcref(n));
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
ownerFn.detachFromParent();
getBlockReturnExpression(n).detachFromParent();
reportCodeChange();
return IR.returnNode(IR.hook(owner,ownerFn,getBlockReturnExpression(n)).srcref(n));

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
ownerFn.detachFromParent();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
getBlockReturnExpression(n).detachFromParent();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
ownerFn.detachFromParent();
getBlockReturnExpression(n).detachFromParent();
reportCodeChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.detachChildren();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!NodeUtil.isExprAssign(n)){
return false;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.detachChildren();
reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(Sets.newLinkedHashSet().size()<=1){
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
ownerFn.copyInformationFrom(owner);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
owner.replaceChild(owner,NodeUtil.newExpr(ownerFn));
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n);
ownerFn.copyInformationFrom(owner);
owner.replaceChild(owner,NodeUtil.newExpr(ownerFn));

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.isSwitch());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(propName==null){
pushContainingFunction(graph.UNKNOWN);
return ;
}
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(ownerType.isString());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateNodeType(Token.SWITCH,n);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateMinimumChildCount(n,1);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateExpression(n.getFirstChild());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(t.getScope().getRootNode().getFirstChild().getNext().getChildCount()==2){
ownerType.markAllParametersEscaped();
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ownerType.analyze();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ownerFn.color();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkNotNull(leftType);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
Preconditions.checkState(ownerType.isParamList());
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
scanVars(n,n);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
Preconditions.checkState(ownerType.isParamList());
scanVars(n,n);

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.replaceChild(owner,new Node(Token.NOT));
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
new Node(Token.NOT).addChildToFront(owner);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
cond=new Node(Token.NOT);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
thenBody=owner.getNext();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.replaceChild(n,owner);
n.replaceChild(owner,new Node(Token.NOT));
new Node(Token.NOT).addChildToFront(owner);
cond=new Node(Token.NOT);
thenBody=owner.getNext();
elseBody=null;
reportCodeChange();

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.replaceChild(n,owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.replaceChild(owner,new Node(Token.NOT));
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
new Node(Token.NOT).addChildToFront(owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
cond=new Node(Token.NOT);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
thenBody=owner.getNext();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.replaceChild(n,owner);
n.replaceChild(owner,new Node(Token.NOT));
new Node(Token.NOT).addChildToFront(owner);
cond=new Node(Token.NOT);
thenBody=owner.getNext();
elseBody=null;
reportCodeChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.replaceChild(n,owner);
elseBody=null;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.replaceChild(n,owner);
registerMismatch(rightType,leftType,null);
}else {
n.replaceChild(n,owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.replaceChild(n,owner);
registerMismatch(rightType,leftType,null);
}else {
elseBody=null;
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.replaceChild(n,owner);
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
elseBody=null;
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
elseBody=null;
registerMismatch(rightType,leftType,null);
}else {
n.replaceChild(n,owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
elseBody=null;
registerMismatch(rightType,leftType,null);
}else {
elseBody=null;
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
elseBody=null;
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.replaceChild(n,owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
elseBody=null;
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.replaceChild(n,owner);
elseBody=null;
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.replaceChild(n,owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
elseBody=null;
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.replaceChild(n,owner);
elseBody=null;
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.replaceChild(n,owner);
elseBody=null;
registerMismatch(rightType,leftType,null);
}else {
n.replaceChild(n,owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.replaceChild(n,owner);
elseBody=null;
registerMismatch(rightType,leftType,null);
}else {
elseBody=null;
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.replaceChild(n,owner);
elseBody=null;
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.replaceChild(n,owner);
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.replaceChild(n,owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.replaceChild(n,owner);
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
elseBody=null;
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.replaceChild(n,owner);
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.replaceChild(n,owner);
registerMismatch(rightType,leftType,null);
}else {
n.replaceChild(n,owner);
elseBody=null;
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.replaceChild(n,owner);
registerMismatch(rightType,leftType,null);
}else {
n.replaceChild(n,owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.replaceChild(n,owner);
registerMismatch(rightType,leftType,null);
}else {
elseBody=null;
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
elseBody=null;
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.replaceChild(n,owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
elseBody=null;
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
elseBody=null;
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
elseBody=null;
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
elseBody=null;
registerMismatch(rightType,leftType,null);
}else {
n.replaceChild(n,owner);
elseBody=null;
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
elseBody=null;
registerMismatch(rightType,leftType,null);
}else {
n.replaceChild(n,owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
elseBody=null;
registerMismatch(rightType,leftType,null);
}else {
elseBody=null;
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.replaceChild(n,owner);
elseBody=null;
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.replaceChild(n,owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
elseBody=null;
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.replaceChild(n,owner);
elseBody=null;
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.replaceChild(n,owner);
elseBody=null;
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.replaceChild(n,owner);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.replaceChild(n,owner);
elseBody=null;
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
elseBody=null;
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.replaceChild(n,owner);
elseBody=null;
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.replaceChild(n,owner);
elseBody=null;
registerMismatch(rightType,leftType,null);
}else {
n.replaceChild(n,owner);
elseBody=null;
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.replaceChild(n,owner);
elseBody=null;
registerMismatch(rightType,leftType,null);
}else {
n.replaceChild(n,owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.replaceChild(n,owner);
elseBody=null;
registerMismatch(rightType,leftType,null);
}else {
elseBody=null;
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.replaceChild(n,owner);
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.replaceChild(n,owner);
elseBody=null;
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.replaceChild(n,owner);
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.replaceChild(n,owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.replaceChild(n,owner);
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
elseBody=null;
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.replaceChild(n,owner);
registerMismatch(rightType,leftType,null);
}else {
n.replaceChild(n,owner);
elseBody=null;
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
elseBody=null;
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.replaceChild(n,owner);
elseBody=null;
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
elseBody=null;
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.replaceChild(n,owner);
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
elseBody=null;
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
elseBody=null;
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
elseBody=null;
registerMismatch(rightType,leftType,null);
}else {
n.replaceChild(n,owner);
elseBody=null;
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.replaceChild(n,owner);
elseBody=null;
reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.isNew());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
sourceName=getSourceName(n);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
curNode=n;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
traverseBranch(ownerFn,n);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
traverseBranch(n,n);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
popScope();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
sourceName=getSourceName(n);
curNode=n;
traverseBranch(ownerFn,n);
traverseBranch(n,n);
popScope();

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
Preconditions.checkState(n.hasOneChild());
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
newInitializer=n.getFirstChild();
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
Preconditions.checkState(n.hasOneChild());
newInitializer=n.getFirstChild();

if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
owner.removeChild(n);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
owner.removeChild(n);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
Preconditions.checkState(n.hasOneChild());
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
ownerFn.copyInformationFrom(n);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().getParent().addChildAfter(ownerFn,parent);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.getParent().replaceChild(n,owner);
ownerFn.copyInformationFrom(n);
n.getParent().getParent().addChildAfter(ownerFn,parent);
reportCodeChange();
return owner;

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(shouldReport){
return n;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(mayHaveSideEffects(owner)){
return n;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.getParent().replaceChild(n,n);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.getParent().replaceChild(n,n);
reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
if("jQuery.prototype".equals(owner.getQualifiedName())){
targetVal=owner.removeFirstChild();
}else {
targetVal=owner.detachFromParent();
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.replaceChild(n,IR.function(IR.name("").srcref(n),IR.paramList().srcref(n),owner));
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.putBooleanProp(Node.FREE_CALL,true);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
if("jQuery.prototype".equals(owner.getQualifiedName())){
targetVal=owner.removeFirstChild();
}else {
targetVal=owner.detachFromParent();
}
n.replaceChild(n,IR.function(IR.name("").srcref(n),IR.paramList().srcref(n),owner));
n.putBooleanProp(Node.FREE_CALL,true);

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
if(NodeUtil.hasCatchHandler(ownerType)){
Preconditions.checkState(ownerType.hasOneChild());
Node ownerFn=ownerType.getFirstChild();
Node n=ownerFn.getLastChild();
}
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
if(NodeUtil.hasFinally(n)){
Node n.getLastChild()=n.getLastChild();
}
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
if(NodeUtil.hasCatchHandler(ownerType)){
Preconditions.checkState(ownerType.hasOneChild());
Node ownerFn=ownerType.getFirstChild();
Node n=ownerFn.getLastChild();
}
if(NodeUtil.hasFinally(n)){
Node n.getLastChild()=n.getLastChild();
}

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
if(NodeUtil.hasCatchHandler(ownerType)){
Preconditions.checkState(ownerType.hasOneChild());
Node ownerFn=ownerType.getFirstChild();
Node n=ownerFn.getLastChild();
}
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
if(NodeUtil.hasFinally(n)){
Node n.getLastChild()=n.getLastChild();
}
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
if(NodeUtil.hasCatchHandler(ownerType)){
Preconditions.checkState(ownerType.hasOneChild());
Node ownerFn=ownerType.getFirstChild();
Node n=ownerFn.getLastChild();
}
if(NodeUtil.hasFinally(n)){
Node n.getLastChild()=n.getLastChild();
}

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
info=(JSDocInfo)owner.getProp(Node.JSDOC_INFO_PROP);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(t.getEnclosingFunction()==null){
return null;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nameInfo.onlyAffectsClassDef){
if(nameInfo.superclass!=null){
recordReference(nameInfo.name,nameInfo.superclass,RefType.INHERITANCE);
}
String propName=n.getQualifiedName();
if(nodeName!=null){
recordReference(nameInfo.name,nodeName,RefType.REGULAR);
}
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ownerFn.detachFromParent();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ownerType.removeChild(owner);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.detachFromParent();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
ownerType.add(n);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.detachFromParent();
ownerType.add(n);

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.isAssign());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!shouldReport){
return n;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(areNodesEqualForInlining(owner,owner.getFirstChild())){
owner=right.getLastChild();
}else if(NodeUtil.isCommutative(right.getType())&&areNodesEqualForInlining(left,right.getLastChild())){
newRight=right.getFirstChild();
}else {
return n;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.isAssign());
if(mayHaveSideEffects(owner)){
return n;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
ownerFn.getPrototype().clearCachedValues();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
ownerFn.setPrototypeBasedOn((ownerType.toMaybeFunctionType()).getInstanceType());
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
ownerFn.getPrototype().clearCachedValues();
ownerFn.setPrototypeBasedOn((ownerType.toMaybeFunctionType()).getInstanceType());

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
ownerFn.getPrototype().clearCachedValues();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
ownerFn.setPrototypeBasedOn((ownerType.toMaybeFunctionType()).getInstanceType());
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
ownerFn.getPrototype().clearCachedValues();
ownerFn.setPrototypeBasedOn((ownerType.toMaybeFunctionType()).getInstanceType());

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
cond=owner;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
reportCodeChange();
cond=owner;

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
cond=owner;
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
reportCodeChange();
cond=owner;

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ownerFn.replaceChild(n,owner);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
Preconditions.checkState(ownerType.getFirstChild().isName());
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
owner.addChildToBack(ownerType.getFirstChild().detachFromParent());
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
redeclaration=true;
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
Preconditions.checkState(ownerType.getFirstChild().isName());
owner.addChildToBack(ownerType.getFirstChild().detachFromParent());
redeclaration=true;

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(owner.getNext()==n);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
collapse.parent.removeChildAfter(owner);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getFirstChild().getNext()!=null){
if(right.getNext()!=null||!NodeUtil.isImmutableValue(right)){
return n;
}
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ownerType.isArrayLit()||!ownerFn.getString().equals("join")){
return n;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new NodeTraversal(compiler,new GatherCandiates()).traverse(t.getScopeRoot().getLastChild());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ownerFn.analyze();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isFunction()){
return compiler.getCodingConvention().isInlinableFunction(n);
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
if(isUselessCase(n.getFirstChild().getNext(),n)){
removeCase(n,n.getFirstChild().getNext());
return null;
}
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
return n.getFirstChild().getNext();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
if(isUselessCase(n.getFirstChild().getNext(),n)){
removeCase(n,n.getFirstChild().getNext());
return null;
}
return n.getFirstChild().getNext();

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
Preconditions.checkState(n.getFirstChild().getNext().isCase());
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
owner=skipFinallyNodes(follow);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ControlFlowAnalysis.computeFollowNode(n)!=ControlFlowAnalysis.computeFollowNode(n)){
if(!isPure(n)){
return n;
}
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild());
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToFront(IR.var(ownerType));
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
if(n.getFirstChild().isVar()){
ifBody=IR.block(n.getFirstChild(),IR.exprResult(IR.assign(key.getFirstChild().cloneNode(),ownerType.cloneTree())),n.getLastChild());
}else {
ifBody=IR.block(IR.exprResult(IR.assign(n.getFirstChild(),ownerType.cloneTree())),n.getLastChild());
}
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(n);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild());
n.addChildToFront(IR.var(ownerType));
if(n.getFirstChild().isVar()){
ifBody=IR.block(n.getFirstChild(),IR.exprResult(IR.assign(key.getFirstChild().cloneNode(),ownerType.cloneTree())),n.getLastChild());
}else {
ifBody=IR.block(IR.exprResult(IR.assign(n.getFirstChild(),ownerType.cloneTree())),n.getLastChild());
}
n.addChildToBack(n);
compiler.reportCodeChange();

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
n.removeChild(n.getFirstChild());
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
n.addChildToFront(IR.var(ownerType));
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(n);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.removeChild(n.getFirstChild());
n.addChildToFront(IR.var(ownerType));
n.addChildToBack(n);
compiler.reportCodeChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild());
n.addChildToBack(n);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild());
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild());
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
n.removeChild(n.getFirstChild());
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild());
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(n);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild());
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(n);
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(n);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
n.removeChild(n.getFirstChild());
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(n);
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(n);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(n);
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
n.removeChild(n.getFirstChild());
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(n);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(n);
JSType ownerType=getJSType(owner);
n.removeChild(n.getFirstChild());
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
n.removeChild(n.getFirstChild());
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(n);
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild());
n.addChildToBack(n);
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild());
n.addChildToBack(n);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
n.removeChild(n.getFirstChild());
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild());
n.addChildToBack(n);
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(n);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild());
n.addChildToBack(n);
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild());
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
n.removeChild(n.getFirstChild());
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild());
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(n);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild());
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild());
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(n);
JSType ownerType=getJSType(owner);
n.removeChild(n.getFirstChild());
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild());
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
n.removeChild(n.getFirstChild());
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild());
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(n);
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(n);
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
n.removeChild(n.getFirstChild());
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(n);
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(n);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(n);
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(n);
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(n);
JSType ownerType=getJSType(owner);
n.removeChild(n.getFirstChild());
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(n);
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
n.removeChild(n.getFirstChild());
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(n);
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(n);
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(n);
JSType ownerType=getJSType(owner);
n.removeChild(n.getFirstChild());
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
n.removeChild(n.getFirstChild());
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(n);
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(n);
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
n.removeChild(n.getFirstChild());
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild());
n.addChildToBack(n);
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
n.removeChild(n.getFirstChild());
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild());
n.addChildToBack(n);
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(n);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild());
n.addChildToBack(n);
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild());
n.addChildToBack(n);
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(n);
JSType ownerType=getJSType(owner);
n.removeChild(n.getFirstChild());
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild());
n.addChildToBack(n);
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
n.removeChild(n.getFirstChild());
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild());
n.addChildToBack(n);
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(n);
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild());
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(n);
JSType ownerType=getJSType(owner);
n.removeChild(n.getFirstChild());
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild());
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
n.removeChild(n.getFirstChild());
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild());
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(n);
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.removeChild(n.getFirstChild());
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(n);
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
n.removeChild(n.getFirstChild());
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(n);
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(n);
JSType ownerType=getJSType(owner);
n.removeChild(n.getFirstChild());
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(n);
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
n.removeChild(n.getFirstChild());
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(n);
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(n);
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
n.addChildToBack(n);
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(n);
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
n.removeChild(n.getFirstChild());
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(bothIntrinsics(rightType,leftType)){
compiler.reportCodeChange();
registerMismatch(rightType,leftType,null);
}else {
n.addChildToBack(n);
compiler.reportCodeChange();
JSType ownerType=getJSType(owner);
n.removeChild(n.getFirstChild());
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!ownerType.isCall()){
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ownerType.getFirstChild().isGetProp()){
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateNodeType(Token.GETTER_DEF,n);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(n,1);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateObjectLiteralKeyName(n);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateFunctionExpression(ownerType);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ownerType.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",n);
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
add(n,Context.OTHER);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
add(n,Context.OTHER);
add(")");

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ControlFlowAnalysis.computeFollowNode(n)==null&&(n.isThrow()||n!=null)){
return n;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ControlFlowAnalysis.computeFollowNode(n)==null||areMatchingExits(n,follow)){
n.detachFromParent();
reportCodeChange();
return null;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
info=ownerType.getJSDocInfo();
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!n.isNumber()){
return n;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((int)n.getDouble()!=n.getDouble()){
error(INVALID_GETELEM_INDEX_ERROR,n);
return n;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ownerType.isGetProp()){
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ownerFn.replaceChild(n,n);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.SWITCH :

if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(owner!=null&&parent.isName()){
Node ownerFn=parent.getParent();
if(gramps!=null&&gramps.isVar()){
return false;
}
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(owner==null){
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerFn.getAnnotation()!=GraphReachability.REACHABLE||(shouldReport&&!NodeUtil.mayHaveSideEffects(n))){
removeDeadExprStatementSafely(n);
return ;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tryRemoveUnconditionalBranching(n);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateNodeType(Token.SETTER_DEF,n);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(n,1);
validateObjectLiteralKeyName(n);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(n,1);
validateFunctionExpression(ownerType);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(n,1);
if(!ownerType.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",n);
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateObjectLiteralKeyName(n);
validateFunctionExpression(ownerType);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateObjectLiteralKeyName(n);
if(!ownerType.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",n);
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateFunctionExpression(ownerType);
if(!ownerType.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",n);
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(n,1);
validateObjectLiteralKeyName(n);
validateFunctionExpression(ownerType);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(n,1);
validateObjectLiteralKeyName(n);
if(!ownerType.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",n);
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(n,1);
validateFunctionExpression(ownerType);
if(!ownerType.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",n);
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateObjectLiteralKeyName(n);
validateFunctionExpression(ownerType);
if(!ownerType.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",n);
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateChildCount(n,1);
validateObjectLiteralKeyName(n);
validateFunctionExpression(ownerType);
if(!ownerType.getFirstChild().getString().isEmpty()){
violation("Expected unnamed function expression.",n);
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=ownerType==null?null:getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
trueBlock=owner.getFirstChild().getNext();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
falseBlock=owner.getNext();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
trueBlock=owner.getFirstChild().getNext();
falseBlock=owner.getNext();
trueBlock=owner.getFirstChild().getNext();
falseBlock=owner.getNext();

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
trueBlock=owner.getFirstChild().getNext();
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
falseBlock=owner.getNext();
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
trueBlock=owner.getFirstChild().getNext();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
falseBlock=owner.getNext();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
trueBlock=owner.getFirstChild().getNext();
falseBlock=owner.getNext();
trueBlock=owner.getFirstChild().getNext();
falseBlock=owner.getNext();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
Preconditions.checkState(ownerType.get(0).getValue()==Branch.UNCOND);
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
Preconditions.checkState(ownerType.get(0).getValue()==Branch.UNCOND);
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
ownerFn.replaceChild(n,n);
reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
if(leftType instanceof EnumType){
Node ownerType=ownerFn.getInitialValue();
boolean ownerType!=null&&(initialValue.isObjectLit()||initialValue.isQualifiedName())=ownerType!=null&&(initialValue.isObjectLit()||initialValue.isQualifiedName());
if(!ownerType!=null&&(initialValue.isObjectLit()||initialValue.isQualifiedName())){
compiler.report(JSError.make(propName,n,ENUM_INITIALIZER));
}
}
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
seenCatchOrFinally=true;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
seenCatchOrFinally=true;
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateMinimumChildCount(n,2);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateMaximumChildCount(n,3);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateBlock(n.getFirstChild());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateNodeType(Token.BLOCK,ownerType);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
validateMaximumChildCount(ownerType,1);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getChildCount()==3){
validateBlock(n.getLastChild());
shouldReport=true;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(owner==null){
return n;
}
if(owner.isGetterDef()){
owner=IR.call(replacement);
replacement.putBooleanProp(Node.FREE_CALL,true);
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(owner==null){
return n;
}
n.getParent().replaceChild(n,owner.detachFromParent());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(owner==null){
return n;
}
reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(owner.isGetterDef()){
owner=IR.call(replacement);
replacement.putBooleanProp(Node.FREE_CALL,true);
}
n.getParent().replaceChild(n,owner.detachFromParent());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(owner.isGetterDef()){
owner=IR.call(replacement);
replacement.putBooleanProp(Node.FREE_CALL,true);
}
reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(owner==null){
return n;
}
if(owner.isGetterDef()){
owner=IR.call(replacement);
replacement.putBooleanProp(Node.FREE_CALL,true);
}
n.getParent().replaceChild(n,owner.detachFromParent());
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(owner==null){
return n;
}
if(owner.isGetterDef()){
owner=IR.call(replacement);
replacement.putBooleanProp(Node.FREE_CALL,true);
}
reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(owner==null){
return n;
}
n.getParent().replaceChild(n,owner.detachFromParent());
reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(owner.isGetterDef()){
owner=IR.call(replacement);
replacement.putBooleanProp(Node.FREE_CALL,true);
}
n.getParent().replaceChild(n,owner.detachFromParent());
reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(owner==null){
return n;
}
if(owner.isGetterDef()){
owner=IR.call(replacement);
replacement.putBooleanProp(Node.FREE_CALL,true);
}
n.getParent().replaceChild(n,owner.detachFromParent());
reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propName==null||!enclosingQname.endsWith(".prototype."+owner.getString())){
reportBadBaseClassUse(t,n,"Enclosing method does not match "+owner.getString());
return ;
}
if(bothIntrinsics(rightType,leftType)){
return ;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.replaceChild(n,NodeUtil.newQualifiedNameNode(ownerType.getCodingConvention(),String.format("%s.superClass_.%s.call",ownerFn.getQualifiedName(),owner.getString()),callee,"goog.base"));
if(bothIntrinsics(rightType,leftType)){
return ;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propName==null||!enclosingQname.endsWith(".prototype."+owner.getString())){
reportBadBaseClassUse(t,n,"Enclosing method does not match "+owner.getString());
return ;
}
n.replaceChild(n,NodeUtil.newQualifiedNameNode(ownerType.getCodingConvention(),String.format("%s.superClass_.%s.call",ownerFn.getQualifiedName(),owner.getString()),callee,"goog.base"));
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propName==null||!enclosingQname.endsWith(".prototype."+owner.getString())){
reportBadBaseClassUse(t,n,"Enclosing method does not match "+owner.getString());
return ;
}
n.removeChild(owner);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propName==null||!enclosingQname.endsWith(".prototype."+owner.getString())){
reportBadBaseClassUse(t,n,"Enclosing method does not match "+owner.getString());
return ;
}
ownerType.reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.replaceChild(n,NodeUtil.newQualifiedNameNode(ownerType.getCodingConvention(),String.format("%s.superClass_.%s.call",ownerFn.getQualifiedName(),owner.getString()),callee,"goog.base"));
n.removeChild(owner);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.replaceChild(n,NodeUtil.newQualifiedNameNode(ownerType.getCodingConvention(),String.format("%s.superClass_.%s.call",ownerFn.getQualifiedName(),owner.getString()),callee,"goog.base"));
ownerType.reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propName==null||!enclosingQname.endsWith(".prototype."+owner.getString())){
reportBadBaseClassUse(t,n,"Enclosing method does not match "+owner.getString());
return ;
}
n.replaceChild(n,NodeUtil.newQualifiedNameNode(ownerType.getCodingConvention(),String.format("%s.superClass_.%s.call",ownerFn.getQualifiedName(),owner.getString()),callee,"goog.base"));
if(bothIntrinsics(rightType,leftType)){
return ;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propName==null||!enclosingQname.endsWith(".prototype."+owner.getString())){
reportBadBaseClassUse(t,n,"Enclosing method does not match "+owner.getString());
return ;
}
n.removeChild(owner);
if(bothIntrinsics(rightType,leftType)){
return ;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propName==null||!enclosingQname.endsWith(".prototype."+owner.getString())){
reportBadBaseClassUse(t,n,"Enclosing method does not match "+owner.getString());
return ;
}
ownerType.reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
return ;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.replaceChild(n,NodeUtil.newQualifiedNameNode(ownerType.getCodingConvention(),String.format("%s.superClass_.%s.call",ownerFn.getQualifiedName(),owner.getString()),callee,"goog.base"));
n.removeChild(owner);
if(bothIntrinsics(rightType,leftType)){
return ;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.replaceChild(n,NodeUtil.newQualifiedNameNode(ownerType.getCodingConvention(),String.format("%s.superClass_.%s.call",ownerFn.getQualifiedName(),owner.getString()),callee,"goog.base"));
ownerType.reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
return ;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propName==null||!enclosingQname.endsWith(".prototype."+owner.getString())){
reportBadBaseClassUse(t,n,"Enclosing method does not match "+owner.getString());
return ;
}
n.replaceChild(n,NodeUtil.newQualifiedNameNode(ownerType.getCodingConvention(),String.format("%s.superClass_.%s.call",ownerFn.getQualifiedName(),owner.getString()),callee,"goog.base"));
n.removeChild(owner);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propName==null||!enclosingQname.endsWith(".prototype."+owner.getString())){
reportBadBaseClassUse(t,n,"Enclosing method does not match "+owner.getString());
return ;
}
n.replaceChild(n,NodeUtil.newQualifiedNameNode(ownerType.getCodingConvention(),String.format("%s.superClass_.%s.call",ownerFn.getQualifiedName(),owner.getString()),callee,"goog.base"));
ownerType.reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propName==null||!enclosingQname.endsWith(".prototype."+owner.getString())){
reportBadBaseClassUse(t,n,"Enclosing method does not match "+owner.getString());
return ;
}
n.removeChild(owner);
ownerType.reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.replaceChild(n,NodeUtil.newQualifiedNameNode(ownerType.getCodingConvention(),String.format("%s.superClass_.%s.call",ownerFn.getQualifiedName(),owner.getString()),callee,"goog.base"));
n.removeChild(owner);
ownerType.reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propName==null||!enclosingQname.endsWith(".prototype."+owner.getString())){
reportBadBaseClassUse(t,n,"Enclosing method does not match "+owner.getString());
return ;
}
n.replaceChild(n,NodeUtil.newQualifiedNameNode(ownerType.getCodingConvention(),String.format("%s.superClass_.%s.call",ownerFn.getQualifiedName(),owner.getString()),callee,"goog.base"));
n.removeChild(owner);
if(bothIntrinsics(rightType,leftType)){
return ;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propName==null||!enclosingQname.endsWith(".prototype."+owner.getString())){
reportBadBaseClassUse(t,n,"Enclosing method does not match "+owner.getString());
return ;
}
n.replaceChild(n,NodeUtil.newQualifiedNameNode(ownerType.getCodingConvention(),String.format("%s.superClass_.%s.call",ownerFn.getQualifiedName(),owner.getString()),callee,"goog.base"));
ownerType.reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
return ;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propName==null||!enclosingQname.endsWith(".prototype."+owner.getString())){
reportBadBaseClassUse(t,n,"Enclosing method does not match "+owner.getString());
return ;
}
n.removeChild(owner);
ownerType.reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
return ;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.replaceChild(n,NodeUtil.newQualifiedNameNode(ownerType.getCodingConvention(),String.format("%s.superClass_.%s.call",ownerFn.getQualifiedName(),owner.getString()),callee,"goog.base"));
n.removeChild(owner);
ownerType.reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
return ;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propName==null||!enclosingQname.endsWith(".prototype."+owner.getString())){
reportBadBaseClassUse(t,n,"Enclosing method does not match "+owner.getString());
return ;
}
n.replaceChild(n,NodeUtil.newQualifiedNameNode(ownerType.getCodingConvention(),String.format("%s.superClass_.%s.call",ownerFn.getQualifiedName(),owner.getString()),callee,"goog.base"));
n.removeChild(owner);
ownerType.reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(shouldReport){
return n;
}
if(mayHaveSideEffects(owner)){
return n;
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(shouldReport){
return n;
}
n.getParent().replaceChild(n,n);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(shouldReport){
return n;
}
reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(mayHaveSideEffects(owner)){
return n;
}
n.getParent().replaceChild(n,n);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(mayHaveSideEffects(owner)){
return n;
}
reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(shouldReport){
return n;
}
if(mayHaveSideEffects(owner)){
return n;
}
n.getParent().replaceChild(n,n);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(shouldReport){
return n;
}
if(mayHaveSideEffects(owner)){
return n;
}
reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(shouldReport){
return n;
}
n.getParent().replaceChild(n,n);
reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(mayHaveSideEffects(owner)){
return n;
}
n.getParent().replaceChild(n,n);
reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(shouldReport){
return n;
}
if(mayHaveSideEffects(owner)){
return n;
}
n.getParent().replaceChild(n,n);
reportCodeChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isFromExterns()){
ensureTyped(t,n);
return ;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.isEnumElementType()){
allowedValueType=allowedValueType.toMaybeEnumElementType().getPrimitiveType();
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!rightType.canAssignTo(leftType)&&!leftType.canAssignTo(rightType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&!leftType.canAssignTo(rightType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!type.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!castType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!rightType.canAssignTo(rightType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(leftType!=null&&rightType!=null){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(leftType!=null&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&rightType!=null){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ownerType.setJSType(typeA);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType!=null&&rightType!=null){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType!=null&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
leftType=ownerType.getRestrictedTypeGivenToBooleanOutcome(!shouldReport);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(leftLiterals.toBooleanOutcomes==BooleanLiteralSet.get(!shouldReport)){
type=ownerType;
}else {
type=ownerType.getLeastSupertype(rightType);
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
leftType=ownerType.getRestrictedTypeGivenToBooleanOutcome(!shouldReport);
if(leftLiterals.toBooleanOutcomes==BooleanLiteralSet.get(!shouldReport)){
type=ownerType;
}else {
type=ownerType.getLeastSupertype(rightType);
}

if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.setJSType(rightType);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.setJSType(rightType);
if(!leftType.isNoType()&&rightType!=null){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.GT :

if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.isNoType()&&!type.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!rightType.isNoType()&&!rightType.isUnknownType()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!rightType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&!rightType.isUnknownType()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&!type.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
mismatch(t,n,FOUND_REQUIRED,rightType,leftType);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!rightType.isNoType()&&!rightType.isUnknownType()){
mismatch(t,n,FOUND_REQUIRED,rightType,leftType);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!rightType.isNoType()&&!rightType.canAssignTo(leftType)){
mismatch(t,n,FOUND_REQUIRED,rightType,leftType);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!type.isNoType()&&!rightType.isUnknownType()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!rightType.isUnknownType()){
mismatch(t,n,FOUND_REQUIRED,rightType,leftType);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!type.isNoType()&&!rightType.canAssignTo(leftType)){
mismatch(t,n,FOUND_REQUIRED,rightType,leftType);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.isNoType()&&!rightType.isUnknownType()){
mismatch(t,n,FOUND_REQUIRED,rightType,leftType);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!rightType.matchesNumberContext()&&!rightType.matchesStringContext()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!rightType.matchesNumberContext()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&!rightType.matchesStringContext()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!type.isNoType()&&!rightType.matchesStringContext()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!rightType.matchesNumberContext()&&!type.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isSubtype(rightType)&&!rightType.isEmptyType()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isSubtype(rightType)&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&!rightType.isEmptyType()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!anyObjectType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isSubtype(rightType)&&!type.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!rightType.matchesNumberContext()&&!rightType.isSubtype(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&!rightType.isSubtype(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!type.isNoType()&&!rightType.isSubtype(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.canTestForShallowEqualityWith(rightType)&&(rightType.autoboxesTo()==null||!rightType.autoboxesTo().isSubtype(leftType))){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.canTestForShallowEqualityWith(rightType)&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&(rightType.autoboxesTo()==null||!caseType.autoboxesTo().isSubtype(leftType))){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!switchType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!rightType.autoboxesTo().canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.canTestForShallowEqualityWith(rightType)&&!rightType.autoboxesTo().canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rightType!=null&&leftType!=null&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&!found.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.isGetProp()&&ownerType.isAssign());
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isEmptyType()&&shouldReport){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isEmptyType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&shouldReport){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!objectType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propName!=null&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&n.getNext()!=null){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
addSymbolUse(propName,t.getModule(),PROPERTY);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getPropertyDeprecationInfo(ObjectType.cast(dereference(n.getFirstChild().getJSType())),n.getLastChild().getString())!=null&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isNew()){
return ;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getJSType().toMaybeFunctionType()!=null&&!n.getJSType().toMaybeFunctionType().isConstructor()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.getJSType().toMaybeFunctionType()!=null&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&!n.getJSType().toMaybeFunctionType().isConstructor()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
owner=addMarker(n.getJSType().toMaybeFunctionType(),nodeToInsertAfter,null);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Iterables.addAll(Sets.newTreeSet(ALPHA),n.getJSType().toMaybeFunctionType().getAllImplementedInterfaces());
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n.isName())&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.VAR :

if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(OBJECT_PROPERTY_STRING.equals(n.getQualifiedName())){
Node n=IR.name(EXTERN_OBJECT_PROPERTY_STRING);
newName.copyInformationFrom(n);
owner.replaceChild(n,newName);
ownerType.reportCodeChange();
return ;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!n.isNew()){
return ;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!EXTERN_OBJECT_PROPERTY_STRING.equals(ownerFn.getQualifiedName())){
return ;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((owner.isVar()||NodeUtil.isFunctionDeclaration(parent))&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!n.isName()){
return ;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getString().isEmpty()){
Preconditions.checkState(owner.isFunction());
Preconditions.checkState(NodeUtil.isFunctionExpression(parent));
return ;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getString().length()>0&&(ownerFn==null||ownerFn.isExtern())&&!SPECIAL_EXTERNS.contains(n.getString())){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!SPECIAL_EXTERNS.contains(n.getString())){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getFirstChild().getString()!=null&&n.getFirstChild().getString().length()>0&&ownerType.isDeclared(n.getFirstChild().getString(),false)&&!(ownerType.getVar(n.getFirstChild().getString()).getType() instanceof FunctionType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getFirstChild().getString()!=null&&functionPrivateName.length()>0&&ownerType.isDeclared(functionPrivateName,false)&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!(ownerType.getVar(n.getFirstChild().getString()).getType() instanceof FunctionType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkNoTypeCheckSection(n,true);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!owner.isGetProp()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!ownerType.isName()){
return ;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!owner.isName()){
return ;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(t.getScope().getVar(owner.getString())==null||!v.isGlobal()){
return ;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.allowMove){
if(maybeProcessDeclaration(t,owner,n,getNamedInfo(t.getScope().getVar(owner.getString())))){
if(hasConditionalAncestor(parent.getParent())){
info.allowMove=false;
}
}else {
processReference(t,info,owner.getString());
}
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rightType!=null&&!rightType.isUnknownType()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rightType!=null&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&!objIndexType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((!JSType.toMaybeFunctionType(getObjectSlot(FOUND_REQUIRED)).hasOwnProperty(propName)||JSType.toMaybeFunctionType(getObjectSlot(FOUND_REQUIRED)).isPropertyTypeInferred(propName))&&((t.getInput()!=null&&t.getInput().isExtern()&&!JSType.toMaybeFunctionType(getObjectSlot(FOUND_REQUIRED)).isNativeObjectType())||!JSType.toMaybeFunctionType(getObjectSlot(FOUND_REQUIRED)).isInstanceType())){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((!JSType.toMaybeFunctionType(getObjectSlot(FOUND_REQUIRED)).hasOwnProperty(propName)||ownerType.isPropertyTypeInferred(propName))&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&((t.getInput()!=null&&t.getInput().isExtern()&&!JSType.toMaybeFunctionType(getObjectSlot(FOUND_REQUIRED)).isNativeObjectType())||!ownerType.isInstanceType())){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerFn==null?null:var.getJSDocInfo()!=null&&docInfo.isDeprecated()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isFunction()||parent.isVar()){
return ;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&NodeUtil.isGet(n)&&!n.isGetProp()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(createNameInformation(t,n,n)==null){
return ;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nameInfo.onlyAffectsClassDef){
if(nameInfo.superclass!=null){
recordReference(nameInfo.name,nameInfo.superclass,RefType.INHERITANCE);
}
String propName=n.getQualifiedName();
if(nodeName!=null){
recordReference(nameInfo.name,nodeName,RefType.REGULAR);
}
return ;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.setString(propName);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
compiler.reportCodeChange();
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.setString(propName);
compiler.reportCodeChange();
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(shouldReport){
if(NodeUtil.isStatementParent(n)){
for(Node n.getFirstChild()=n.getFirstChild();child!=null;child=child.getNext()){
if(NodeUtil.isHoistedFunctionDeclaration(child)){
defineFunctionLiteral(child,n);
}
}
}
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return true;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!ownerType.containsKey(propName)&&!isInvalidatingType(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ownerType.containsKey(propName)&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!isInvalidatingType(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
ownerType.put(propName,new PropertyInfo(leftType,n));
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==null&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!NodeUtil.isFunctionExpression(n)&&!NodeUtil.isHoistedFunctionDeclaration(n)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!NodeUtil.isFunctionExpression(n)&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&!NodeUtil.isHoistedFunctionDeclaration(n)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(n.isFunction());
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(n.isFunction());
if(!NodeUtil.isFunctionExpression(n)&&!NodeUtil.isHoistedFunctionDeclaration(n)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(n.isFunction());
if(!NodeUtil.isFunctionExpression(n)&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(n.isFunction());
if(!leftType.isNoType()&&!NodeUtil.isHoistedFunctionDeclaration(n)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!n.isQuotedString()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!isUnremovableNode(n.getFirstChild())&&!mayHaveSideEffects(n.getFirstChild())){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isUnremovableNode(n.getFirstChild())&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!mayHaveSideEffects(n.getFirstChild())){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isSyntheticBlock()||n.getParent()==null){
return n;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.tryMergeBlock(n)){
reportCodeChange();
return null;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!consumesDanglingElse(n)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!owner.isBlock()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
n.replaceChild(owner,ownerType);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
c=ownerType;
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
reportChange();
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
n.replaceChild(owner,ownerType);
c=ownerType;
reportChange();

if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!owner.isEmpty()){
increment=trySimplifyUnusedResult(increment,false);
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!n.getFirstChild().isEmpty()){
return n;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.redeclareVarsInsideBranch(n);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
reportCodeChange();
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.restrictByNotNullOrUndefined().collapseUnion().toMaybeFunctionType()!=null&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.restrictByNotNullOrUndefined().collapseUnion().toMaybeParameterizedType()!=null&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.redeclareVarsInsideBranch(n);
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
compiler.reportCodeChange();
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.redeclareVarsInsideBranch(n);
compiler.reportCodeChange();
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.redeclareVarsInsideBranch(n);
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
compiler.reportCodeChange();
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.redeclareVarsInsideBranch(n);
compiler.reportCodeChange();
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.redeclareVarsInsideBranch(n);
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
compiler.reportCodeChange();
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.redeclareVarsInsideBranch(n);
compiler.reportCodeChange();
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.redeclareVarsInsideBranch(n);
compiler.reportCodeChange();
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NAME :

if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(owner.getJSDocInfo()==null||!owner.isGetProp()||!owner.getFirstChild().isThis()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(owner.getJSDocInfo()==null||!owner.isGetProp()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&!owner.getFirstChild().isThis()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(owner.getJSDocInfo()==null||!owner.isGetProp()&&!owner.getFirstChild().isThis()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&!NodeUtil.isVarDeclaration(n)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&n.getBooleanProp(Node.FREE_CALL)&&NodeUtil.isGet(owner)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(n.isAssign());
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!shouldReport){
return n;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!owner.hasChildren()||right.getFirstChild().getNext()!=right.getLastChild()){
return n;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(mayHaveSideEffects(owner)){
return n;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(owner==null){
return ;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerFn==null){
return ;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerFn.getAnnotation()!=GraphReachability.REACHABLE||(shouldReport&&!NodeUtil.mayHaveSideEffects(n))){
removeDeadExprStatementSafely(n);
return ;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tryRemoveUnconditionalBranching(n);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((leftType instanceof ObjectType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((leftType instanceof ObjectType)&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
namedType=new IndexedType(this,(ObjectType)leftType,ownerType);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerFn==null||!nextNode.isExprResult()){
return ;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!(shouldReport)||!ownerType.isEquivalentTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!ownerType.isEquivalentTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!newType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.isDo());
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(hasBreakOrContinue(n)){
return n;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(NodeUtil.isControlStructureCodeBlock(n,n.getFirstChild()));
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ownerType.replaceChild(n,owner);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(mayHaveSideEffects(NodeUtil.getConditionExpression(n))){
Node n=IR.exprResult(cond.detachFromParent()).srcref(cond);
ownerType.addChildAfter(condStatement,owner);
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.isDo());
Preconditions.checkState(NodeUtil.isControlStructureCodeBlock(n,n.getFirstChild()));
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(n.isDo());
reportCodeChange();
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(NodeUtil.isControlStructureCodeBlock(n,n.getFirstChild()));
reportCodeChange();
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.isDo());
Preconditions.checkState(NodeUtil.isControlStructureCodeBlock(n,n.getFirstChild()));
reportCodeChange();
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ownerFn.isEmpty()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(owner.getParent()!=null&&owner.getParent().isScript()&&owner.isExprResult()&&!n.getLastChild().isAssign()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(owner.getParent()!=null&&grandparent.isScript()&&owner.isExprResult()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!n.getLastChild().isAssign()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&!owner.isFor()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FOUND_REQUIRED!=null){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FOUND_REQUIRED!=null&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
NodeUtil.redeclareVarsInsideBranch(n);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
compiler.reportCodeChange();
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.redeclareVarsInsideBranch(n);
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
compiler.reportCodeChange();
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
NodeUtil.redeclareVarsInsideBranch(n);
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
compiler.reportCodeChange();
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.redeclareVarsInsideBranch(n);
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
compiler.reportCodeChange();
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
NodeUtil.redeclareVarsInsideBranch(n);
compiler.reportCodeChange();
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
NodeUtil.redeclareVarsInsideBranch(n);
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
NodeUtil.redeclareVarsInsideBranch(n);
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
compiler.reportCodeChange();
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
compiler.reportCodeChange();
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.redeclareVarsInsideBranch(n);
compiler.reportCodeChange();
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.redeclareVarsInsideBranch(n);
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
compiler.reportCodeChange();
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
NodeUtil.redeclareVarsInsideBranch(n);
compiler.reportCodeChange();
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
NodeUtil.redeclareVarsInsideBranch(n);
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
NodeUtil.redeclareVarsInsideBranch(n);
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
compiler.reportCodeChange();
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
compiler.reportCodeChange();
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.redeclareVarsInsideBranch(n);
compiler.reportCodeChange();
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.redeclareVarsInsideBranch(n);
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
compiler.reportCodeChange();
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
NodeUtil.redeclareVarsInsideBranch(n);
compiler.reportCodeChange();
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
NodeUtil.redeclareVarsInsideBranch(n);
compiler.reportCodeChange();
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
NodeUtil.redeclareVarsInsideBranch(n);
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
compiler.reportCodeChange();
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.redeclareVarsInsideBranch(n);
compiler.reportCodeChange();
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.isAssignmentOp(n)||n.getType()==Token.INC||n.getType()==Token.DEC){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.isAssignmentOp(n)||n.getType()==Token.INC&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&n.getType()==Token.DEC){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
com.google.javascript.jscomp.TypeValidator,389
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rightType!=null){
shouldReport=true;
}else {
rightIsRefineable=false;
rightType=owner.getJSType();
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!rightType.canAssignTo(leftType)&&!leftType.canAssignTo(rightType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&!leftType.canAssignTo(rightType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!type.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!castType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!rightType.canAssignTo(rightType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(leftType!=null&&rightType!=null){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(leftType!=null&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&rightType!=null){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ownerType.setJSType(typeA);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType!=null&&rightType!=null){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType!=null&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
leftType=ownerType.getRestrictedTypeGivenToBooleanOutcome(!shouldReport);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(leftLiterals.toBooleanOutcomes==BooleanLiteralSet.get(!shouldReport)){
type=ownerType;
}else {
type=ownerType.getLeastSupertype(rightType);
}
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
leftType=ownerType.getRestrictedTypeGivenToBooleanOutcome(!shouldReport);
if(leftLiterals.toBooleanOutcomes==BooleanLiteralSet.get(!shouldReport)){
type=ownerType;
}else {
type=ownerType.getLeastSupertype(rightType);
}

if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.setJSType(rightType);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.setJSType(rightType);
if(!leftType.isNoType()&&rightType!=null){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.GT :

if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.isNoType()&&!type.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!rightType.isNoType()&&!rightType.isUnknownType()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!rightType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&!rightType.isUnknownType()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&!type.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
mismatch(t,n,FOUND_REQUIRED,rightType,leftType);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!rightType.isNoType()&&!rightType.isUnknownType()){
mismatch(t,n,FOUND_REQUIRED,rightType,leftType);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!rightType.isNoType()&&!rightType.canAssignTo(leftType)){
mismatch(t,n,FOUND_REQUIRED,rightType,leftType);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!type.isNoType()&&!rightType.isUnknownType()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!rightType.isUnknownType()){
mismatch(t,n,FOUND_REQUIRED,rightType,leftType);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!type.isNoType()&&!rightType.canAssignTo(leftType)){
mismatch(t,n,FOUND_REQUIRED,rightType,leftType);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!type.isNoType()&&!rightType.isUnknownType()){
mismatch(t,n,FOUND_REQUIRED,rightType,leftType);
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return this.isConstructor()||ownerFn.isConstructor();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!owner.isVarArgs()||owner.isOptionalArg()&&owner.isVarArgs()||owner.isOptionalArg()){
boolean owner.isVarArgs()&&(ownerType==null||thatParamType.isUnknownType()||thatParamType.isNoType())=owner.isVarArgs()&&(ownerType==null||thatParamType.isUnknownType()||thatParamType.isNoType());
if(!isTopFunction){
return false;
}
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!rightType.matchesNumberContext()&&!rightType.matchesStringContext()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!rightType.matchesNumberContext()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&!rightType.matchesStringContext()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!type.isNoType()&&!rightType.matchesStringContext()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!rightType.matchesNumberContext()&&!type.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isSubtype(rightType)&&!rightType.isEmptyType()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isSubtype(rightType)&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&!rightType.isEmptyType()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!anyObjectType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isSubtype(rightType)&&!type.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!rightType.matchesNumberContext()&&!rightType.isSubtype(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&!rightType.isSubtype(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!type.isNoType()&&!rightType.isSubtype(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.canTestForShallowEqualityWith(rightType)&&(rightType.autoboxesTo()==null||!rightType.autoboxesTo().isSubtype(leftType))){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.canTestForShallowEqualityWith(rightType)&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&(rightType.autoboxesTo()==null||!caseType.autoboxesTo().isSubtype(leftType))){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!switchType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!rightType.autoboxesTo().canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.canTestForShallowEqualityWith(rightType)&&!rightType.autoboxesTo().canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(leftType.isRecordType()){
return RecordType.isSubtype(this,that.toMaybeRecordType());
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(n.isGetProp()&&ownerType.isAssign());
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
ownerFn=src.restrictByNotNullOrUndefined();
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isEmptyType()&&shouldReport){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isEmptyType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&shouldReport){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!objectType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getTypeDeprecationInfo(ownerType)!=null&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(propName!=null&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&n.getNext()!=null){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
addSymbolUse(propName,t.getModule(),PROPERTY);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getPropertyDeprecationInfo(ObjectType.cast(dereference(n.getFirstChild().getJSType())),n.getLastChild().getString())!=null&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isNew()){
return ;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
collect(t,n,owner);
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
doStatementNormalizations(t,n,owner);
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getJSType().toMaybeFunctionType()!=null&&!n.getJSType().toMaybeFunctionType().isConstructor()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.getJSType().toMaybeFunctionType()!=null&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&!n.getJSType().toMaybeFunctionType().isConstructor()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
owner=addMarker(n.getJSType().toMaybeFunctionType(),nodeToInsertAfter,null);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Iterables.addAll(Sets.newTreeSet(ALPHA),n.getJSType().toMaybeFunctionType().getAllImplementedInterfaces());
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((n.isName())&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isGetProp()&&n==owner.getFirstChild()&&NodeUtil.isAssignmentOp(parent)){
return false;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.VAR :

if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.ASSIGN :

if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getFirstChild().getString()!=null&&n.getFirstChild().getString().length()>0&&ownerType.isDeclared(n.getFirstChild().getString(),false)&&!(ownerType.getVar(n.getFirstChild().getString()).getType() instanceof FunctionType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getFirstChild().getString()!=null&&functionPrivateName.length()>0&&ownerType.isDeclared(functionPrivateName,false)&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!(ownerType.getVar(n.getFirstChild().getString()).getType() instanceof FunctionType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
checkNoTypeCheckSection(n,true);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(OBJECT_PROPERTY_STRING.equals(n.getQualifiedName())){
Node n=IR.name(EXTERN_OBJECT_PROPERTY_STRING);
newName.copyInformationFrom(n);
owner.replaceChild(n,newName);
ownerType.reportCodeChange();
return ;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!n.isNew()){
return ;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!EXTERN_OBJECT_PROPERTY_STRING.equals(ownerFn.getQualifiedName())){
return ;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ownerType.isName()){
return ;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getString().length()>0&&(ownerFn==null||ownerFn.isExtern())&&!SPECIAL_EXTERNS.contains(n.getString())){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!SPECIAL_EXTERNS.contains(n.getString())){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!n.isName()){
return ;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!owner.isGetProp()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!owner.isName()){
return ;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(t.getScope().getVar(owner.getString())==null||!v.isGlobal()){
return ;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info.allowMove){
if(maybeProcessDeclaration(t,owner,n,getNamedInfo(t.getScope().getVar(owner.getString())))){
if(hasConditionalAncestor(parent.getParent())){
info.allowMove=false;
}
}else {
processReference(t,info,owner.getString());
}
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(rightType!=null&&!rightType.isUnknownType()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(rightType!=null&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&!objIndexType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((!JSType.toMaybeFunctionType(getObjectSlot(FOUND_REQUIRED)).hasOwnProperty(propName)||JSType.toMaybeFunctionType(getObjectSlot(FOUND_REQUIRED)).isPropertyTypeInferred(propName))&&((t.getInput()!=null&&t.getInput().isExtern()&&!JSType.toMaybeFunctionType(getObjectSlot(FOUND_REQUIRED)).isNativeObjectType())||!JSType.toMaybeFunctionType(getObjectSlot(FOUND_REQUIRED)).isInstanceType())){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((!JSType.toMaybeFunctionType(getObjectSlot(FOUND_REQUIRED)).hasOwnProperty(propName)||ownerType.isPropertyTypeInferred(propName))&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&((t.getInput()!=null&&t.getInput().isExtern()&&!JSType.toMaybeFunctionType(getObjectSlot(FOUND_REQUIRED)).isNativeObjectType())||!ownerType.isInstanceType())){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerFn==null?null:var.getJSDocInfo()!=null&&docInfo.isDeprecated()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isFunction()||parent.isVar()){
return ;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(FOUND_REQUIRED!=null&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&NodeUtil.isGet(n)&&!owner.isGetProp()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(createNameInformation(t,n,owner)==null){
return ;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nameInfo.onlyAffectsClassDef){
if(nameInfo.superclass!=null){
recordReference(nameInfo.name,nameInfo.superclass,RefType.INHERITANCE);
}
String propName=n.getQualifiedName();
if(nodeName!=null){
recordReference(nameInfo.name,nodeName,RefType.REGULAR);
}
return ;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
n.setString(propName);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
compiler.reportCodeChange();
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.setString(propName);
compiler.reportCodeChange();
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return true;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!ownerType.containsKey(propName)&&!isInvalidatingType(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ownerType.containsKey(propName)&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!isInvalidatingType(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
ownerType.put(propName,new PropertyInfo(leftType,n));
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
if(NodeUtil.isVarOrSimpleAssignLhs(n,ownerType)){
Node owner=(parent.isVar())?n.getFirstChild():parent.getLastChild();
return (rhs!=null&&!NodeUtil.evaluatesToLocalValue(rhs,NON_LOCAL_RESULT_PREDICATE));
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n==null&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return shouldReport;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
if(shouldReport){
if(NodeUtil.isStatementParent(n)){
for(Node n.getFirstChild()=n.getFirstChild();child!=null;child=child.getNext()){
if(NodeUtil.isHoistedFunctionDeclaration(child)){
defineFunctionLiteral(child,n);
}
}
}
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
Preconditions.checkArgument(n.isName()||n.isGetProp());
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(propName==null){
return false;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(propName==null){
return false;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
Preconditions.checkArgument(n.isName()||n.isGetProp());
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!ownerType.isName()){
return false;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isUnremovableNode(n.getFirstChild())&&!mayHaveSideEffects(n.getFirstChild())){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!isUnremovableNode(n.getFirstChild())&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!mayHaveSideEffects(n.getFirstChild())){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isSyntheticBlock()||n.getParent()==null){
return n;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.tryMergeBlock(n)){
reportCodeChange();
return null;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.redeclareVarsInsideBranch(n);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.redeclareVarsInsideBranch(n);
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
compiler.reportCodeChange();
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.redeclareVarsInsideBranch(n);
compiler.reportCodeChange();
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.redeclareVarsInsideBranch(n);
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
compiler.reportCodeChange();
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.redeclareVarsInsideBranch(n);
compiler.reportCodeChange();
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.redeclareVarsInsideBranch(n);
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
compiler.reportCodeChange();
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.redeclareVarsInsideBranch(n);
compiler.reportCodeChange();
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.redeclareVarsInsideBranch(n);
compiler.reportCodeChange();
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!NodeUtil.isFunctionExpression(n)&&!NodeUtil.isHoistedFunctionDeclaration(n)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!NodeUtil.isFunctionExpression(n)&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&!NodeUtil.isHoistedFunctionDeclaration(n)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(n.isFunction());
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(n.isFunction());
if(!NodeUtil.isFunctionExpression(n)&&!NodeUtil.isHoistedFunctionDeclaration(n)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(n.isFunction());
if(!NodeUtil.isFunctionExpression(n)&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(n.isFunction());
if(!leftType.isNoType()&&!NodeUtil.isHoistedFunctionDeclaration(n)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!n.isQuotedString()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&!consumesDanglingElse(n)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case Token.NAME :

if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isFunction()){
return compiler.getCodingConvention().isInlinableFunction(n);
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isFunction()){
return compiler.getCodingConvention().isInlinableFunction(n);
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(owner!=null&&parent.isName()){
Node ownerFn=parent.getParent();
if(gramps!=null&&gramps.isVar()){
return false;
}
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(owner==null){
return ;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerFn==null){
return ;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerFn.getAnnotation()!=GraphReachability.REACHABLE||(shouldReport&&!NodeUtil.mayHaveSideEffects(n))){
removeDeadExprStatementSafely(n);
return ;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tryRemoveUnconditionalBranching(n);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&n.getBooleanProp(Node.FREE_CALL)&&NodeUtil.isGet(owner)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(ownerType.restrictByNotNullOrUndefined().collapseUnion().toMaybeFunctionType()!=null&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.restrictByNotNullOrUndefined().collapseUnion().toMaybeParameterizedType()!=null&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.isUnknownType()||type.isUnionType()){
return false;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
Preconditions.checkState(n.isName());
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
if(n.getJSDocInfo()==null){
info=ownerType.getJSDocInfo();
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getJSDocInfo()==null){
info=ownerFn.getJSDocInfo();
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(owner.getJSDocInfo()==null||!owner.isGetProp()||!owner.getFirstChild().isThis()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(owner.getJSDocInfo()==null||!owner.isGetProp()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&!owner.getFirstChild().isThis()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(owner.getJSDocInfo()==null||!owner.isGetProp()&&!owner.getFirstChild().isThis()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
Preconditions.checkState(n.isFunction());
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&!n.isLabel()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
if(!n.getFirstChild().isEmpty()){
ownerType.addChildrenToFront(n.getFirstChild());
}else {
ownerType.setWasEmptyNode(true);
}
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
c=ownerType;
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
reportChange();
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
if(!n.getFirstChild().isEmpty()){
ownerType.addChildrenToFront(n.getFirstChild());
}else {
ownerType.setWasEmptyNode(true);
}
c=ownerType;
reportChange();

registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
c=ownerType;
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
reportChange();
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
c=ownerType;
reportChange();

JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!NodeUtil.isVarDeclaration(n)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(n.isAssign());
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!shouldReport){
return n;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!owner.hasChildren()||right.getFirstChild().getNext()!=right.getLastChild()){
return n;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(mayHaveSideEffects(owner)){
return n;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((leftType instanceof ObjectType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((leftType instanceof ObjectType)&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
namedType=new IndexedType(this,(ObjectType)leftType,ownerType);
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(owner.getParent()!=null&&owner.getParent().isScript()&&owner.isExprResult()&&!n.getLastChild().isAssign()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(owner.getParent()!=null&&grandparent.isScript()&&owner.isExprResult()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!n.getLastChild().isAssign()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(n.isDo());
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(hasBreakOrContinue(n)){
return n;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(NodeUtil.isControlStructureCodeBlock(n,n.getFirstChild()));
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
ownerType.replaceChild(n,owner);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(mayHaveSideEffects(NodeUtil.getConditionExpression(n))){
Node n=IR.exprResult(cond.detachFromParent()).srcref(cond);
ownerType.addChildAfter(condStatement,owner);
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
reportCodeChange();
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkArgument(n.isDo());
Preconditions.checkState(NodeUtil.isControlStructureCodeBlock(n,n.getFirstChild()));
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!ownerFn.isEmpty()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return ownerFn==null?false:n.isFromExterns();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return ownerFn==null?true:ownerFn.isFromExterns();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!(shouldReport)||!ownerType.isEquivalentTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!ownerType.isEquivalentTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!newType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!owner.isFor()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(owner!=null&&NodeUtil.isObjectLitKey(n,parent)){
return true;
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
handleGet(t,n,owner,FOUND_REQUIRED,Ref.Type.PROTOTYPE_GET);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
Preconditions.checkState(n.isBlock());
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
Preconditions.checkState(n.isBlock());
return false;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(FOUND_REQUIRED!=null&&n.getFirstChild()!=n.getLastChild()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!leftType.isNoType()&&n.getFirstChild()!=n.getLastChild()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
NodeUtil.redeclareVarsInsideBranch(n);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
compiler.reportCodeChange();
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.redeclareVarsInsideBranch(n);
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
compiler.reportCodeChange();
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
NodeUtil.redeclareVarsInsideBranch(n);
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
compiler.reportCodeChange();
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.redeclareVarsInsideBranch(n);
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
compiler.reportCodeChange();
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
NodeUtil.redeclareVarsInsideBranch(n);
compiler.reportCodeChange();
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
NodeUtil.redeclareVarsInsideBranch(n);
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
NodeUtil.redeclareVarsInsideBranch(n);
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
compiler.reportCodeChange();
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
compiler.reportCodeChange();
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.redeclareVarsInsideBranch(n);
compiler.reportCodeChange();
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.redeclareVarsInsideBranch(n);
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
compiler.reportCodeChange();
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
NodeUtil.redeclareVarsInsideBranch(n);
compiler.reportCodeChange();
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
NodeUtil.redeclareVarsInsideBranch(n);
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
NodeUtil.redeclareVarsInsideBranch(n);
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
compiler.reportCodeChange();
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
compiler.reportCodeChange();
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.redeclareVarsInsideBranch(n);
compiler.reportCodeChange();
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.redeclareVarsInsideBranch(n);
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
compiler.reportCodeChange();
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!n.getFirstChild().hasChildren()){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
NodeUtil.redeclareVarsInsideBranch(n);
compiler.reportCodeChange();
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
NodeUtil.redeclareVarsInsideBranch(n);
compiler.reportCodeChange();
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
NodeUtil.redeclareVarsInsideBranch(n);
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
swtich (n.getType()){
case Token.DO :
return ;

case Token.BLOCK :
if(owner.isTry()){
if(NodeUtil.isTryCatchNodeContainer(n)){
return ;
}
}
break;

case Token.CATCH :
Node n=parent.getParent();
NodeUtil.maybeAddFinally(tryNode);
break;

}
compiler.reportCodeChange();
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
NodeUtil.redeclareVarsInsideBranch(n);
compiler.reportCodeChange();
if(ownerType.isLoggable(Level.FINE)){
logger.fine("Removing "+n.toString());
}
NodeUtil.removeChild(n.getParent(),n);
if(!leftType.isNoType()&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.isAssignmentOp(n)||n.getType()==Token.INC||n.getType()==Token.DEC){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(NodeUtil.isAssignmentOp(n)||n.getType()==Token.INC&&!rightType.canAssignTo(leftType)){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!leftType.isNoType()&&n.getType()==Token.DEC){
if(bothIntrinsics(rightType,leftType)){
registerMismatch(rightType,leftType,null);
}else {
JSType ownerType=getJSType(owner);
if(ownerType.isFunctionPrototypeType()){
FunctionType ownerFn=ownerType.toObjectType().getOwnerFunction();
if(ownerFn.isInterface()&&rightType.isFunctionType()){
return true;
}
}
mismatch(t,n,"assignment to property "+propName,rightType,leftType);
}
return false;
}
return true;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
com.google.javascript.jscomp.TypeValidator,533
========
if(info==null){
info=origParent.getJSDocInfo();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info!=null){
info=parent.getJSDocInfo();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(info==null&&parent.isVar()&&parent.hasOneChild()){
info=parent.getJSDocInfo();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
newType=(nameType==null)?getNativeType(UNKNOWN_TYPE):nameType;
if(info==null){
info=parent.getJSDocInfo();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info==null){
info=gramps.getJSDocInfo();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent==null){
continue;
}
if(info==null){
info=parent.getJSDocInfo();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info==null||!n.isGetProp()||!n.getFirstChild().isThis()){
info=parent.getJSDocInfo();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(typeA==null){
return null;
}
if(info==null){
info=parent.getJSDocInfo();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info==null&&!(parent.isVar()&&!parent.hasOneChild())){
info=parent.getJSDocInfo();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(info==null||!info.hasTypedefType()){
info=parent.getJSDocInfo();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(info==null&&NodeUtil.isFunctionExpression(parent)){
info=parent.getJSDocInfo();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(info==null){
info=parent.getParent().getJSDocInfo();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(info==null&&NodeUtil.isFunctionExpression(parent)){
info=parent.getParent().getJSDocInfo();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.FUNCTION :

if(info==null){
info=parent.getJSDocInfo();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
info=(JSDocInfo)n.getProp(Node.JSDOC_INFO_PROP);
if(info==null){
info=parent.getJSDocInfo();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(info==null&&parent.isFunction()){
info=parent.getJSDocInfo();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(info==null&&n!=null){
info=parent.getJSDocInfo();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(variableName!=null&&variableName!=null);
if(info==null){
info=parent.getJSDocInfo();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(variableName!=null&&variableName!=null);
if(info==null&&n!=null){
info=parent.getJSDocInfo();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(info==null){
Preconditions.checkState(parent.getParent()!=null&&gramps.isVar());
info=parent.getJSDocInfo();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(info==n){
info=parent.getJSDocInfo();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
child.next=null;
if(info==null){
info=parent.getJSDocInfo();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
child.parent=null;
if(info==null){
info=parent.getJSDocInfo();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getChildBefore(n)==null)n=first.next;else prev.next=child.next;
if(info==null){
info=parent.getJSDocInfo();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
child.next=null;
child.parent=null;
if(info==null){
info=parent.getJSDocInfo();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
newChild.next=child.next;
if(info==null){
info=parent.getJSDocInfo();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
newChild.parent=this;
if(info==null){
info=parent.getJSDocInfo();
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isGetProp()&&NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isGetProp()||NodeUtil.isFunctionExpression(parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isGetProp()&&NodeUtil.isFunctionExpression(parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
expectedConst=false;
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
if(var!=null){
info=var.getJSDocInfo();
}
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
expectedConst=false;
if(var!=null){
info=var.getJSDocInfo();
}

JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent.isExprResult()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(parent.isExprResult()&&NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(parent.isGetProp()&&NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(info!=null){
n.setJSDocInfo(rootNodeJsDoc);
rootNodeJsDoc.setAssociatedNode(irNode);
}
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isGetProp()||NodeUtil.isAssignmentOp(n)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isGetProp()&&NodeUtil.isAssignmentOp(n)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isDo()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isDo()&&NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
docInfo=n.getJSDocInfo();
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
if(info!=null){
ObjectType dereferenceToObject(n.getFirstChild().getJSType())=dereferenceToObject(n.getFirstChild().getJSType());
if(dereferenceToObject(n.getFirstChild().getJSType())!=null){
String n.getLastChild().getString()=n.getLastChild().getString();
if(dereferenceToObject(n.getFirstChild().getJSType()).hasOwnProperty(n.getLastChild().getString())){
dereferenceToObject(n.getFirstChild().getJSType()).setPropertyJSDocInfo(n.getLastChild().getString(),info);
}
ObjectType dereferenceToObject(dereferenceToObject(n.getFirstChild().getJSType()).getPropertyType(n.getLastChild().getString()))=dereferenceToObject(dereferenceToObject(n.getFirstChild().getJSType()).getPropertyType(n.getLastChild().getString()));
if(dereferenceToObject(dereferenceToObject(n.getFirstChild().getJSType()).getPropertyType(n.getLastChild().getString()))!=null){
attachJSDocInfoToNominalTypeOrShape(dereferenceToObject(dereferenceToObject(n.getFirstChild().getJSType()).getPropertyType(n.getLastChild().getString())),info,n.getQualifiedName());
}
}
}
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
docInfo=n.getJSDocInfo();
if(info!=null){
ObjectType dereferenceToObject(n.getFirstChild().getJSType())=dereferenceToObject(n.getFirstChild().getJSType());
if(dereferenceToObject(n.getFirstChild().getJSType())!=null){
String n.getLastChild().getString()=n.getLastChild().getString();
if(dereferenceToObject(n.getFirstChild().getJSType()).hasOwnProperty(n.getLastChild().getString())){
dereferenceToObject(n.getFirstChild().getJSType()).setPropertyJSDocInfo(n.getLastChild().getString(),info);
}
ObjectType dereferenceToObject(dereferenceToObject(n.getFirstChild().getJSType()).getPropertyType(n.getLastChild().getString()))=dereferenceToObject(dereferenceToObject(n.getFirstChild().getJSType()).getPropertyType(n.getLastChild().getString()));
if(dereferenceToObject(dereferenceToObject(n.getFirstChild().getJSType()).getPropertyType(n.getLastChild().getString()))!=null){
attachJSDocInfoToNominalTypeOrShape(dereferenceToObject(dereferenceToObject(n.getFirstChild().getJSType()).getPropertyType(n.getLastChild().getString())),info,n.getQualifiedName());
}
}
}

JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isQualifiedName()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isQualifiedName()&&NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isVar()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkArgument(n.getQualifiedName()!=null&&variableName!=null);
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(member.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
type=getValueType(n.getNext());
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isAssign()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isAssign()&&NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
type=Name.Type.OTHER;
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isExprResult()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isQualifiedName()&&n.getJSDocInfo()!=null){
return ;
}
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isGetProp()||canNameValueChange(parent,n)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isGetProp()||isAssignTo(newVar,n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
isPropAssign=true;
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
type=getValueType(n.getNext());
isPropAssign=true;

JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isThis()&&shouldReportThis(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isThis()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isGetProp()||shouldReportThis(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isThis()&&NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isActive()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(c.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isName()||n.isGetProp()){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isName()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(parent.getFirstChild()==null||!function.isGetProp()){
return false;
}
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.hasOneChild()){
NodeUtil.redeclareVarsInsideBranch(catchBlock);
}
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
parent.detachChildren();
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(n.isName()||n.isString());
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(n.isName()||n.isString());
if(n.isName()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isGetProp()||NodeUtil.isGet(parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(sibling.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isGetProp()&&NodeUtil.isGet(parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(parent.isAssign()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.NAME :

if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent.isFunction()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(!n.isName()){
return ;
}
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent.isFunction()&&NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isName()&&NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isGetProp()||isDeclaration(n)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(origParent.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!allowDupe){
compiler.report(JSError.make(NodeUtil.getSourceName(n),n,VAR_MULTIPLY_DECLARED_ERROR,FOUND_REQUIRED,(origVar.input!=null?origVar.input.getName():"??")));
}
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent.isAssign()&&NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isExprResult()&&NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(hasBreakOrContinue(n)){
return n;
}
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Preconditions.checkState(NodeUtil.isControlStructureCodeBlock(n,n.getFirstChild()));
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(n.isName());
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(n.isName());
if(n.isGetProp()&&NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(n.isName());
if(parent.isAssign()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(n.isName());
if(parent.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(n.isName());
if(parent.isAssign()&&NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(n.isName());
if(parent.isGetProp()&&NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isReturn()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isReturn()&&NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.getNext()!=null){
if(right.getNext()!=null||!NodeUtil.isImmutableValue(right)){
return n;
}
}
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(grandparent.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
context=new GenerateNodeContext(n,parent.getParent(),parent);
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent.isScript()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(n.hasOneChild());
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(n.hasOneChild());
if(parent.isScript()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(n.hasOneChild());
if(parent.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case Token.PARAM_LIST :

if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isString()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isString()&&NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.setString(variableName);
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
compiler.reportCodeChange();
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.setString(variableName);
compiler.reportCodeChange();
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isGetProp()||isInThrowExpression(n)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
info.occurrences.add(new StringOccurrence(n,parent));
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
info.numOccurrences++;
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getFirstChild().getNext().isString()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(dest.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.getFirstChild().getNext().isString()&&NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
Preconditions.checkState(!NodeUtil.isObjectLitKey(n,n.getParent()));
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isExpressionTreeUnsafe(n,state.sideEffects)){
state.sideEffects=true;
state.extractBeforeStatement=extractExpression(n,state.extractBeforeStatement);
}
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isSyntheticBlock()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nameEndsWithFieldNameToStrip(parent)||qualifiedNameBeginsWithStripType(parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(nameEndsWithFieldNameToStrip(parent)||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isGetProp()||qualifiedNameBeginsWithStripType(parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isFunction()&&NodeUtil.referencesThis(n)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isFunction()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isGetProp()||NodeUtil.referencesThis(n)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(value.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isFunction()&&NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isGetProp()&&NodeUtil.referencesThis(n)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isFunction()||NodeUtil.referencesThis(n)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
n.setJSType(newType);
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(forVar.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(leftSide.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
next=n.getNext();
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isGetProp()||areMatchingExits(parent,n)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isInc()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(isLowerPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isGetProp()||isLowerPrecedenceInExpression(n.getFirstChild(),AND_PRECEDENCE)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(firstArgument.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isLowerPrecedenceInExpression(n,OR_PRECEDENCE)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isLowerPrecedenceInExpression(n,OR_PRECEDENCE)||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
parameterType=n.getJSType();
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
isVarArgs=n.isVarArgs();
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
parameterType=n.getJSType();
isVarArgs=n.isVarArgs();

JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isFor()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isFor()&&NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(parent.isInc()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isGetProp()||isVariableStillLiveWithinExpression(parent,n,var.name)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isGetProp()||isValidPrivateConstructorAccess(parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isGetProp()||isCallToScopeMethod(n)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isGetProp()||mayThrowException(n)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(checkForStateChangeHelper(n.getFirstChild(),shouldReport,compiler)||checkForStateChangeHelper(n.getLastChild(),shouldReport,compiler)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(checkForStateChangeHelper(n.getFirstChild(),shouldReport,compiler)||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isGetProp()||checkForStateChangeHelper(n.getLastChild(),shouldReport,compiler)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(prop.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(right.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==VariableLiveness.KILL){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
state=isVariableReadBeforeKill(n.getNext(),variableName);
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(n.isGetProp()||NodeUtil.isGet(n)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isGetProp()&&NodeUtil.isGet(n)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.isGetProp()||areNodesEqualForInlining(parent,n.getLastChild())){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
tryRemoveUnconditionalBranching(n);
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(parent.isCall()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.copyNameAnnotations(n.getLastChild(),parent);
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(n.getJSType()!=null){
parent.setJSType(type);
}
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
parent.replaceChild(n,parent);
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(parent.isCall()&&NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.copyNameAnnotations(n.getLastChild(),parent);
if(n.isGetProp()&&NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
parent.replaceChild(n,parent);
if(n.isGetProp()&&NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
compiler.reportCodeChange();
if(n.isGetProp()&&NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.copyNameAnnotations(n.getLastChild(),parent);
if(parent.isCall()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
parent.replaceChild(n,parent);
if(parent.isCall()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
compiler.reportCodeChange();
if(parent.isCall()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.copyNameAnnotations(n.getLastChild(),parent);
if(parent.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
parent.replaceChild(n,parent);
if(parent.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
compiler.reportCodeChange();
if(parent.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.copyNameAnnotations(n.getLastChild(),parent);
parent.replaceChild(n,parent);
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
NodeUtil.copyNameAnnotations(n.getLastChild(),parent);
compiler.reportCodeChange();
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
parent.replaceChild(n,parent);
compiler.reportCodeChange();
if(n.isGetProp()||NodeUtil.isObjectLitKey(n,parent)){
JSDocInfo info=n.getJSDocInfo();
if(info==null){
info=parent.getJSDocInfo();
}
allowDupe=info!=null&&info.getSuppressions().contains("duplicate");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COUNT THESE===> Subject [_name=closure, _id=11, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.TypeCheckTest testGetprop4
TESTING : com.google.javascript.jscomp.TypeCheckTest::testGetprop4
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/closure/closure_11_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.TypeCheckTest::testGetprop4
  - com.google.javascript.jscomp.TypeCheckTest::testGetprop4
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Timeout!
