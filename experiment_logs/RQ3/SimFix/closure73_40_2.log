java version "1.7.0_231"
OpenJDK Runtime Environment (rhel-2.6.19.1.el7_6-x86_64 u231-b01)
OpenJDK 64-Bit Server VM (build 24.231-b01, mixed mode)
Check out ee834409 to /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/ OK
Init local repository...................................................... OK
Tag post-fix revision...................................................... OK
Run post-checkout hook..................................................... OK
Initialize fixed program version........................................... OK
Apply patch................................................................ OK
Initialize buggy program version........................................... OK
Diff ee834409:760bded3..................................................... OK
Apply patch................................................................ OK
Tag pre-fix revision....................................................... OK
Check out program version: Closure-73b..................................... OK
Running ant (compile)...................................................... OK
Running ant (compile.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Running ant (run.dev.tests)................................................ OK
Failing tests: 1
  - com.google.javascript.jscomp.CodePrinterTest::testUnicode
/home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2
PURIFY IS FALSE
=================================================
Project : closure_73	start : 19/10/30 22:14

Field type inconsistancy 'type' with types : Type and JSType
Field type inconsistancy 'errors' with types : List<JSError> and JSError[]
Variable type inconsistancy of 'name' in method 'visit,NodeTraversal,Node,Node' with types : Name and String
Field type inconsistancy 'THIS' with types : Token and int
readFailedTest: path is /mnt/nfs/work1/brun/mmotwani/SimFix/d4j-info/failed_tests/closure/73.txt#ATTEMPTS: 1

# FAILING TESTS: 1
TIMEOUT : 18000000
===========
locations= [<com.google.javascript.jscomp.Compiler,1243>, <com.google.javascript.jscomp.Compiler,1244>, <com.google.javascript.jscomp.Compiler,1246>, <com.google.javascript.jscomp.Compiler,1247>, <com.google.javascript.jscomp.Compiler,1249>, <com.google.javascript.jscomp.Compiler,1250>, <com.google.javascript.jscomp.CodeGenerator,1051>, <com.google.javascript.jscomp.CodeGenerator,1160>, <com.google.javascript.jscomp.CodeGenerator,1164>, <com.google.javascript.jscomp.CodeGenerator,1165>, <com.google.javascript.jscomp.CodeGenerator,1177>, <com.google.javascript.jscomp.CodeGenerator,1187>, <com.google.javascript.jscomp.CodeGenerator,1192>, <com.google.javascript.jscomp.Compiler,238>, <com.google.javascript.jscomp.Compiler,240>, <com.google.javascript.jscomp.Compiler,244>, <com.google.javascript.jscomp.Compiler,274>, <com.google.javascript.jscomp.CompilerOptions,933>, <com.google.javascript.jscomp.DiagnosticGroup,59>, <com.google.javascript.jscomp.DiagnosticGroup,60>, <com.google.javascript.jscomp.DiagnosticGroup,61>, <com.google.javascript.jscomp.DiagnosticGroup,62>, <com.google.javascript.jscomp.DiagnosticGroup,70>, <com.google.javascript.jscomp.DiagnosticGroup,71>, <com.google.javascript.jscomp.DiagnosticGroup,73>, <com.google.javascript.jscomp.DiagnosticGroup,116>, <com.google.javascript.jscomp.DiagnosticGroup,117>, <com.google.javascript.jscomp.DiagnosticGroup,118>, <com.google.javascript.jscomp.DiagnosticGroupWarningsGuard,43>, <com.google.javascript.jscomp.DiagnosticGroupWarningsGuard,56>, <com.google.javascript.jscomp.ComposeWarningsGuard,105>, <com.google.javascript.jscomp.ComposeWarningsGuard,106>, <com.google.javascript.jscomp.ComposeWarningsGuard,108>, <com.google.javascript.jscomp.ComposeWarningsGuard,109>, <com.google.javascript.jscomp.ComposeWarningsGuard,111>, <com.google.javascript.jscomp.ComposeWarningsGuard,114>, <com.google.javascript.jscomp.ComposeWarningsGuard,116>, <com.google.javascript.rhino.Node,519>, <com.google.javascript.jscomp.parsing.IRFactory,1249>, <com.google.javascript.jscomp.parsing.TypeSafeDispatcher,257>, <com.google.javascript.jscomp.parsing.IRFactory,839>, <com.google.javascript.jscomp.parsing.IRFactory,840>, <com.google.javascript.jscomp.CodeGenerator,628>, <com.google.javascript.jscomp.CodeGenerator,634>, <com.google.javascript.jscomp.CodeGenerator,635>, <com.google.javascript.jscomp.CodeGenerator,940>, <com.google.javascript.jscomp.CodeGenerator,943>, <com.google.javascript.jscomp.CodeGenerator,944>, <com.google.javascript.jscomp.CodeGenerator,952>, <com.google.javascript.jscomp.CodeGenerator,959>, <com.google.javascript.jscomp.CodeGenerator,960>, <com.google.javascript.jscomp.CodeGenerator,961>, <com.google.javascript.jscomp.CodeGenerator,964>, <com.google.javascript.jscomp.CodeGenerator,993>, <com.google.javascript.jscomp.CodeGenerator,994>, <com.google.javascript.jscomp.CodeGenerator,995>, <com.google.javascript.jscomp.CodeGenerator,996>, <com.google.javascript.jscomp.CodeGenerator,997>, <com.google.javascript.jscomp.CodeGenerator,1034>, <com.google.javascript.jscomp.CodeGenerator,1045>, <com.google.javascript.jscomp.CodeGenerator,1046>, <com.google.javascript.jscomp.CodeGenerator,1056>, <com.google.javascript.jscomp.CodeGenerator,1057>, <com.google.javascript.jscomp.CodeGenerator,191>, <com.google.javascript.jscomp.CodeGenerator,192>, <com.google.javascript.jscomp.CodeGenerator,193>, <com.google.javascript.jscomp.CodeGenerator,194>, <com.google.javascript.jscomp.CodeGenerator,199>, <com.google.javascript.jscomp.CodeGenerator,202>, <com.google.javascript.jscomp.parsing.IRFactory,970>, <com.google.javascript.jscomp.parsing.IRFactory,971>, <com.google.javascript.jscomp.CodeGenerator,176>, <com.google.javascript.jscomp.CodeGenerator,177>, <com.google.javascript.jscomp.CodeGenerator,178>, <com.google.javascript.jscomp.CodeGenerator,381>, <com.google.javascript.jscomp.parsing.TypeSafeDispatcher,266>, <com.google.javascript.jscomp.parsing.TypeSafeDispatcher,267>, <com.google.javascript.jscomp.parsing.TypeSafeDispatcher,268>, <com.google.javascript.jscomp.parsing.TypeSafeDispatcher,269>, <com.google.javascript.jscomp.parsing.IRFactory,954>, <com.google.javascript.jscomp.parsing.IRFactory,959>, <com.google.javascript.jscomp.parsing.IRFactory,960>, <com.google.javascript.jscomp.parsing.IRFactory,961>, <com.google.javascript.jscomp.parsing.IRFactory,962>, <com.google.javascript.jscomp.parsing.IRFactory,963>, <com.google.javascript.jscomp.parsing.IRFactory,968>, <com.google.javascript.jscomp.parsing.IRFactory,969>, <com.google.javascript.jscomp.parsing.IRFactory,973>, <com.google.javascript.jscomp.CodeConsumer,200>, <com.google.javascript.jscomp.CodeConsumer,201>, <com.google.javascript.jscomp.CodeConsumer,204>, <com.google.javascript.jscomp.CodeConsumer,206>, <com.google.javascript.jscomp.CodeConsumer,207>, <com.google.javascript.jscomp.CodeConsumer,209>, <com.google.javascript.jscomp.CodeConsumer,213>, <com.google.javascript.jscomp.CodeConsumer,217>, <com.google.javascript.jscomp.CodeConsumer,223>, <com.google.javascript.jscomp.CodeConsumer,228>, <com.google.javascript.jscomp.CodeConsumer,229>, <com.google.javascript.jscomp.CodeConsumer,231>, <com.google.javascript.rhino.Node,1190>, <com.google.javascript.jscomp.NodeUtil,1101>, <com.google.javascript.jscomp.NodeUtil,1166>, <com.google.javascript.jscomp.NodeUtil,2421>, <com.google.javascript.jscomp.NodeUtil,2422>, <com.google.javascript.jscomp.NodeUtil,2423>, <com.google.javascript.jscomp.NodeUtil,2424>, <com.google.javascript.jscomp.NodeUtil,2425>, <com.google.javascript.jscomp.NodeUtil,2429>, <com.google.javascript.jscomp.CodeConsumer,62>, <com.google.javascript.jscomp.CodeConsumer,63>, <com.google.javascript.jscomp.CodeConsumer,135>, <com.google.javascript.jscomp.CodeConsumer,136>, <com.google.javascript.jscomp.CodeConsumer,139>, <com.google.javascript.jscomp.CodeConsumer,143>, <com.google.javascript.jscomp.CodeConsumer,144>, <com.google.javascript.jscomp.CodeConsumer,146>, <com.google.javascript.jscomp.CodeConsumer,154>, <com.google.javascript.jscomp.CodeConsumer,160>, <com.google.javascript.jscomp.CodeConsumer,161>, <com.google.javascript.jscomp.CodeConsumer,182>, <com.google.javascript.jscomp.CodeConsumer,184>, <com.google.javascript.jscomp.CodeConsumer,188>, <com.google.javascript.jscomp.CodeConsumer,189>, <com.google.javascript.jscomp.CodeConsumer,196>, <com.google.javascript.jscomp.CodeConsumer,197>, <com.google.javascript.jscomp.CodeConsumer,262>, <com.google.javascript.jscomp.CodePrinter,184>, <com.google.javascript.jscomp.CodePrinter,416>, <com.google.javascript.jscomp.CodePrinter,417>, <com.google.javascript.jscomp.CodePrinter,418>, <com.google.javascript.jscomp.CodePrinter,461>, <com.google.javascript.jscomp.CodePrinter,475>, <com.google.javascript.jscomp.CodePrinter,479>, <com.google.javascript.jscomp.CodePrinter,480>, <com.google.javascript.jscomp.CodeGenerator,71>, <com.google.javascript.jscomp.CodeGenerator,72>, <com.google.javascript.jscomp.CodeGenerator,75>, <com.google.javascript.jscomp.CodeGenerator,76>, <com.google.javascript.jscomp.CodeGenerator,188>, <com.google.javascript.jscomp.CodeGenerator,391>, <com.google.javascript.jscomp.CodeGenerator,863>, <com.google.javascript.jscomp.CodeGenerator,864>, <com.google.javascript.jscomp.CodeGenerator,871>, <com.google.javascript.jscomp.CodeGenerator,878>, <com.google.javascript.jscomp.CodeGenerator,880>, <com.google.javascript.jscomp.CodeGenerator,892>, <com.google.javascript.jscomp.CodeGenerator,893>, <com.google.javascript.jscomp.CodeGenerator,894>, <com.google.javascript.jscomp.CodeGenerator,895>, <com.google.javascript.jscomp.CodeGenerator,901>, <com.google.javascript.jscomp.CodeGenerator,1062>, <com.google.javascript.jscomp.CodeGenerator,1063>, <com.google.javascript.jscomp.CodeGenerator,1139>, <com.google.javascript.jscomp.SourceFile,79>, <com.google.javascript.jscomp.SourceFile,62>, <com.google.javascript.jscomp.SourceFile,70>, <com.google.javascript.jscomp.SourceFile,80>, <com.google.javascript.jscomp.SourceFile,82>, <com.google.javascript.jscomp.SourceFile,83>, <com.google.javascript.jscomp.SourceFile,84>, <com.google.javascript.jscomp.SourceFile,94>, <com.google.javascript.jscomp.SourceFile,110>, <com.google.javascript.jscomp.SourceFile,111>, <com.google.javascript.jscomp.SourceFile,118>, <com.google.javascript.jscomp.SourceFile,119>, <com.google.javascript.jscomp.SourceFile,136>, <com.google.javascript.jscomp.SourceFile,257>, <com.google.javascript.jscomp.JSSourceFile,72>, <com.google.javascript.jscomp.JSSourceFile,73>, <com.google.javascript.jscomp.JSSourceFile,74>, <com.google.javascript.jscomp.JSSourceFile,55>, <com.google.javascript.jscomp.JSSourceFile,78>, <com.google.javascript.jscomp.SourceFile,297>, <com.google.javascript.jscomp.SourceFile,298>, <com.google.javascript.jscomp.SourceFile,301>, <com.google.javascript.jscomp.SourceFile,302>, <com.google.javascript.jscomp.SourceFile,303>, <com.google.javascript.jscomp.SourceFile,304>, <com.google.javascript.jscomp.SourceMap,64>, <com.google.javascript.jscomp.SourceMap,67>, <com.google.javascript.jscomp.SourceMap,74>, <com.google.javascript.jscomp.SourceMap,64>, <com.google.javascript.jscomp.AbstractCompiler,35>, <com.google.javascript.jscomp.AbstractCompiler,39>, <com.google.javascript.jscomp.AbstractCompiler,264>, <com.google.javascript.jscomp.AbstractCompiler,36>, <com.google.javascript.jscomp.DiagnosticType,93>, <com.google.javascript.jscomp.DiagnosticType,94>, <com.google.javascript.jscomp.DiagnosticType,95>, <com.google.javascript.jscomp.DiagnosticType,96>, <com.google.javascript.jscomp.DiagnosticType,98>, <com.google.javascript.jscomp.DiagnosticType,99>, <com.google.javascript.jscomp.DiagnosticType,50>, <com.google.javascript.jscomp.DiagnosticType,61>, <com.google.javascript.jscomp.DiagnosticType,73>, <com.google.javascript.jscomp.DiagnosticType,86>, <com.google.javascript.jscomp.CheckLevel,24>, <com.google.javascript.jscomp.CheckLevel,25>, <com.google.javascript.jscomp.CheckLevel,26>]
======================com.google.javascript.jscomp.Compiler,1243
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
if(inputsByName.containsKey(currentPassName)){
throw new IllegalArgumentException("Conflicting externs name: "+name);
}
inputsByName.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
compiler.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName!=null){
inputsByName=Maps.newHashMap();
}
inputsByName.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CodePrinterTest::testUnicode
COUNT THESE===> Subject [_name=closure, _id=73, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CodePrinterTest testUnicode
TESTING : com.google.javascript.jscomp.CodePrinterTest::testUnicode
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CodePrinterTest::testUnicode
  - com.google.javascript.jscomp.CodePrinterTest::testUnicode
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=input.isExtern()?Maps.newHashMap():null;
}
inputsByName.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
Preconditions.checkNotNull(input,js);
inputsByName=Maps.newHashMap();
}
inputsByName.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CodePrinterTest::testUnicode
COUNT THESE===> Subject [_name=closure, _id=73, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CodePrinterTest testUnicode
TESTING : com.google.javascript.jscomp.CodePrinterTest::testUnicode
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CodePrinterTest::testUnicode
  - com.google.javascript.jscomp.CodePrinterTest::testUnicode
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
inputsByName.put(input.getName(),input);
return parse(JSSourceFile.fromCode(currentPassName,js));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CodePrinterTest::testUnicode
COUNT THESE===> Subject [_name=closure, _id=73, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CodePrinterTest testUnicode
TESTING : com.google.javascript.jscomp.CodePrinterTest::testUnicode
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CodePrinterTest::testUnicode
  - com.google.javascript.jscomp.CodePrinterTest::testUnicode
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
inputsByName.put(input.getName(),input);
return input.parse(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
names.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
nameDefinitionMultimap.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
inputsByName.put(input.getName(),new ExternalNameOnlyDefinition(jsRoot));
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
definitionSiteMap.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(jsRoot==null){
return false;
}
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
inputsByName.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
anonFns.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
inputsByName.put(input.getName(),jsRoot);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(jsRoot==null){
return ;
}
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
inputsByName.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
inputsByName.put(input.getName(),parseConfiguration(js));
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
inputsByName.put(input.getName(),config.name);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
if(currentPassName.equals(js)){
return ;
}
inputsByName.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
scopeUpRefMap.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
inputsByName.put(input.getName(),var.name);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
reachingDef.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
properties.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
assignments.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
mappedPaths.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
inputsByName.put(input.getName(),js);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
inputsByName.put(input.getName(),Annotation.NOT_IMPLEMENTED);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName!=null){
inputsByName=Maps.newHashMap();
}
nameDefinitionMultimap.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
inputsByName.put(input.getName(),toShadow.oldName);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
inputsByName.put(input.getName(),new Function(jsRoot));
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
inputsByName.put(input.getName(),new Callsite(jsRoot));
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
hasRegExpGlobalReferences=false;
inputsByName.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CodePrinterTest::testUnicode
COUNT THESE===> Subject [_name=closure, _id=73, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CodePrinterTest testUnicode
TESTING : com.google.javascript.jscomp.CodePrinterTest::testUnicode
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CodePrinterTest::testUnicode
  - com.google.javascript.jscomp.CodePrinterTest::testUnicode
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
throwsDescriptions.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
knownLocals.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
if(hasOwnDeclaredProperty(currentPassName)){
return false;
}
inputsByName.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
externalNoShadowVariableNames.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
inputsByName.put(input.getName(),p.newName);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
mayUseMap.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
inputsByName.put(input.getName(),lineCount);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
refNodes.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(affinityGraph==null){
inputsByName=Maps.newHashMap();
}
inputsByName.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
externalNames.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
parameters.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
localBleedingFunctions.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
localBleedingFunctionsPerScope.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
inputsByName.put(input.getName(),new NameInfo(currentPassName));
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(bestShadow.count<localAssignment.count){
continue;
}
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
inputsByName.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(lineCount!=-1){
return false;
}
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
inputsByName.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
if(getDefinitionsReferencedAt(jsRoot)==null){
return ;
}
inputsByName.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==Token.NAME){
inputsByName=Maps.newHashMap();
}
inputsByName.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
if(!isPropertyAssignmentToName(jsRoot.getNext())){
continue;
}
inputsByName.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(RenameProperties.RENAME_PROPERTY_FUNCTION_NAME.equals(currentPassName)){
return false;
}
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
inputsByName.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
if(!input.contains("%s")){
throw new FlagUsageException("No %s placeholder in module wrapper: \'"+wrapper);
}
inputsByName.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
globalNames.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
nameMap.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
inputsByName.put(input.getName(),new MessageLocation(currentPassName,jsRoot.getLineno()));
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
current.renameMap.put(jsRoot.getFirstChild().getString(),new LabelInfo(lineCount));
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
inputsByName.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
state.cssNames==null?null:inputsByName.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.currentPassName=state.idGeneratorMap;
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
inputsByName.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
props.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
if(jsRoot.getType()!=Token.FUNCTION){
return ;
}
inputsByName.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
initCompilerOptionsIfTesting();
CompilerInput input=new CompilerInput(JSSourceFile.fromCode(" [testcode] ",js));
if(inputsByName==null){
inputsByName=Maps.newHashMap();
}
if(lineCount<0){
return ;
}
inputsByName.put(input.getName(),input);
return input.getAstRoot(this);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
com.google.javascript.jscomp.Compiler,1244
com.google.javascript.jscomp.Compiler,1246
com.google.javascript.jscomp.Compiler,1247
com.google.javascript.jscomp.Compiler,1249
com.google.javascript.jscomp.Compiler,1250
com.google.javascript.jscomp.CodeGenerator,1051
========
if(c>0x1f&&c<0x7f){
sb.append(c);
}else {
appendHexJavaScriptRepresentation(sb,c);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:com.google.javascript.jscomp.CodePrinterTest::testUnicode
COUNT THESE===> Subject [_name=closure, _id=73, _ssrc=/src, _tsrc=/test, _sbin=/build/classes, _tbin=/build/test, _dependency=null] com.google.javascript.jscomp.CodePrinterTest testUnicode
TESTING : com.google.javascript.jscomp.CodePrinterTest::testUnicode
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t com.google.javascript.jscomp.CodePrinterTest::testUnicode
Failing tests: 0
TESTING : closure_73
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_40_2/closure/closure_73_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
Failing tests: 0
Successfully repair!
