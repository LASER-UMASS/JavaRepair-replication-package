java version "1.7.0_231"
OpenJDK Runtime Environment (rhel-2.6.19.1.el7_6-x86_64 u231-b01)
OpenJDK 64-Bit Server VM (build 24.231-b01, mixed mode)
Check out 1696 to /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/SIMF OK
Init local repository...................................................... OK
Tag post-fix revision...................................................... OK
Initialize fixed program version........................................... OK
Apply patch................................................................ OK
Initialize buggy program version........................................... OK
Diff 1696:1695............................................................. OK
Apply patch................................................................ OK
Tag pre-fix revision....................................................... OK
Check out program version: Chart-5b........................................ OK
Running ant (compile)...................................................... OK
Running ant (compile.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Running ant (run.dev.tests)................................................ OK
Failing tests: 1
  - org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
/home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4
PURIFY IS FALSE
=================================================
Project : chart_5	start : 19/10/28 16:45

readFailedTest: path is /mnt/nfs/work1/brun/mmotwani/SimFix/d4j-info/failed_tests/chart/5.txt#ATTEMPTS: 1

# FAILING TESTS: 1
TIMEOUT : 18000000
===========
locations= [<org.jfree.data.xy.XYSeries,527>, <org.jfree.data.xy.XYSeries,541>, <org.jfree.data.xy.XYSeries,546>, <org.jfree.data.xy.XYSeries,547>, <org.jfree.data.xy.XYSeries,548>, <org.jfree.data.xy.XYSeries,563>, <org.jfree.data.xy.XYSeries,564>, <org.jfree.data.xy.XYSeries,570>, <org.jfree.data.xy.XYSeries,574>, <org.jfree.data.xy.XYSeries,575>, <org.jfree.data.xy.XYSeries,590>, <org.jfree.data.xy.XYDataItem,191>, <org.jfree.data.xy.XYSeries,589>, <org.jfree.data.xy.XYDataItem,179>, <org.jfree.data.xy.XYDataItem,180>, <org.jfree.data.xy.XYDataItem,181>, <org.jfree.data.xy.XYDataItem,183>, <org.jfree.data.xy.XYDataItem,187>, <org.jfree.data.xy.XYDataItem,194>, <org.jfree.data.xy.XYDataItem,203>, <org.jfree.data.xy.XYDataItem,96>, <org.jfree.data.xy.XYSeries,186>, <org.jfree.data.xy.XYDataItem,72>, <org.jfree.data.xy.XYDataItem,73>, <org.jfree.data.xy.XYDataItem,76>, <org.jfree.data.xy.XYDataItem,77>, <org.jfree.data.xy.XYDataItem,78>, <org.jfree.data.general.Series,313>, <org.jfree.data.general.Series,314>, <org.jfree.data.general.Series,316>, <org.jfree.data.general.Series,326>, <org.jfree.data.general.Series,327>, <org.jfree.data.general.Series,334>, <org.jfree.data.general.SeriesChangeEvent,61>, <org.jfree.data.general.SeriesChangeEvent,62>, <org.jfree.data.general.Series,102>, <org.jfree.data.general.Series,103>, <org.jfree.data.general.Series,111>, <org.jfree.data.general.Series,112>, <org.jfree.data.general.Series,115>, <org.jfree.data.general.Series,116>, <org.jfree.data.general.Series,117>, <org.jfree.data.general.Series,118>, <org.jfree.data.general.Series,119>, <org.jfree.data.general.Series,120>, <org.jfree.data.xy.XYSeries,153>, <org.jfree.data.xy.XYSeries,109>, <org.jfree.data.xy.XYSeries,154>, <org.jfree.data.xy.XYSeries,155>, <org.jfree.data.xy.XYSeries,156>, <org.jfree.data.xy.XYSeries,157>, <org.jfree.data.general.Series,113>, <org.jfree.data.general.Series,130>, <org.jfree.data.general.Series,142>, <org.jfree.data.general.Series,143>, <org.jfree.data.general.Series,145>, <org.jfree.data.general.Series,146>, <org.jfree.data.general.Series,147>, <org.jfree.data.general.Series,148>, <org.jfree.data.general.Series,158>, <org.jfree.data.general.Series,170>, <org.jfree.data.general.Series,171>, <org.jfree.data.general.Series,172>, <org.jfree.data.general.Series,174>, <org.jfree.data.general.Series,185>, <org.jfree.data.general.Series,197>, <org.jfree.data.general.Series,198>, <org.jfree.data.general.Series,199>, <org.jfree.data.general.Series,201>, <org.jfree.data.general.Series,212>, <org.jfree.data.general.Series,241>, <org.jfree.data.general.Series,242>, <org.jfree.data.general.Series,243>, <org.jfree.data.general.Series,244>, <org.jfree.data.general.Series,256>, <org.jfree.data.general.Series,257>, <org.jfree.data.general.Series,259>, <org.jfree.data.general.Series,260>, <org.jfree.data.general.Series,262>, <org.jfree.data.general.Series,263>, <org.jfree.data.general.Series,264>, <org.jfree.data.general.Series,266>, <org.jfree.data.general.Series,267>, <org.jfree.data.general.Series,269>, <org.jfree.data.general.Series,279>, <org.jfree.data.general.Series,280>, <org.jfree.data.general.Series,282>, <org.jfree.data.general.Series,295>, <org.jfree.data.general.Series,296>, <org.jfree.data.general.Series,305>, <org.jfree.data.general.Series,306>, <org.jfree.data.general.Series,328>, <org.jfree.data.general.Series,329>, <org.jfree.data.general.Series,342>, <org.jfree.data.general.Series,343>, <org.jfree.data.general.Series,351>, <org.jfree.data.general.Series,352>, <org.jfree.data.general.Series,363>, <org.jfree.data.general.Series,365>, <org.jfree.data.xy.XYSeries,125>, <org.jfree.data.xy.XYSeries,126>, <org.jfree.data.xy.XYSeries,137>, <org.jfree.data.xy.XYSeries,138>, <org.jfree.data.xy.XYSeries,167>, <org.jfree.data.xy.XYSeries,177>, <org.jfree.data.xy.XYSeries,196>, <org.jfree.data.xy.XYSeries,207>, <org.jfree.data.xy.XYSeries,225>, <org.jfree.data.xy.XYSeries,226>, <org.jfree.data.xy.XYSeries,227>, <org.jfree.data.xy.XYSeries,228>, <org.jfree.data.xy.XYSeries,229>, <org.jfree.data.xy.XYSeries,231>, <org.jfree.data.xy.XYSeries,232>, <org.jfree.data.xy.XYSeries,234>, <org.jfree.data.xy.XYSeries,244>, <org.jfree.data.xy.XYSeries,245>, <org.jfree.data.xy.XYSeries,255>, <org.jfree.data.xy.XYSeries,256>, <org.jfree.data.xy.XYSeries,269>, <org.jfree.data.xy.XYSeries,270>, <org.jfree.data.xy.XYSeries,281>, <org.jfree.data.xy.XYSeries,282>, <org.jfree.data.xy.XYSeries,296>, <org.jfree.data.xy.XYSeries,297>, <org.jfree.data.xy.XYSeries,315>, <org.jfree.data.xy.XYSeries,316>, <org.jfree.data.xy.XYSeries,333>, <org.jfree.data.xy.XYSeries,334>, <org.jfree.data.xy.XYSeries,335>, <org.jfree.data.xy.XYSeries,348>, <org.jfree.data.xy.XYSeries,349>, <org.jfree.data.xy.XYSeries,352>, <org.jfree.data.xy.XYSeries,353>, <org.jfree.data.xy.XYSeries,354>, <org.jfree.data.xy.XYSeries,355>, <org.jfree.data.xy.XYSeries,358>, <org.jfree.data.xy.XYSeries,360>, <org.jfree.data.xy.XYSeries,362>, <org.jfree.data.xy.XYSeries,363>, <org.jfree.data.xy.XYSeries,365>, <org.jfree.data.xy.XYSeries,366>, <org.jfree.data.xy.XYSeries,369>, <org.jfree.data.xy.XYSeries,371>, <org.jfree.data.xy.XYSeries,373>, <org.jfree.data.xy.XYSeries,376>, <org.jfree.data.xy.XYSeries,378>, <org.jfree.data.xy.XYSeries,381>, <org.jfree.data.xy.XYSeries,382>, <org.jfree.data.xy.XYSeries,383>, <org.jfree.data.xy.XYSeries,386>, <org.jfree.data.xy.XYSeries,388>, <org.jfree.data.xy.XYSeries,389>, <org.jfree.data.xy.XYSeries,391>, <org.jfree.data.xy.XYSeries,392>, <org.jfree.data.xy.XYSeries,394>, <org.jfree.data.xy.XYSeries,404>, <org.jfree.data.xy.XYSeries,405>, <org.jfree.data.xy.XYSeries,407>, <org.jfree.data.xy.XYSeries,408>, <org.jfree.data.xy.XYSeries,419>, <org.jfree.data.xy.XYSeries,420>, <org.jfree.data.xy.XYSeries,421>, <org.jfree.data.xy.XYSeries,433>, <org.jfree.data.xy.XYSeries,440>, <org.jfree.data.xy.XYSeries,441>, <org.jfree.data.xy.XYSeries,442>, <org.jfree.data.xy.XYSeries,444>, <org.jfree.data.xy.XYSeries,454>, <org.jfree.data.xy.XYSeries,465>, <org.jfree.data.xy.XYSeries,476>, <org.jfree.data.xy.XYSeries,489>, <org.jfree.data.xy.XYSeries,490>, <org.jfree.data.xy.XYSeries,491>, <org.jfree.data.xy.XYSeries,492>, <org.jfree.data.xy.XYSeries,504>, <org.jfree.data.xy.XYSeries,505>, <org.jfree.data.xy.XYSeries,506>, <org.jfree.data.xy.XYSeries,509>, <org.jfree.data.xy.XYSeries,510>, <org.jfree.data.xy.XYSeries,511>, <org.jfree.data.xy.XYSeries,513>, <org.jfree.data.xy.XYSeries,542>, <org.jfree.data.xy.XYSeries,549>, <org.jfree.data.xy.XYSeries,551>, <org.jfree.data.xy.XYSeries,555>, <org.jfree.data.xy.XYSeries,553>, <org.jfree.data.xy.XYSeries,554>, <org.jfree.data.xy.XYSeries,556>, <org.jfree.data.xy.XYSeries,557>, <org.jfree.data.xy.XYSeries,567>, <org.jfree.data.xy.XYSeries,571>, <org.jfree.data.xy.XYSeries,593>, <org.jfree.data.xy.XYSeries,594>, <org.jfree.data.xy.XYSeries,595>, <org.jfree.data.xy.XYSeries,596>, <org.jfree.data.xy.XYSeries,599>, <org.jfree.data.xy.XYSeries,611>, <org.jfree.data.xy.XYSeries,612>, <org.jfree.data.xy.XYSeries,613>]
======================org.jfree.data.xy.XYSeries,527
org.jfree.data.xy.XYSeries,541
========
if(x!=null){
throw new IllegalArgumentException("Null \'x\' argument.");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (compile.tests)................................................ 
========
if(x==null){
if(this.x.doubleValue()>item.x.doubleValue()){
return 1;
}else if(this.x.equals(item.x)){
return 0;
}else {
return -1;
}
throw new IllegalArgumentException("Null \'x\' argument.");
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.jfree.data.xy.XYSeries,546
========
if(x!=null){
throw new IllegalArgumentException("Null \'x\' argument.");
}
XYDataItem overwritten=null;
int index=indexOf(x);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (compile.tests)................................................ 
========
this.x=x;
if(x==null){
throw new IllegalArgumentException("Null \'x\' argument.");
}
XYDataItem overwritten=null;
int index=indexOf(x);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.y=y;
if(x==null){
throw new IllegalArgumentException("Null \'x\' argument.");
}
XYDataItem overwritten=null;
int index=indexOf(x);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x==null){
throw new IllegalArgumentException("Null \'layer\' argument.");
}
XYDataItem overwritten=null;
int index=indexOf(x);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(x==null){
throw new IllegalArgumentException("Null \'pointer\' argument.");
}
XYDataItem overwritten=null;
int index=indexOf(x);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(x==null){
throw new IllegalArgumentException("Null \'axis\' argument.");
}
XYDataItem overwritten=null;
int index=indexOf(x);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(x==null){
throw new IllegalArgumentException("Null \'series\' argument.");
}
XYDataItem overwritten=null;
int index=indexOf(x);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(x==null){
throw new IllegalArgumentException("Null \'key\' argument.");
}
XYDataItem overwritten=null;
int index=indexOf(x);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(x==null){
throw new IllegalArgumentException("Null \'columnKey\' argument.");
}
XYDataItem overwritten=null;
int index=indexOf(x);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(x==null){
throw new IllegalArgumentException("The \'index\' argument is out of range.");
}
XYDataItem overwritten=null;
int index=indexOf(x);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
fireChartChanged();
if(x==null){
throw new IllegalArgumentException("Null \'x\' argument.");
}
XYDataItem overwritten=null;
int index=indexOf(x);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x==null){
throw new IllegalArgumentException("Index out of range.");
}
XYDataItem overwritten=null;
int index=indexOf(x);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(x==null){
throw new IllegalArgumentException("Null \'location\' for index 0 not permitted.");
}
XYDataItem overwritten=null;
int index=indexOf(x);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(allowDuplicateXValues){
fireChangeEvent();
}
if(x==null){
throw new IllegalArgumentException("Null \'x\' argument.");
}
XYDataItem overwritten=null;
int index=indexOf(x);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(allowDuplicateXValues){
fireChangeEvent();
}
if(x==null){
throw new IllegalArgumentException("Null \'location\' for index 0 not permitted.");
}
XYDataItem overwritten=null;
int index=indexOf(x);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x==null){
throw new IllegalArgumentException("Null \'rowKey\' argument.");
}
XYDataItem overwritten=null;
int index=indexOf(x);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(x==null){
throw new IllegalArgumentException("Null \'period\' argument.");
}
XYDataItem overwritten=null;
int index=indexOf(x);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(x==null){
if(this.x.doubleValue()>item.x.doubleValue()){
return 1;
}else if(this.x.equals(item.x)){
return 0;
}else {
return -1;
}
throw new IllegalArgumentException("Null \'x\' argument.");
}
XYDataItem overwritten=null;
int index=indexOf(x);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x==null){
throw new IllegalArgumentException("Null \'x\' argument.");
}
XYDataItem overwritten=null;
if(maximumItemCount!=data[1].length||length!=data[2].length||length!=data[3].length||length!=data[4].length||length!=data[5].length){
throw new IllegalArgumentException("The \'data\' array must contain two arrays with equal length.");
}
int index=indexOf(x);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0){
return getValue(index);
}else {
return null;
}
if(x==null){
throw new IllegalArgumentException("Null \'x\' argument.");
}
XYDataItem overwritten=null;
int index=indexOf(x);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x==-1){
throw new IllegalArgumentException("Null \'x\' argument.");
}
XYDataItem overwritten=null;
int index=indexOf(x);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x!=-1){
throw new IllegalArgumentException("Null \'x\' argument.");
}
XYDataItem overwritten=null;
int index=indexOf(x);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0){
return (TimeSeriesDataItem)this.data.get(index);
}else {
return null;
}
if(x==null){
throw new IllegalArgumentException("Null \'x\' argument.");
}
XYDataItem overwritten=null;
int index=indexOf(x);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(high==null){
throw new IllegalArgumentException("Null \'x\' argument.");
}
XYDataItem overwritten=null;
int index=indexOf(x);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
removeRow(index);
if(x==null){
throw new IllegalArgumentException("Null \'x\' argument.");
}
XYDataItem overwritten=null;
int index=indexOf(x);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
removeValue(index);
if(x==null){
throw new IllegalArgumentException("Null \'x\' argument.");
}
XYDataItem overwritten=null;
int index=indexOf(x);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maximumItemCount>=0){
this.data.remove(seriesIndex);
this.data.remove(seriesIndex);
notifyListeners(new DatasetChangeEvent(this,this));
}
if(x==null){
throw new IllegalArgumentException("Null \'x\' argument.");
}
XYDataItem overwritten=null;
int index=indexOf(x);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x==null){
throw new NullPointerException("Null \'key\' argument.");
}
XYDataItem overwritten=null;
int index=indexOf(x);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (compile.tests)................................................ 
========
if(x==null){
throw new SeriesException("TimeSeries.update(TimePeriod, Number):  period does not exist.");
}
XYDataItem overwritten=null;
int index=indexOf(x);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(x==null){
throw new SeriesException("No observation for x = "+x);
}
XYDataItem overwritten=null;
int index=indexOf(x);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(x==null){
if(maximumItemCount>=getDatasetCount()){
return ;
}
throw new IllegalArgumentException("Null \'x\' argument.");
}
XYDataItem overwritten=null;
int index=indexOf(x);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.jfree.data.xy.XYSeries,547
org.jfree.data.xy.XYSeries,548
========
if(this.autoSort){
rowIndex=-index-1;
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.setBorder(new XYDataItem(x,y));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.autoSort){
this.drawShapesCheckBox=new JCheckBox();
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.drawShapesCheckBox=new JCheckBox();
this.data.add(new XYDataItem(x,y));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.data.add(overwritten);
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(this.autoSort){
this.drawLinesCheckBox=new JCheckBox();
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.drawLinesCheckBox=new JCheckBox();
this.data.add(new XYDataItem(x,y));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.autoSort){
start=index+1;
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.autoSort){
index++;
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (compile.tests)................................................ 
========
if(this.autoSort){
start=index+1;
index++;

this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
start=index+1;
this.data.add(new XYDataItem(x,y));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
index++;
this.data.add(new XYDataItem(x,y));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
start=index+1;
index++;

this.data.add(new XYDataItem(x,y));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.autoSort){
index++;
this.data.add(-index-1,new XYDataItem(x,y));
}else {
index++;
this.data.add(new XYDataItem(x,y));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(this.autoSort){
fireDatasetChanged();
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
fireDatasetChanged();
this.data.add(new XYDataItem(x,y));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.autoSort){
fireSeriesChanged();
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
fireSeriesChanged();
this.data.add(new XYDataItem(x,y));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(this.autoSort){
fireSeriesChanged();
this.data.add(-index-1,new XYDataItem(x,y));
}else {
fireSeriesChanged();
this.data.add(new XYDataItem(x,y));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(this.autoSort){
fireDatasetChanged();
this.data.add(-index-1,new XYDataItem(x,y));
}else {
fireDatasetChanged();
this.data.add(new XYDataItem(x,y));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
invalidateRangeInfo();
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fireSeriesChanged();
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(this.autoSort){
this.objects=new Object[index+this.index];
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.objects=new Object[index+this.index];
this.data.add(new XYDataItem(x,y));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.index=index;
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
fireSeriesChanged();
this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(getItemCount()>this.maximumItemCount){
this.data.remove(maximumItemCount);
this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(getItemCount()>this.maximumItemCount){
notifyListeners(new DatasetChangeEvent(this,this));
this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
this.data.remove(maximumItemCount);
notifyListeners(new DatasetChangeEvent(this,this));

this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>maximumItemCount){
this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(getItemCount()>this.maximumItemCount){
this.data.getKey(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>index){
this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(index<0){
throw new IllegalArgumentException("Negative \'maximum\' argument.");
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
this.maximumItemCount=index;
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(index<0){
throw new IllegalArgumentException("Negative \'maximum\' argument.");
}
if(getItemCount()>index){
this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
this.maximumItemCount=index;
if(getItemCount()>index){
this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(index<0){
throw new IllegalArgumentException("Negative \'maximum\' argument.");
}
this.maximumItemCount=index;
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(index<0){
throw new IllegalArgumentException("Negative \'maximum\' argument.");
}
this.maximumItemCount=index;
if(getItemCount()>index){
this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
copy.data=new java.util.ArrayList();
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
configureRangeAxes();
this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
fireChangeEvent();
this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
configureRangeAxes();
fireChangeEvent();

this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.data.add(overwritten);
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(getItemCount()>this.maximumItemCount){
anchor=isInverted()?TextAnchor.TOP_RIGHT:TextAnchor.BOTTOM_RIGHT;
this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
this.internalMarkerWhenTicksOverlap=true;
this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.TOP_RIGHT;
this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
anchor=isInverted()?TextAnchor.TOP_RIGHT:TextAnchor.BOTTOM_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.TOP_RIGHT;

this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;
this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;

this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
anchor=isInverted()?TextAnchor.TOP_LEFT:TextAnchor.TOP_RIGHT;
this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
anchor=isInverted()?TextAnchor.TOP_RIGHT:TextAnchor.TOP_LEFT;
this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
anchor=isInverted()?TextAnchor.TOP_LEFT:TextAnchor.TOP_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.TOP_RIGHT:TextAnchor.TOP_LEFT;

this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;
this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;

this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;
this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;

this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;

this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;
this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;

this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;

this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;

this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;

this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;

this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;
this.internalMarkerWhenTicksOverlap=true;
this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.BOTTOM_LEFT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.BOTTOM_RIGHT;
this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.TOP_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.TOP_RIGHT:TextAnchor.BOTTOM_RIGHT;

this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.TOP_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.TOP_RIGHT;
anchor=isInverted()?TextAnchor.TOP_RIGHT:TextAnchor.BOTTOM_RIGHT;
this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.TOP_RIGHT:TextAnchor.BOTTOM_RIGHT;
this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
anchor=isInverted()?TextAnchor.BOTTOM_RIGHT:TextAnchor.TOP_RIGHT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.TOP_RIGHT:TextAnchor.BOTTOM_RIGHT;
this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.TOP_LEFT;
this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
anchor=isInverted()?TextAnchor.TOP_LEFT:TextAnchor.BOTTOM_LEFT;
this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
anchor=isInverted()?TextAnchor.BOTTOM_LEFT:TextAnchor.TOP_LEFT;
this.internalMarkerWhenTicksOverlap=true;
anchor=isInverted()?TextAnchor.TOP_LEFT:TextAnchor.BOTTOM_LEFT;

this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
this.data.draw(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
this.data.remove(maximumItemCount);
notifyListeners(new DatasetChangeEvent(this,this));
this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
this.data.remove(maximumItemCount);
this.data.remove(maximumItemCount);
notifyListeners(new DatasetChangeEvent(this,this));

this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
notifyListeners(new DatasetChangeEvent(this,this));
this.data.remove(maximumItemCount);
notifyListeners(new DatasetChangeEvent(this,this));

this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getItemCount()>this.maximumItemCount){
this.data.remove(maximumItemCount);
notifyListeners(new DatasetChangeEvent(this,this));
this.data.remove(maximumItemCount);
notifyListeners(new DatasetChangeEvent(this,this));

this.data.remove(0);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
rowIndex=-index-1;
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
row=new DefaultKeyedValues();
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

overwritten=(TimeSeriesDataItem)existing.clone();
existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
removeAgedItems(false);
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
fireSeriesChanged();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(index>=0&&!this.allowDuplicateXValues){
overwritten=(TimeSeriesDataItem)existing.clone();
removeAgedItems(false);
fireSeriesChanged();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
removeAgedItems(false);
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
fireSeriesChanged();
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
removeAgedItems(false);
fireSeriesChanged();

if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
fireSeriesChanged();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
fireSeriesChanged();
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
clone.datasets=(ValueDataset[])this.datasets.clone();
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
clone.seriesNeedle=(MeterNeedle[])this.seriesNeedle.clone();
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
existing.setActionCommand(POLAR_AUTO_RANGE_ACTION_COMMAND);
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
existing.addActionListener(this);
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
this.data.remove(index);
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(index>=0&&(index>=getSeriesCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(series>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
existing.removeChangeListener(this);
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.data.remove(index);
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
fireDatasetChanged();
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(series>=0&&(index>=getSeriesCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
existing.removeChangeListener(this);
if(index>=0&&(index>=getSeriesCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.data.remove(index);
if(index>=0&&(index>=getSeriesCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fireDatasetChanged();
if(index>=0&&(index>=getSeriesCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
existing.removeChangeListener(this);
if(series>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.data.remove(index);
if(series>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fireDatasetChanged();
if(series>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
existing.removeChangeListener(this);
this.data.remove(index);
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
existing.removeChangeListener(this);
fireDatasetChanged();
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.data.remove(index);
fireDatasetChanged();
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
existing.removeChangeListener(this);
if(series>=0&&(index>=getSeriesCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.data.remove(index);
if(series>=0&&(index>=getSeriesCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fireDatasetChanged();
if(series>=0&&(index>=getSeriesCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
existing.removeChangeListener(this);
this.data.remove(index);
if(index>=0&&(index>=getSeriesCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
existing.removeChangeListener(this);
fireDatasetChanged();
if(index>=0&&(index>=getSeriesCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.data.remove(index);
fireDatasetChanged();
if(index>=0&&(index>=getSeriesCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
existing.removeChangeListener(this);
this.data.remove(index);
if(series>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
existing.removeChangeListener(this);
fireDatasetChanged();
if(series>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.data.remove(index);
fireDatasetChanged();
if(series>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
existing.removeChangeListener(this);
this.data.remove(index);
fireDatasetChanged();
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
existing.removeChangeListener(this);
this.data.remove(index);
if(series>=0&&(index>=getSeriesCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
existing.removeChangeListener(this);
fireDatasetChanged();
if(series>=0&&(index>=getSeriesCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.data.remove(index);
fireDatasetChanged();
if(series>=0&&(index>=getSeriesCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
existing.removeChangeListener(this);
this.data.remove(index);
fireDatasetChanged();
if(index>=0&&(index>=getSeriesCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
existing.removeChangeListener(this);
this.data.remove(index);
fireDatasetChanged();
if(series>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tempWeek>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
this.week=(byte)Math.min(index,LAST_WEEK_IN_YEAR);
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&(index>getSeriesCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&index>getSubtitleCount()){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fireChartChanged();
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
new GeneralPath().moveTo((float)(double[])drState.lowerCoordinates.get(0)[0],(float)coords[1]);
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
coords=(double[])drState.upperCoordinates.get(maximumItemCount-1);
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
new GeneralPath().lineTo((float)(double[])drState.lowerCoordinates.get(0)[0],(float)coords[1]);
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
new GeneralPath().closePath();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
drState.lowerCoordinates.clear();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
drState.upperCoordinates.clear();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
new GeneralPath().moveTo((float)(double[])drState.lowerCoordinates.get(0)[0],(float)coords[1]);
coords=(double[])drState.upperCoordinates.get(maximumItemCount-1);
new GeneralPath().lineTo((float)(double[])drState.lowerCoordinates.get(0)[0],(float)coords[1]);
new GeneralPath().closePath();
drState.lowerCoordinates.clear();
drState.upperCoordinates.clear();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
result=new BlockResult();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&(index>=getSubtitleCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Collections.sort(this.data);
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
new HashMap().put("values.length",new Integer(values.length));
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&index>=getDatasetCount()){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
this.data.remove(index);

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
this.data.remove(index);
this.data.remove(index);

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(autoSort){
fireChangeEvent();
}
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(seriesIndex>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
existing.removeChangeListener(this);
if(index>=0&&(index>getSeriesCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.data.remove(index);
if(index>=0&&(index>getSeriesCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fireDatasetChanged();
if(index>=0&&(index>getSeriesCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
existing.removeChangeListener(this);
this.data.remove(index);
if(index>=0&&(index>getSeriesCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
existing.removeChangeListener(this);
fireDatasetChanged();
if(index>=0&&(index>getSeriesCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.data.remove(index);
fireDatasetChanged();
if(index>=0&&(index>getSeriesCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
existing.removeChangeListener(this);
this.data.remove(index);
fireDatasetChanged();
if(index>=0&&(index>getSeriesCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
removeRow(index);
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
removeValue(index);
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fireChangeEvent();
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fireSeriesChanged();
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(index>=0&&!this.allowDuplicateXValues){
setSeriesPaint(index,Color.red);
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 1 :

if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0){
return existing.getObject(index);
}else {
return null;
}
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&this.autoSort){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(data.isEmpty()){
return null;
}
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(data.isEmpty()){
return null;
}
if(index>=0&&this.autoSort){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
this.existing=new java.util.ArrayList();
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=this.maximumItemCount&&index<=lastCategoryIndex()){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=this.maximumItemCount&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(index>=0&&index<=lastCategoryIndex()){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
notifyListeners(new AxisChangeEvent(this));
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&index>3){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
fireChangeEvent();
if(index>=0&&index>3){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&index<this.existing.getItemCount()){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(section>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getRenderer(index)==null){
return ;
}
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(allowDuplicateXValues&&allowDuplicateXValues){
fireChangeEvent();
}
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
configureRangeAxes();
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&index>=getSeriesCount()){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&index<this.maximumItemCount){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(seriesIndex>=0&&(index>getSeriesCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
fireChangeEvent();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
fireChangeEvent();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
fireChangeEvent();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
fireChangeEvent();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
fireChangeEvent();
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
fireChangeEvent();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
fireChangeEvent();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
fireChangeEvent();
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
fireChangeEvent();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
fireChangeEvent();
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
fireChangeEvent();
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
fireChangeEvent();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
fireChangeEvent();
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
fireChangeEvent();
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
fireChangeEvent();
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
configureRangeAxes();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
this.data.remove(index);
existing.removeChangeListener(this);
configureRangeAxes();
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(series>=0&&index>=getSeriesCount()){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
if(getRangeAxis()!=null){
getRangeAxis().configure();
}
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
if(getRangeAxis(1)!=null){
getRangeAxis(1).configure();
}
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
this.data.remove(index);
existing.removeChangeListener(this);
if(getRangeAxis()!=null){
getRangeAxis().configure();
}
if(getRangeAxis(1)!=null){
getRangeAxis(1).configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getRangeAxis()!=null){
axis.configure();
}
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getDomainAxis()!=null){
axis.configure();
}
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getDomainAxis()!=null){
axis.configure();
}
fireChangeEvent();
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.jfree.data.xy.XYSeries,563
org.jfree.data.xy.XYSeries,564
org.jfree.data.xy.XYSeries,570
org.jfree.data.xy.XYSeries,574
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
rowIndex=-index-1;
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
row=new DefaultKeyedValues();
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

overwritten=(TimeSeriesDataItem)existing.clone();
existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
removeAgedItems(false);
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
fireSeriesChanged();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(index>=0&&!this.allowDuplicateXValues){
overwritten=(TimeSeriesDataItem)existing.clone();
removeAgedItems(false);
fireSeriesChanged();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
removeAgedItems(false);
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
fireSeriesChanged();
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
  - org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
removeAgedItems(false);
fireSeriesChanged();

if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
fireSeriesChanged();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
fireSeriesChanged();
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
  - org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
copy.data=new ArrayList();
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
copy.data=new java.util.ArrayList();
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
existing.setActionCommand(POLAR_AUTO_RANGE_ACTION_COMMAND);
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
existing.addActionListener(this);
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
this.data.remove(index);
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
  - org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
clone.datasets=(ValueDataset[])this.datasets.clone();
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
clone.seriesNeedle=(MeterNeedle[])this.seriesNeedle.clone();
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
if(x==null){
throw new IllegalArgumentException("Null \'x\' argument.");
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
  - org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
this.allowDuplicateXValues=false;
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
this.allowDuplicateXValues=this.allowDuplicateXValues;
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
if(x==null){
throw new IllegalArgumentException("Null \'x\' argument.");
}
this.allowDuplicateXValues=false;
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
  - org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
if(x==null){
throw new IllegalArgumentException("Null \'x\' argument.");
}
this.allowDuplicateXValues=this.allowDuplicateXValues;
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
  - org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
this.allowDuplicateXValues=false;
this.allowDuplicateXValues=this.allowDuplicateXValues;
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
if(x==null){
throw new IllegalArgumentException("Null \'x\' argument.");
}
this.allowDuplicateXValues=false;
this.allowDuplicateXValues=this.allowDuplicateXValues;
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return xyItem;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return dataItem;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
this.maximumItemCount=maximumItemCount;
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
  - org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
clone.data=new java.util.ArrayList(maximumItemCount);
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
clone.intervalDelegate=new IntervalXYDelegate((DefaultTableXYDataset)super.clone());
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
clone.intervalDelegate.setAutoWidth(isAutoWidth());
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
clone.intervalDelegate.setIntervalPositionFactor(getIntervalPositionFactor());
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
(DefaultTableXYDataset)super.clone().updateXPoints();
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fireSeriesChanged();
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
  - org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
chart.renderingHints=(RenderingHints)this.renderingHints.clone();
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chart.subtitles=new ArrayList();
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chart.progressListeners=new EventListenerList();
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
chart.changeListeners=new EventListenerList();
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fireDatasetChanged();
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fireChangeEvent();
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&(index>=getSeriesCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(series>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.data.remove(index);
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
  - org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
this.data.remove(index);
fireDatasetChanged();
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(series>=0&&(index>=getSeriesCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.data.remove(index);
if(index>=0&&(index>=getSeriesCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fireDatasetChanged();
if(index>=0&&(index>=getSeriesCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.data.remove(index);
if(series>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fireDatasetChanged();
if(series>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.data.remove(index);
if(series>=0&&(index>=getSeriesCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fireDatasetChanged();
if(series>=0&&(index>=getSeriesCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.data.remove(index);
fireDatasetChanged();
if(index>=0&&(index>=getSeriesCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.data.remove(index);
fireDatasetChanged();
if(series>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.data.remove(index);
fireDatasetChanged();
if(series>=0&&(index>=getSeriesCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
if((DialLayer)this.data.get(index)!=null){
layer.removeChangeListener(this);
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
this.data.remove(index);
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
this.data.remove(index);
fireChangeEvent();
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
clone.rangeAxisLocations=(ObjectList)ObjectUtilities.clone(this.rangeAxisLocations);
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
clone.datasets=(ObjectList)ObjectUtilities.clone(this.datasets);
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
clone.datasetToDomainAxisMap=new TreeMap();
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
clone.datasetToDomainAxisMap.putAll(this.datasetToDomainAxisMap);
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
clone.datasetToRangeAxisMap=new TreeMap();
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
clone.datasetToRangeAxisMap.putAll(this.datasetToRangeAxisMap);
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
clone.renderers=(ObjectList)ObjectUtilities.clone(this.renderers);
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
clone.foregroundDomainMarkers=(Map)ObjectUtilities.clone(this.foregroundDomainMarkers);
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
if(clone.dataset!=null){
clone.dataset.addChangeListener((ThermometerPlot)super.clone());
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
clone.rangeAxis=(ValueAxis)ObjectUtilities.clone(this.rangeAxis);
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
clone.valueFormat=(NumberFormat)this.valueFormat.clone();
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
clone.subrangePaint=(Paint[])this.subrangePaint.clone();
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&(index>getSeriesCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
if(this.data!=null){
clone.data=ArrayUtilities.clone(this.data);
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&index>getSubtitleCount()){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fireChartChanged();
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(autoSort){
fireDatasetChanged();
}
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(tempWeek>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
this.week=(byte)Math.min(index,LAST_WEEK_IN_YEAR);
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(clone.dataset!=null){
clone.dataset.addChangeListener((PolarPlot)super.clone());
}
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
clone.cornerTextItems=new ArrayList(this.cornerTextItems);
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
if(index<0){
throw new IllegalArgumentException("Negative \'maximum\' argument.");
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
  - org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
this.maximumItemCount=index;
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
if(index<0){
throw new IllegalArgumentException("Negative \'maximum\' argument.");
}
this.maximumItemCount=index;
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
if(existing!=null){
existing.removeChangeListener(this);
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
new GeneralPath().moveTo((float)(double[])drState.lowerCoordinates.get(0)[0],(float)coords[1]);
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
coords=(double[])drState.upperCoordinates.get(maximumItemCount-1);
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
new GeneralPath().lineTo((float)(double[])drState.lowerCoordinates.get(0)[0],(float)coords[1]);
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
new GeneralPath().closePath();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
drState.lowerCoordinates.clear();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
drState.upperCoordinates.clear();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
new GeneralPath().moveTo((float)(double[])drState.lowerCoordinates.get(0)[0],(float)coords[1]);
coords=(double[])drState.upperCoordinates.get(maximumItemCount-1);
new GeneralPath().lineTo((float)(double[])drState.lowerCoordinates.get(0)[0],(float)coords[1]);
new GeneralPath().closePath();
drState.lowerCoordinates.clear();
drState.upperCoordinates.clear();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
configureDomainAxes();
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
configureRangeAxes();
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(autoSort){
fireChangeEvent();
}
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&(index>=getSubtitleCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
Collections.sort(this.data);
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
  - org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(index>=0&&index>=getDatasetCount()){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
result=new BlockResult();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new HashMap().put("values.length",new Integer(values.length));
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
  - org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
this.data.remove(index);

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
  - org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
this.data.remove(index);
this.data.remove(index);

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
  - org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(seriesIndex>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.data.remove(index);
if(index>=0&&(index>getSeriesCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fireDatasetChanged();
if(index>=0&&(index>getSeriesCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.data.remove(index);
fireDatasetChanged();
if(index>=0&&(index>getSeriesCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
setSeriesPaint(index,Color.red);
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 1 :

if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
this.index=index;
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0){
return existing.getObject(index);
}else {
return null;
}
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&this.autoSort){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (compile.tests)................................................ 
========
if(data.isEmpty()){
return null;
}
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(data.isEmpty()){
return null;
}
if(index>=0&&this.autoSort){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
  - org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
case 8 :

if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
clone.values=(DefaultKeyedValues2D)this.values.clone();
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
clone.intervalDelegate=new IntervalXYDelegate((CategoryTableXYDataset)super.clone());
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
clone.intervalDelegate.setAutoWidth(isAutoWidth());
clone.intervalDelegate.setIntervalPositionFactor(getIntervalPositionFactor());
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
configureDomainAxes();
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
if(existing!=null){
existing.removeChangeListener(this);
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
configureRangeAxes();
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
if(existing!=null){
existing.removeChangeListener(this);
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(autoSort){
fireChangeEvent();
}
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
if(existing!=null){
existing.removeChangeListener(this);
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
configureDomainAxes();
configureRangeAxes();
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
configureDomainAxes();
if(autoSort){
fireChangeEvent();
}
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
configureRangeAxes();
if(autoSort){
fireChangeEvent();
}
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
configureDomainAxes();
configureRangeAxes();
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
if(existing!=null){
existing.removeChangeListener(this);
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
configureDomainAxes();
if(autoSort){
fireChangeEvent();
}
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
if(existing!=null){
existing.removeChangeListener(this);
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
configureRangeAxes();
if(autoSort){
fireChangeEvent();
}
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
if(existing!=null){
existing.removeChangeListener(this);
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
configureDomainAxes();
configureRangeAxes();
if(autoSort){
fireChangeEvent();
}
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
configureDomainAxes();
configureRangeAxes();
if(autoSort){
fireChangeEvent();
}
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
if(existing!=null){
existing.removeChangeListener(this);
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.existing=new java.util.ArrayList();
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=this.maximumItemCount&&index<=lastCategoryIndex()){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=this.maximumItemCount&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(index>=0&&index<=lastCategoryIndex()){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&index>3){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
  - org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(getRenderer(index)==null){
return ;
}
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 3 :

if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return data;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&index<this.existing.getItemCount()){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(section>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
new GeneralPath().closePath();
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
existing.add(new Area(new GeneralPath()));
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
configureRangeAxes();
fireChangeEvent();
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&index>=getSeriesCount()){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
result.subplots=(List)ObjectUtilities.deepClone(this.subplots);
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((CombinedDomainXYPlot)super.clone().getDomainAxis()!=null){
domainAxis.configure();
}
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((CombinedRangeCategoryPlot)super.clone().getRangeAxis()!=null){
rangeAxis.configure();
}
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((CombinedRangeXYPlot)super.clone().getRangeAxis()!=null){
rangeAxis.configure();
}
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(seriesIndex>=0&&(index>getSeriesCount())){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
fireChangeEvent();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
fireChangeEvent();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
fireChangeEvent();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
fireChangeEvent();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
fireChangeEvent();
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
fireChangeEvent();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
fireChangeEvent();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
fireChangeEvent();
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
fireChangeEvent();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
fireChangeEvent();
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
fireChangeEvent();
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
fireChangeEvent();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
fireChangeEvent();
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
fireChangeEvent();
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setParent(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
fireChangeEvent();
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

this.data.remove(index);
existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();
this.data.remove(index);
existing.removeChangeListener(this);
if(getDomainAxis()!=null){
getDomainAxis().configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&index<this.maximumItemCount){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
  - org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(series>=0&&index>=getSeriesCount()){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
configureRangeAxes();
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
this.data.remove(index);
existing.removeChangeListener(this);
configureRangeAxes();
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
  - org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
this.index++;
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.index>=this.maximumItemCount){
this.oldestAt=0;
}
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
if(getRangeAxis()!=null){
getRangeAxis().configure();
}
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
if(getRangeAxis(1)!=null){
getRangeAxis(1).configure();
}
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
this.data.remove(index);
existing.removeChangeListener(this);
if(getRangeAxis()!=null){
getRangeAxis().configure();
}
if(getRangeAxis(1)!=null){
getRangeAxis(1).configure();
}
fireChangeEvent();

XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getRangeAxis()!=null){
axis.configure();
}
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getDomainAxis()!=null){
axis.configure();
}
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
if(maximumItemCount<this.index){
autoSort=true;
index=srcLength;
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return VALUE_ANTIALIAS_ON;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getDomainAxis()!=null){
axis.configure();
}
fireChangeEvent();
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(insertionIndex>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
existing.setFrame(maximumItemCount-getBulbRadius(),index,getBulbDiameter(),getBulbDiameter());
if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case (DateTickUnit.YEAR) :

if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
default :

if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
case 5 :

if(index>=0&&!this.allowDuplicateXValues){
XYDataItem existing=(XYDataItem)this.data.get(index);
try{
overwritten=(XYDataItem)existing.clone();
}catch (CloneNotSupportedException e) {
  throw new SeriesException("Couldn't clone XYDataItem!");
}

existing.setY(y);
}else {
if(this.autoSort){
this.data.add(-index-1,new XYDataItem(x,y));
}else {
this.data.add(new XYDataItem(x,y));
}
if(getItemCount()>this.maximumItemCount){
this.data.remove(0);
}
}
fireSeriesChanged();
return overwritten;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.jfree.data.xy.XYSeries,575
org.jfree.data.xy.XYSeries,590
========
if(item.getX().equals(axis.subCategories)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(axis.subLabelFont)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(axis.subLabelPaint)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.guideLinePaint)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.sublabels)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.groupStroke)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.paintScale)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.gradientPaintTransformer)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.stroke)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.pointers)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.outlineStroke)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.cornerTextItems)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(ZOOM_OUT_DOMAIN_COMMAND)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(ZERO)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(RectangleConstraint.NONE)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.renderingHints)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.formatString)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.nullYString)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.labelFormat)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.numberFormat)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.percentFormat)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.formatPattern)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.additionalFormatPattern)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.seriesLabelLists)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(generator.dateFormatter)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(generator.numberFormatter)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.items)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(other.name)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(tf.text)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(tf.font)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(tf.paint)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(order.name)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.name)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.positivePrefix)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.daySuffix)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.hourSuffix)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.minuteSuffix)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.secondSuffix)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.dayFormatter)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.hourFormatter)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.minuteFormatter)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.secondFormatter)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(alignment.name)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(layer.name)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.baseLabel)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(t.name)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.symbols)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.formatter)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.yearFormatter)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.first)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.last)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.timeZone)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.autoRangeTimePeriodClass)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.majorTickTimePeriodClass)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.minorTickTimePeriodClass)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.minorTickMarkPaint)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.minorTickMarkStroke)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.sublabelFont)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.barPainter)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.point)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.foregroundAnnotations)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.backgroundAnnotations)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.lookupTable)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.aggregatedItemsKey)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.key)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.templateValue)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.font)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.dialFrame)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.layers)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.majorTickStroke)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.minorTickStroke)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.tickLabelFont)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.axisLineStroke)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.baseSeriesOutlineStroke)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.labelFont)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.labelGenerator)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.drawingSupplier)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.quadrantOrigin)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.angleLabelFont)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.arrowPaint)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.shape)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.text)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.area)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.rowKey)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.columnKey)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.lineStroke)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.extraLargeFont)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.largeFont)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.regularFont)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.smallFont)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.xyBarPainter)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.arrangement)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.blocks)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.frame)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.bounds)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.itemFont)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.itemPaint)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.hLayout)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.vLayout)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.scale)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.stripOutlineStroke)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.prefix)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.categoryParameterName)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.dateFormat)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.itemParameterName)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.seriesParameterName)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.x)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.keyToGroupMap)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(timeSeriesDataItem.period)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(timeSeriesDataItem.value)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(position.name)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(type.name)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.underlying)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.dates)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.bins)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.tasks)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.id)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.seriesKeys)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.seriesKey)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.date)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.high)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.low)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.open)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.close)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.allSeriesData)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.windDir)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.windForce)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(item.getKey(maximumItemCount))){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(library.name)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(timePeriodValue.period)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(timePeriodValue.value)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.x!=null?item.getX().equals(x):null){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.value)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(ITEM_TAG)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(PIEDATASET_TAG)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(CATEGORYDATASET_TAG)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(VALUE_TAG)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(KEY_TAG)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(POLAR_ZOOM_IN_ACTION_COMMAND)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(SERIES_TAG)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(item.getX().equals(that.label)){
return i;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(ZERO)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<this.data.size();i++){
if(item!=null){
item.removeChangeListener(this);
}
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<this.data.size();i++){
if(item!=null){
item.configure();
}
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<this.data.size();i++){
average+=item.doubleValue();
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<this.data.size();i++){
count+=1;
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<this.data.size();i++){
average+=item.doubleValue();
count+=1;

XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<this.data.size();i++){
if(item!=null){
item.addChangeListener(this);
}
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<this.data.size();i++){
if(item!=null){
CategoryAxis (CategoryAxis)item.clone()=(CategoryAxis)item.clone();
}
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<this.data.size();i++){
if(item!=null){
ValueAxis (ValueAxis)item.clone()=(ValueAxis)item.clone();
}
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<this.data.size();i++){
if(item!=null){
RectangleEdge getDomainAxisEdge(i)=getDomainAxisEdge(i);
}
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<this.data.size();i++){
if(item!=null){
RectangleEdge getRangeAxisEdge(i)=getRangeAxisEdge(i);
}
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<this.data.size();i++){
clone.entities.add(item.clone());
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
clone.entities=new java.util.ArrayList(this.entities.size());
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
clone.data=new java.util.ArrayList(getSeriesCount());
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
clone.subplotInfo=new java.util.ArrayList(this.subplotInfo.size());
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<this.data.size();i++){
if(item.getLibrary()!=null){
new ArrayList().add(item.getLibrary());
}
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!this.data.equals(that.pointers)){
return false;
}
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<this.data.size();i++){
if(item.getY(series.indexOf(x))!=null){
return false;
}
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<this.data.size();i++){
if(item!=null){
ValueAxis (ValueAxis)item.clone()=(ValueAxis)item.clone();
clone.domainAxes.set(i,(ValueAxis)item.clone());
}
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<this.data.size();i++){
if(item!=null){
ValueAxis (ValueAxis)item.clone()=(ValueAxis)item.clone();
clone.rangeAxes.set(i,(ValueAxis)item.clone());
}
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=maximumItemCount;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
for(int i=0;i<this.data.size();i++){
try{
(XYSeries)super.clone().add((XYDataItem)item.clone());
}catch (SeriesException e) {
  System.err.println("Unable to add cloned data item.");
}

XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.data.add(item);
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<getRowCount();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<getSeriesCount();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<this.data.size();i++){
System.arraycopy(x,0,new double[x.length],0,x.length);
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<this.data.size();i++){
System.arraycopy(data[1],0,new double[y.length],0,y.length);
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<this.data.size();i++){
clone.seriesList.add(i,new double[][]{new double[x.length],new double[y.length]});
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<this.data.size();i++){
System.arraycopy(x,0,new double[x.length],0,x.length);
System.arraycopy(data[1],0,new double[y.length],0,y.length);
clone.seriesList.add(i,new double[][]{new double[x.length],new double[y.length]});

XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<this.data.size();i++){
try{
(TimePeriodValues)super.clone().add((TimePeriodValue)item.clone());
}catch (SeriesException e) {
  System.err.println("Failed to add cloned item.");
}

XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<this.data.size();i++){
item.incrementCount();
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!this.data.equals(that.cornerTextItems)){
return false;
}
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.i=(byte)Math.min(maximumItemCount,LAST_WEEK_IN_YEAR);
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!allowDuplicateXValues||this.allowDuplicateXValues){
return new Range(getXValue((TimePeriod)data.get(0)),getXValue(item));
}else {
return new Range(first.getStart().getTime(),last.getEnd().getTime());
}
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.maximumItemCount=maximumItemCount;
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(i>maximumItemCount){
delete(0,count-maximum);
}
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<this.data.size();i++){
result=(Number)data.get(i).doubleValue();
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<this.data.size();i++){
result=(Number)data.get(0).doubleValue();
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
item.removeChangeListener(this);
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.data.remove(i);
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<this.data.size();i++){
fireSeriesChanged();
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
fireDatasetChanged();
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
item.removeChangeListener(this);
this.data.remove(i);
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
item.removeChangeListener(this);
fireDatasetChanged();
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.data.remove(i);
fireDatasetChanged();
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
item.removeChangeListener(this);
this.data.remove(i);
fireDatasetChanged();
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<getMinorTickCount();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
maximumItemCount=HashUtilities.hashCode(result,size());
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ObjectUtilities.equal(this.data,that.subplots)){
return false;
}
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.maximumItemCount!=that.subdivisions){
return false;
}
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ObjectUtilities.equal(this.data,that.foregroundAnnotations)){
return false;
}
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fireChangeEvent();
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.data.remove(i);
fireChangeEvent();
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<this.data.size();i++){
copy.data=new java.util.ArrayList();
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i!=null){
removeLayer(existing);
}
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<this.data.size();i++){
toAdd=item.clone();
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i>=0){
return item.getObject(index);
}else {
return null;
}
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<this.data.size();i++){
item.removeChangeListener(this);
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
prefetchSectionPaints();
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<this.data.size();i++){
new java.util.ArrayList().add(item.getKey());
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<this.data.size();i++){
clone.data.add(item.clone());
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
clone.data=new java.util.ArrayList();
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
setFixedRangeAxisSpaceForSubplots(null);
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(i<this.data.size()){
this.data.add(index,item);
}else {
this.data.add(item);
}
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
item=new ArrayList(data.size());
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<this.data.size();i++){
average+=item.doubleValue();
count+=1;
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<this.data.size();i++){
average+=item.doubleValue();
average+=item.doubleValue();
count+=1;

XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<this.data.size();i++){
count+=1;
average+=item.doubleValue();
count+=1;

XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=0;i<this.data.size();i++){
average+=item.doubleValue();
count+=1;
average+=item.doubleValue();
count+=1;

XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.i=Math.max(this.size,maximumItemCount+1);
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.autoSort){
return Collections.binarySearch(this.data,new ComparableObjectItem(x,null));
}else {
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
for(int i=maximumItemCount;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
  - org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
for(int i=0;i<this.data.size();i++){
try{
(XYSeries)super.clone().add((XYDataItem)item.clone());
}catch (SeriesException e) {
  System.err.println("Unable to add cloned data item.");
}

XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
copy.data=new java.util.ArrayList();
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!this.data.equals(that.layers)){
return false;
}
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!this.data.equals(that.pointers)){
return false;
}
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
clone.subplotInfo=new java.util.ArrayList(this.subplotInfo.size());
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
for(int i=0;i<this.data.size();i++){
try{
(TimePeriodValues)super.clone().add((TimePeriodValue)item.clone());
}catch (SeriesException e) {
  System.err.println("Failed to add cloned item.");
}

XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
copy.data=new ArrayList();
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
for(int i=0;i<this.data.size();i++){
try{
(TimeSeries)super.clone().add((TimeSeriesDataItem)item.clone());
}catch (SeriesException e) {
  e.printStackTrace();
}

XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
copy.data=new java.util.ArrayList();
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
for(int i=maximumItemCount;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((i<0)||(series>getSeriesCount())){
throw new IllegalArgumentException("Index outside valid range.");
}
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
item.removeChangeListener(this);
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
this.data.remove(i);
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fireDatasetChanged();
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.allowDuplicateXValues!=that.baseShapesFilled){
return false;
}
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.allowDuplicateXValues!=that.drawSeriesLineAsPath){
return false;
}
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(data.isEmpty()){
return null;
}
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
fireDatasetChanged();
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
start=i+1;
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
maximumItemCount++;
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
  - org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
start=i+1;
maximumItemCount++;

for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.allowDuplicateXValues!=that.gridBandsVisible){
return false;
}
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!this.data.equals(that.cornerTextItems)){
return false;
}
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.maximumItemCount!=that.subdivisions){
return false;
}
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
invalidateRangeInfo();
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.allowDuplicateXValues!=that.verticalTickLabels){
return false;
}
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.maximumItemCount!=that.minorTickCount){
return false;
}
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.allowDuplicateXValues!=that.drawYError){
return false;
}
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.allowDuplicateXValues!=that.useOutlinePaint){
return false;
}
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.maximumItemCount!=that.sectionIndex){
return false;
}
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.allowDuplicateXValues!=that.expandToFitSpace){
return false;
}
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(!ObjectUtilities.equal(this.data,that.subplots)){
return false;
}
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.maximumItemCount!=that.dotHeight){
return false;
}
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(listeners.length==0){
return ;
}
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
for(int i=0;i<this.data.size();i++){
item.removeChangeListener(this);
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
fetchLegendItems();
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
result.height=calculateTotalHeight(size.height);
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
result.width=calculateTotalWidth(size.width);
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maximumItemCount<0){
throw new IllegalArgumentException("Requires index >= 0.");
}
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
this.i=Math.max(this.size,maximumItemCount+1);
if(this.autoSort){
return Collections.binarySearch(this.data,new XYDataItem(x,null));
}else {
for(int i=0;i<this.data.size();i++){
XYDataItem item=(XYDataItem)this.data.get(i);
if(item.getX().equals(x)){
return i;
}
}
return -1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.jfree.data.xy.XYDataItem,191
========
if(d1<0.0){
result=-1;
}else {
result=0;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(compare<0.0){
result=-1;
}else {
result=result;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(compare<0.0){
break;
result=-1;
}else {
result=0;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(compare<0.0){
result=-1;
}else {
break;
result=0;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(compare<0.0){
break;
result=-1;
}else {
break;
result=0;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.jfree.data.xy.XYSeries,589
org.jfree.data.xy.XYDataItem,179
========
if(compare>0.0){
result=result;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(compare>0.0){
if(compare>1){
result=HashUtilities.hashCode(result,getPaint(compare-1));
if(compare>2){
result=HashUtilities.hashCode(result,getPaint(compare/2));
}
}
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
if(compare>2){
result=HashUtilities.hashCode(result,getPaint(compare/2));
}
result=-1;
}else {
result=0;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
if(compare>2){
result=HashUtilities.hashCode(result,getPaint(compare/2));
}
result=0;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(compare>0.0){
result=1;
}else {
result=HashUtilities.hashCode(result,getPaint(0));
if(compare<0.0){
result=-1;
}else {
result=0;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(compare>2){
ComparableObjectItem getDataItem(compare/2)=getDataItem(count/2);
result=29*result+item.hashCode();
}
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(compare>2){
XYDataItem getDataItem(compare/2)=getDataItem(count/2);
result=29*result+item.hashCode();
}
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(compare>2){
ComparableObjectItem getDataItem(compare/2)=getDataItem(count/2);
result=29*result+item.hashCode();
}
if(compare>0.0){
result=result;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(compare>2){
XYDataItem getDataItem(compare/2)=getDataItem(count/2);
result=29*result+item.hashCode();
}
if(compare>0.0){
result=result;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
result=getPeriod().compareTo(dataItem.getPeriod());
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
result=this.compare-dataItem.getYear();
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
result=this.compare-dataItem.getYear().getYear();
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
difference=this.serialVersionUID-t1.time;
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
difference=getFirstMillisecond()-(Millisecond)o1.getFirstMillisecond();
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
if(serialVersionUID>0){
result=1;
}else {
if(serialVersionUID<0){
result=-1;
}else {
result=0;
}
}
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
  - org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(o1 instanceof XYDataItem){
difference=getFirstMillisecond()-(Millisecond)o1.getFirstMillisecond();
if(serialVersionUID>0){
result=1;
}else {
if(serialVersionUID<0){
result=-1;
}else {
result=0;
}
}

XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
result=193;
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
  - org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(getXDateFormat()!=null){
result[1]=getXDateFormat().format(new Date(x.longValue()));
}else {
result[1]=getXFormat().format(x);
}
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.jfree.data.xy.XYDataItem,180
========
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(y==null){
return ;
}
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if((x.doubleValue()+compare)>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
this.minimumRangeValue=compare;
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
this.maximumRangeValue=compare;
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
if(compare>2){
result=HashUtilities.hashCode(result,getPaint(compare/2));
}
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
result=HashUtilities.hashCode(result,getPaint(compare-1));
if(compare<0.0){
result=-1;
}else {
result=0;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
XYDataItem dataItem=(XYDataItem)o1;
if(y==null){
return ;
}
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=compare;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
break;
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(result==result){
x2++;
}
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(listeners.length==0){
return ;
}
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getLabelGenerator()==null){
continue;
}
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
prefetchSectionPaints();
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(x==null){
throw new IllegalArgumentException("Null \'x\' argument.");
}
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
  - org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
fireDatasetChanged();
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(isInverted()){
serialVersionUID=serialVersionUID-ww;
}else {
ww=ww-serialVersionUID;
}
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
break;
result=compare;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.jfree.data.xy.XYDataItem,181
org.jfree.data.xy.XYDataItem,183
org.jfree.data.xy.XYDataItem,187
org.jfree.data.xy.XYDataItem,194
Find no block!
org.jfree.data.xy.XYDataItem,203
========
if(o1 instanceof XYDataItem){
result=this.compare-dataItem.getYear();
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
result=getPeriod().compareTo(dataItem.getPeriod());
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
result=this.x.hashCode();
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
result=29*result+(this.y!=null?this.y.hashCode():0);
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
result=this.x.hashCode();
result=29*result+(this.y!=null?this.y.hashCode():0);
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
if(o1!=null){
result=object.hashCode();
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
result=this.compare-dataItem.getYear().getYear();
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
if(result==0){
result=this.compare-dataItem.getMonth();
}
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
result=this.compare-dataItem.getYearValue();
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
if(this.equals(TickType.MAJOR)){
result=TickType.MAJOR;
}else if(this.equals(TickType.MINOR)){
result=TickType.MINOR;
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
if(this.equals(PlotOrientation.HORIZONTAL)){
result=PlotOrientation.HORIZONTAL;
}else if(this.equals(PlotOrientation.VERTICAL)){
result=PlotOrientation.VERTICAL;
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
result=29*result+(this.o1!=null?this.obj.hashCode():0);
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
result=29*result+(this.x!=null?this.value.hashCode():0);
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
difference=this.serialVersionUID-t1.time;
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
result=37*result+compare;
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
if(this.equals(AreaRendererEndType.LEVEL)){
result=AreaRendererEndType.LEVEL;
}else if(this.equals(AreaRendererEndType.TAPER)){
result=AreaRendererEndType.TAPER;
}else if(this.equals(AreaRendererEndType.TRUNCATE)){
result=AreaRendererEndType.TRUNCATE;
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
if(this.equals(PieLabelLinkStyle.STANDARD)){
result=PieLabelLinkStyle.STANDARD;
}else if(this.equals(PieLabelLinkStyle.QUAD_CURVE)){
result=PieLabelLinkStyle.QUAD_CURVE;
}else if(this.equals(PieLabelLinkStyle.CUBIC_CURVE)){
result=PieLabelLinkStyle.CUBIC_CURVE;
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
result=37*result+this.compare;
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
result=37*result+getSecond().hashCode();
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
return result+1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
result=37*result+(int)this.compare;
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
result=37*result+(int)this.serialVersionUID;
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
if(o1==null){
return null;
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
try{
Method dataItem.getMethod("clone",(Class[])null)=dataItem.getMethod("clone",(Class[])null);
if(Modifier.isPublic(m.getModifiers())){
try{
result=m.invoke(o1,(Object[])null);
}catch (Exception e) {
  e.printStackTrace();
}

}
}catch (NoSuchMethodException e) {
  result=object;
}

return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
if(dataItem!=null){
result=new Double(xnum.doubleValue()-this.compare/2.0);
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
if(dataItem!=null){
result=new Double(xnum.doubleValue()+this.compare/2.0);
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
result=37*result+(int)(this.serialVersionUID^(this.segmentSize>>>32));
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
result=37*result+(int)(this.compare^(this.startTime>>>32));
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
return x;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
return x0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
return y;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
return y0;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
result=37*result+(int)(compare^(temp>>>32));
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
compare=Double.doubleToLongBits(this.y);
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
result=(int)(compare^(temp>>>32));
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
result=29*result+(int)(compare^(temp>>>32));
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
difference=getFirstMillisecond()-(Millisecond)o1.getFirstMillisecond();
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
if(serialVersionUID>0){
result=1;
}else {
if(serialVersionUID<0){
result=-1;
}else {
result=0;
}
}
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(o1 instanceof XYDataItem){
difference=getFirstMillisecond()-(Millisecond)o1.getFirstMillisecond();
if(serialVersionUID>0){
result=1;
}else {
if(serialVersionUID<0){
result=-1;
}else {
result=0;
}
}

XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
result=193;
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
return data;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
return width;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
return height;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
return x1;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
if(result==result){
x2++;
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
if(result==compare){
y2++;
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
result=29*result+(int)(serialVersionUID^(temp>>>32));
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
result=37*result+(int)(serialVersionUID^(l>>>32));
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
result=37*result+(int)(this.compare^(this.baseMillis>>>32));
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
serialVersionUID=Double.doubleToLongBits(this.x);
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
result=(int)(serialVersionUID^(temp>>>32));
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
serialVersionUID=Double.doubleToLongBits(this.y);
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
result=(int)(serialVersionUID^(temp>>>32));
result=29*result+(int)(serialVersionUID^(temp>>>32));
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
result=29*result+this.compare;
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
result=37*result+(int)(serialVersionUID^(temp>>>32));
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
result=37*result+(int)(compare^(temp>>>32));
compare=Double.doubleToLongBits(this.y);
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
if(result==null){
result=new Rectangle2D.Double();
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
return compare;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
return retval;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getXDateFormat()!=null){
result[1]=getXDateFormat().format(new Date(x.longValue()));
}else {
result[1]=getXFormat().format(x);
}
if(o1 instanceof XYDataItem){
XYDataItem dataItem=(XYDataItem)o1;
double compare=this.x.doubleValue()-dataItem.getX().doubleValue();
if(compare>0.0){
result=1;
}else {
if(compare<0.0){
result=-1;
}else {
result=0;
}
}
}else {
result=1;
}
return result;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.jfree.data.xy.XYDataItem,96
org.jfree.data.xy.XYSeries,186
========
return Collections.unmodifiableList(this.data);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getBins(maximumItemCount).size();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return ObjectUtilities.equal(this.data,that.data);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return getUniqueValues().size();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return (this.data!=null?this.data.hashCode():0);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Running ant (run.dev.tests)................................................ 
Running ant (compile.tests)................................................ OK
========
return this.data!=null?this.data.size():null;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
return (List)this.data.get(maximumItemCount).size();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(maximumItemCount<0||series>=getSeriesCount()){
throw new IllegalArgumentException("Invalid series index: "+series);
}
return this.data.size();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((maximumItemCount<0)||(series>=getSeriesCount())){
throw new IllegalArgumentException("Series index out of bounds");
}
return this.data.size();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((maximumItemCount<0)||(series>=getSeriesCount())){
throw new IllegalArgumentException("Index \'series\' out of range.");
}
return this.data.size();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((maximumItemCount<0)||(series>=getSeriesCount())){
throw new IllegalArgumentException("Index outside valid range.");
}
return this.data.size();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((maximumItemCount<0)||(series>=getSeriesCount())){
throw new IllegalArgumentException("The \'series\' argument is out of bounds ("+series);
}
return this.data.size();

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.jfree.data.xy.XYDataItem,72
Find no block!
org.jfree.data.xy.XYDataItem,73
org.jfree.data.xy.XYDataItem,76
========
if(x!=null){
throw new IllegalArgumentException("Null \'x\' argument.");
}
this.x=x;
this.y=y;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
  - org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(x==null){
if(this.x.doubleValue()>item.x.doubleValue()){
return 1;
}else if(this.x.equals(item.x)){
return 0;
}else {
return -1;
}
throw new IllegalArgumentException("Null \'x\' argument.");
}
this.x=x;
this.y=y;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(high==null){
throw new IllegalArgumentException("Null \'x\' argument.");
}
this.x=x;
this.y=y;

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.jfree.data.xy.XYDataItem,77
org.jfree.data.xy.XYDataItem,78
Find no block!
org.jfree.data.general.Series,313
========
if(this.notify){
this.verticalTickLabels=notify;
notifyListeners(new SeriesChangeEvent(this));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.notify){
this.inverted=notify;
notifyListeners(new SeriesChangeEvent(this));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.notify){
this.gridBandsVisible=notify;
notifyListeners(new SeriesChangeEvent(this));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.notify){
this.autoRangeIncludesZero=notify;
notifyListeners(new SeriesChangeEvent(this));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.notify){
notifyListeners(new AxisChangeEvent(this));
notifyListeners(new SeriesChangeEvent(this));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.notify){
this.autoRangeIncludesZero=notify;
notifyListeners(new AxisChangeEvent(this));

notifyListeners(new SeriesChangeEvent(this));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.notify){
this.autoRangeStickyZero=notify;
notifyListeners(new SeriesChangeEvent(this));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.notify){
this.autoRangeStickyZero=notify;
notifyListeners(new AxisChangeEvent(this));

notifyListeners(new SeriesChangeEvent(this));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.notify){
this.text=description;
notifyListeners(new SeriesChangeEvent(this));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
notifyListeners(new DialLayerChangeEvent(this));
if(this.notify){
notifyListeners(new SeriesChangeEvent(this));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
notifyListeners(new AxisChangeEvent(this));
if(this.notify){
notifyListeners(new SeriesChangeEvent(this));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(this.notify){
this.notify=notify;
notifyListeners(new SeriesChangeEvent(this));
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
  - org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.jfree.data.general.Series,314
org.jfree.data.general.Series,316
Find no block!
org.jfree.data.general.Series,326
========
if(listenerList[i]!=SeriesChangeListener.class){
((SeriesChangeListener)listenerList[i+1]).seriesChanged(event);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
  - org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(clone.datasets[i]!=null){
((SeriesChangeListener)listenerList[i+1]).seriesChanged(event);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(clone.datasets[i]==SeriesChangeListener.class){
((SeriesChangeListener)listenerList[i+1]).seriesChanged(event);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(listenerList[i]==null){
((SeriesChangeListener)listenerList[i+1]).seriesChanged(event);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
  - org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(listenerList[i]!=null){
((SeriesChangeListener)listenerList[i+1]).seriesChanged(event);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
  - org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(listenerList[i]==SeriesChangeListener.class){
((SeriesChangeListener)listenerList[i+1]).setPaint(event);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
description+=description.substring(0,i)+description;
if(listenerList[i]==SeriesChangeListener.class){
((SeriesChangeListener)listenerList[i+1]).seriesChanged(event);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
  - org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=listenerList.length-2;i>=0;i-=2){
if(listenerList[i]==null){
((SeriesChangeListener)listenerList[i+1]).seriesChanged(event);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
  - org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=listeners.length-2;i>=0;i-=2){
if(listenerList[i]==SeriesChangeListener.class){
((SeriesChangeListener)listenerList[i+1]).seriesChanged(event);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=ls.length-2;i>=0;i-=2){
if(listenerList[i]==SeriesChangeListener.class){
((SeriesChangeListener)listenerList[i+1]).seriesChanged(event);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
invalidateRangeInfo();
for(int i=listenerList.length-2;i>=0;i-=2){
if(listenerList[i]==SeriesChangeListener.class){
((SeriesChangeListener)listenerList[i+1]).seriesChanged(event);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=listenerList.length-2;i>=0;i-=2){
if(listenerList[i]!=SeriesChangeListener.class){
((SeriesChangeListener)listenerList[i+1]).seriesChanged(event);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
  - org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=listenerList.length-2;i>=0;i-=2){
if(clone.datasets[i]!=null){
((SeriesChangeListener)listenerList[i+1]).seriesChanged(event);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=listenerList.length-2;i>=0;i-=2){
if(clone.datasets[i]==SeriesChangeListener.class){
((SeriesChangeListener)listenerList[i+1]).seriesChanged(event);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=listenerList.length-2;i>=0;i-=2){
if(listenerList[i]!=null){
((SeriesChangeListener)listenerList[i+1]).seriesChanged(event);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
  - org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
for(int i=listenerList.length-2;i>=data.length;i-=2){
if(listenerList[i]==SeriesChangeListener.class){
((SeriesChangeListener)listenerList[i+1]).seriesChanged(event);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=listenerList.length-2;i>=length;i-=2){
if(listenerList[i]==SeriesChangeListener.class){
((SeriesChangeListener)listenerList[i+1]).seriesChanged(event);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
description=s.trim();
for(int i=listenerList.length-2;i>=0;i-=2){
if(listenerList[i]==SeriesChangeListener.class){
((SeriesChangeListener)listenerList[i+1]).seriesChanged(event);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
for(int i=listenerList.length-1;i>=0;i-=2){
if(listenerList[i]==SeriesChangeListener.class){
((SeriesChangeListener)listenerList[i+1]).seriesChanged(event);
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COUNT THESE===> Subject [_name=chart, _id=5, _ssrc=/source, _tsrc=/tests, _sbin=/build, _tbin=/build-tests, _dependency=null] org.jfree.data.xy.junit.XYSeriesTests testBug1955483
TESTING : org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_100_4/chart/chart_5_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
  - org.jfree.data.xy.junit.XYSeriesTests::testBug1955483
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Timeout!
