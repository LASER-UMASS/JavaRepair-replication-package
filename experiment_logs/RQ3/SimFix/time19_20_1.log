java version "1.7.0_231"
OpenJDK Runtime Environment (rhel-2.6.19.1.el7_6-x86_64 u231-b01)
OpenJDK 64-Bit Server VM (build 24.231-b01, mixed mode)
Check out 82c5e4f9 to /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j/ OK
Init local repository...................................................... OK
Tag post-fix revision...................................................... OK
Initialize fixed program version........................................... OK
Apply patch................................................................ OK
Initialize buggy program version........................................... OK
Diff 82c5e4f9:a92450e8..................................................... OK
Apply patch................................................................ OK
Tag pre-fix revision....................................................... OK
Check out program version: Time-19b........................................ OK
Running ant (compile)...................................................... OK
Running ant (compile.tests)................................................ OK
Running ant (compile.tests)................................................ OK
Running ant (run.dev.tests)................................................ OK
Failing tests: 1
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
/home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1
PURIFY IS FALSE
=================================================
Project : time_19	start : 19/10/15 16:36

readFailedTest: path is /mnt/nfs/work1/brun/mmotwani/SimFix/d4j-info/failed_tests/time/19.txt#ATTEMPTS: 1

# FAILING TESTS: 1
TIMEOUT : 18000000
===========
locations= [<org.joda.time.DateTime,331>, <org.joda.time.DateTime,333>, <org.joda.time.chrono.BasicGJChronology,188>, <org.joda.time.chrono.BasicGJChronology,190>, <org.joda.time.tz.CachedDateTimeZone,210>, <org.joda.time.DateTimeZone,882>, <org.joda.time.DateTimeZone,884>, <org.joda.time.DateTimeZone,885>, <org.joda.time.DateTimeZone,887>, <org.joda.time.DateTimeZone,900>, <org.joda.time.DateTimeZone,910>, <org.joda.time.tz.CachedDateTimeZone,170>, <org.joda.time.tz.CachedDateTimeZone,171>, <org.joda.time.tz.CachedDateTimeZone,172>, <org.joda.time.DateTimeFieldType,492>, <org.joda.time.DateTimeFieldType,496>, <org.joda.time.DateTimeFieldType,498>, <org.joda.time.base.AbstractInstant,424>, <org.joda.time.base.BaseDateTime,223>, <org.joda.time.base.BaseDateTime,225>, <org.joda.time.chrono.ZonedChronology,119>, <org.joda.time.chrono.ZonedChronology,139>, <org.joda.time.chrono.ZonedChronology,140>, <org.joda.time.chrono.ZonedChronology,141>, <org.joda.time.chrono.ZonedChronology,142>, <org.joda.time.chrono.ZonedChronology,147>, <org.joda.time.format.DateTimeFormatterBuilder,448>, <org.joda.time.format.DateTimeFormatterBuilder,451>, <org.joda.time.format.DateTimeFormatterBuilder,454>, <org.joda.time.format.DateTimeFormatterBuilder,457>, <org.joda.time.format.DateTimeFormatterBuilder,460>, <org.joda.time.format.DateTimeFormatterBuilder,737>, <org.joda.time.format.DateTimeFormatterBuilder,779>, <org.joda.time.format.DateTimeFormatterBuilder,791>, <org.joda.time.format.FormatUtils,80>, <org.joda.time.format.FormatUtils,82>, <org.joda.time.format.FormatUtils,83>, <org.joda.time.format.FormatUtils,87>, <org.joda.time.format.FormatUtils,90>, <org.joda.time.format.ISODateTimeFormat,866>, <org.joda.time.format.ISODateTimeFormat,916>, <org.joda.time.format.ISODateTimeFormat,917>, <org.joda.time.format.ISODateTimeFormat,922>, <org.joda.time.format.ISODateTimeFormat,953>, <org.joda.time.format.ISODateTimeFormat,954>, <org.joda.time.format.ISODateTimeFormat,959>, <org.joda.time.format.ISODateTimeFormat,1358>, <org.joda.time.format.ISODateTimeFormat,1359>, <org.joda.time.format.ISODateTimeFormat,1365>, <org.joda.time.format.ISODateTimeFormat,1585>, <org.joda.time.format.ISODateTimeFormat,1586>, <org.joda.time.format.ISODateTimeFormat,1590>, <org.joda.time.format.ISODateTimeFormat,1594>, <org.joda.time.format.ISODateTimeFormat,1595>, <org.joda.time.format.ISODateTimeFormat,1600>, <org.joda.time.format.ISODateTimeFormat,1604>, <org.joda.time.format.ISODateTimeFormat,1605>, <org.joda.time.format.ISODateTimeFormat,1610>, <org.joda.time.format.ISODateTimeFormat,1653>, <org.joda.time.format.ISODateTimeFormat,1654>, <org.joda.time.format.ISODateTimeFormat,1658>, <org.joda.time.format.DateTimeFormatterBuilder,1924>, <org.joda.time.format.DateTimeFormatterBuilder,1925>, <org.joda.time.format.DateTimeFormatterBuilder,1926>, <org.joda.time.format.DateTimeFormatterBuilder,1933>, <org.joda.time.format.DateTimeFormatterBuilder,2116>, <org.joda.time.format.DateTimeFormatterBuilder,2117>, <org.joda.time.DateTimeZone,212>, <org.joda.time.DateTimeZone,1227>, <org.joda.time.tz.DateTimeZoneBuilder,1528>, <org.joda.time.tz.DateTimeZoneBuilder,1529>, <org.joda.time.tz.DateTimeZoneBuilder,1530>, <org.joda.time.tz.DateTimeZoneBuilder,1533>, <org.joda.time.tz.DateTimeZoneBuilder,1534>, <org.joda.time.tz.DateTimeZoneBuilder,1540>, <org.joda.time.tz.DateTimeZoneBuilder,1543>, <org.joda.time.tz.DateTimeZoneBuilder,1570>, <org.joda.time.tz.DateTimeZoneBuilder,1571>, <org.joda.time.tz.DateTimeZoneBuilder,1572>, <org.joda.time.tz.DateTimeZoneBuilder,1573>, <org.joda.time.tz.DateTimeZoneBuilder,1576>, <org.joda.time.tz.DateTimeZoneBuilder,1579>, <org.joda.time.tz.DateTimeZoneBuilder,1580>, <org.joda.time.tz.DateTimeZoneBuilder,1583>, <org.joda.time.tz.DateTimeZoneBuilder,1187>, <org.joda.time.tz.DateTimeZoneBuilder,1199>, <org.joda.time.tz.DateTimeZoneBuilder,1200>, <org.joda.time.tz.DateTimeZoneBuilder,1201>, <org.joda.time.tz.DateTimeZoneBuilder,1206>, <org.joda.time.tz.DateTimeZoneBuilder,1208>, <org.joda.time.tz.DateTimeZoneBuilder,1218>, <org.joda.time.tz.DateTimeZoneBuilder,1221>, <org.joda.time.tz.DateTimeZoneBuilder,1223>, <org.joda.time.tz.DateTimeZoneBuilder,1233>, <org.joda.time.tz.DateTimeZoneBuilder,1235>, <org.joda.time.tz.DateTimeZoneBuilder,1304>, <org.joda.time.tz.DateTimeZoneBuilder,1305>, <org.joda.time.tz.DateTimeZoneBuilder,1306>, <org.joda.time.tz.DateTimeZoneBuilder,1311>, <org.joda.time.tz.DateTimeZoneBuilder,1319>, <org.joda.time.tz.DateTimeZoneBuilder,1322>, <org.joda.time.tz.DateTimeZoneBuilder,1330>, <org.joda.time.tz.DateTimeZoneBuilder,1332>, <org.joda.time.tz.DateTimeZoneBuilder,761>, <org.joda.time.tz.DateTimeZoneBuilder,776>, <org.joda.time.tz.DateTimeZoneBuilder,549>, <org.joda.time.tz.DateTimeZoneBuilder,551>, <org.joda.time.tz.DateTimeZoneBuilder,554>, <org.joda.time.tz.DateTimeZoneBuilder,558>, <org.joda.time.tz.DateTimeZoneBuilder,560>, <org.joda.time.tz.DateTimeZoneBuilder,561>, <org.joda.time.tz.DateTimeZoneBuilder,563>, <org.joda.time.tz.DateTimeZoneBuilder,564>, <org.joda.time.tz.DateTimeZoneBuilder,565>, <org.joda.time.tz.DateTimeZoneBuilder,567>, <org.joda.time.tz.DateTimeZoneBuilder,573>, <org.joda.time.tz.DateTimeZoneBuilder,574>, <org.joda.time.tz.DateTimeZoneBuilder,575>, <org.joda.time.tz.DateTimeZoneBuilder,576>, <org.joda.time.tz.DateTimeZoneBuilder,577>, <org.joda.time.tz.DateTimeZoneBuilder,578>, <org.joda.time.tz.DateTimeZoneBuilder,583>, <org.joda.time.tz.DateTimeZoneBuilder,672>, <org.joda.time.tz.DateTimeZoneBuilder,682>, <org.joda.time.tz.DateTimeZoneBuilder,683>, <org.joda.time.tz.DateTimeZoneBuilder,706>, <org.joda.time.tz.DateTimeZoneBuilder,709>, <org.joda.time.tz.DateTimeZoneBuilder,710>, <org.joda.time.tz.DateTimeZoneBuilder,711>, <org.joda.time.tz.DateTimeZoneBuilder,713>, <org.joda.time.tz.DateTimeZoneBuilder,717>, <org.joda.time.tz.DateTimeZoneBuilder,718>, <org.joda.time.tz.DateTimeZoneBuilder,719>, <org.joda.time.tz.DateTimeZoneBuilder,720>, <org.joda.time.tz.DateTimeZoneBuilder,725>, <org.joda.time.tz.DateTimeZoneBuilder,726>, <org.joda.time.tz.DateTimeZoneBuilder,729>, <org.joda.time.tz.DateTimeZoneBuilder,731>, <org.joda.time.tz.CachedDateTimeZone,111>, <org.joda.time.tz.CachedDateTimeZone,131>, <org.joda.time.tz.CachedDateTimeZone,148>, <org.joda.time.tz.CachedDateTimeZone,149>, <org.joda.time.tz.CachedDateTimeZone,150>, <org.joda.time.tz.CachedDateTimeZone,151>, <org.joda.time.tz.CachedDateTimeZone,152>, <org.joda.time.tz.CachedDateTimeZone,153>, <org.joda.time.tz.CachedDateTimeZone,154>, <org.joda.time.tz.CachedDateTimeZone,156>, <org.joda.time.tz.CachedDateTimeZone,160>, <org.joda.time.tz.CachedDateTimeZone,161>, <org.joda.time.tz.CachedDateTimeZone,163>, <org.joda.time.tz.CachedDateTimeZone,164>, <org.joda.time.tz.CachedDateTimeZone,166>, <org.joda.time.tz.CachedDateTimeZone,167>, <org.joda.time.tz.CachedDateTimeZone,168>, <org.joda.time.tz.CachedDateTimeZone,174>, <org.joda.time.chrono.AssembledChronology,315>, <org.joda.time.chrono.BasicChronology,435>, <org.joda.time.chrono.BasicChronology,458>, <org.joda.time.chrono.BasicChronology,459>, <org.joda.time.chrono.BasicChronology,485>, <org.joda.time.chrono.BasicChronology,486>, <org.joda.time.chrono.BasicChronology,534>, <org.joda.time.chrono.BasicChronology,535>, <org.joda.time.chrono.BasicChronology,544>, <org.joda.time.chrono.BasicChronology,551>, <org.joda.time.chrono.BasicChronology,552>, <org.joda.time.field.PreciseDurationField,104>, <org.joda.time.field.PreciseDurationField,105>, <org.joda.time.field.PreciseDurationDateTimeField,78>, <org.joda.time.field.PreciseDurationDateTimeField,80>, <org.joda.time.field.PreciseDurationDateTimeField,126>, <org.joda.time.field.PreciseDurationDateTimeField,127>, <org.joda.time.field.PreciseDateTimeField,111>, <org.joda.time.field.PreciseDateTimeField,112>, <org.joda.time.field.PreciseDateTimeField,131>, <org.joda.time.DateTimeFieldType,480>, <org.joda.time.DateTimeFieldType,482>, <org.joda.time.DateTimeFieldType,516>, <org.joda.time.DateTimeFieldType,520>, <org.joda.time.DateTimeFieldType,522>, <org.joda.time.DateTimeFieldType,524>, <org.joda.time.chrono.BasicYearDateTimeField,58>, <org.joda.time.chrono.BasicYearDateTimeField,61>, <org.joda.time.chrono.BasicYearDateTimeField,62>, <org.joda.time.chrono.BasicYearDateTimeField,63>, <org.joda.time.chrono.BasicYearDateTimeField,82>, <org.joda.time.chrono.BasicYearDateTimeField,84>, <org.joda.time.field.ImpreciseDateTimeField,160>, <org.joda.time.field.ScaledDurationField,109>, <org.joda.time.chrono.GJEraDateTimeField,127>, <org.joda.time.chrono.GJEraDateTimeField,131>, <org.joda.time.chrono.GJDayOfWeekDateTimeField,56>, <org.joda.time.chrono.BasicDayOfMonthDateTimeField,55>, <org.joda.time.chrono.BasicDayOfMonthDateTimeField,96>, <org.joda.time.chrono.BasicMonthOfYearDateTimeField,72>, <org.joda.time.chrono.BasicMonthOfYearDateTimeField,92>, <org.joda.time.chrono.BasicMonthOfYearDateTimeField,98>, <org.joda.time.chrono.BasicMonthOfYearDateTimeField,103>, <org.joda.time.chrono.BasicMonthOfYearDateTimeField,104>]
======================org.joda.time.DateTime,331
========
serialVersionUID=serialVersionUID;
super(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,0,0,zone);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
zone=zone;
super(year,monthOfYear,dayOfMonth,hourOfDay,minuteOfHour,0,0,zone);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.DateTime,333
Find no block!
org.joda.time.chrono.BasicGJChronology,188
========
if(isSupported(year)){
dayOfYear++;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(getFieldType(year)){
dayOfYear++;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(get(year)){
dayOfYear++;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,year,0,getMaximumValue());
if(isLeapYear(year)){
dayOfYear++;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.chrono.BasicGJChronology,190
org.joda.time.tz.CachedDateTimeZone,210
========
if(iOffset==getOffset(iPeriodStart)){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocalFromOriginal==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iOffset!=Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iOffset==iZone){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iOffset==null){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iStandardOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offset!=Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return instantUTC;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==null){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iStandardOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iStandardOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iStandardOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iStandardOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||instant<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||instantUTC<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(serialVersionUID==iPeriodStart||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
iPeriodStart=serialVersionUID;
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iStandardOffset==iOffset&&iNameKey.equals(iZone.getNameKey(iPeriodStart))){
System.out.println("*d* Error in "+iZone.getID());
return false;
}
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iStandardOffset==0){
throw new IllegalArgumentException("The offset cannot be zero");
}
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iOffset=iStandardOffset;
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iStandardOffset==0){
throw new IllegalArgumentException("The offset cannot be zero");
}
iOffset=iStandardOffset;
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||iPeriodStart<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null&&millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
FieldUtils.verifyValueBounds(this,iStandardOffset,iOffset,getMaximumValue());
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone.previousTransition(millis)==millis||iZone.previousTransition(millis)<millis){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone.previousTransition(millis)==millis||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||iZone.previousTransition(millis)<millis){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||iZone.previousTransition(millis)<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||prev<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
millis=iZone.previousTransition(millis);
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(serialVersionUID-1!=millis){
System.out.println("*r* Error in "+iZone.getID());
return false;
}
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZoneRef.nextTransition(iPeriodStart)==iPeriodStart||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return offsetPrev;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(iPeriodStart);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||instant<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||instantUTC<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==null){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getNameKey(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iStandardOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iStandardOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iStandardOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iStandardOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getStandardOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iStandardOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getStandardOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iStandardOffset;
}
return iNextInfo.getStandardOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iStandardOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iStandardOffset;
}
return iNextInfo.getStandardOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(serialVersionUID==millis||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
millis=serialVersionUID;
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iStandardOffset==iOffset&&iNameKey.equals(iZone.getNameKey(millis))){
System.out.println("*d* Error in "+iZone.getID());
return false;
}
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNameKey!=null){
return name;
}
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iStandardOffset==0){
throw new IllegalArgumentException("The offset cannot be zero");
}
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
iOffset=iStandardOffset;
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iStandardOffset==0){
throw new IllegalArgumentException("The offset cannot be zero");
}
iOffset=iStandardOffset;
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||iPeriodStart<iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||iPeriodStart<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(iNextInfo==null||millis<iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
FieldUtils.verifyValueBounds(this,iStandardOffset,iOffset,getMaximumValue());
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null&&millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone.previousTransition(millis)==millis||iZone.previousTransition(millis)<iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZone.previousTransition(millis)==millis||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||iZone.previousTransition(millis)<iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||iZone.previousTransition(millis)<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||prev<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iZoneRef.nextTransition(iPeriodStart)==iPeriodStart||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return Minutes.minutes(FieldUtils.safeToInt(millis/DateTimeConstants.MILLIS_PER_MINUTE));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.minutes(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
checkYearsAndMonths("Minutes");
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getSeconds())*DateTimeConstants.MILLIS_PER_SECOND;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(minutes,getMinutes());
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(minutes,((long)getHours())*((long)DateTimeConstants.MINUTES_PER_HOUR));
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(minutes,((long)getDays())*((long)DateTimeConstants.MINUTES_PER_DAY));
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(minutes,((long)getWeeks())*((long)DateTimeConstants.MINUTES_PER_WEEK));
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return Hours.hours(FieldUtils.safeToInt(millis/DateTimeConstants.MILLIS_PER_HOUR));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.hours(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
checkYearsAndMonths("Hours");
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getMinutes())*DateTimeConstants.MILLIS_PER_MINUTE;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(hours,getHours());
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(hours,((long)getDays())*((long)DateTimeConstants.HOURS_PER_DAY));
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(hours,((long)getWeeks())*((long)DateTimeConstants.HOURS_PER_WEEK));
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return Days.days(FieldUtils.safeToInt(millis/DateTimeConstants.MILLIS_PER_DAY));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.days(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
checkYearsAndMonths("Days");
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getHours())*DateTimeConstants.MILLIS_PER_HOUR;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(days,getDays());
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
iPeriodStart=FieldUtils.safeAdd(days,((long)getWeeks())*((long)DateTimeConstants.DAYS_PER_WEEK));
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getSeconds())*DateTimeConstants.MILLIS_PER_SECOND;
millis+=((long)getMinutes())*DateTimeConstants.MILLIS_PER_MINUTE;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return Weeks.weeks(FieldUtils.safeToInt(iPeriodStart));

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.weeks(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
checkYearsAndMonths("Weeks");
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getDays())*DateTimeConstants.MILLIS_PER_DAY;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getSeconds())*DateTimeConstants.MILLIS_PER_SECOND;
millis+=((long)getHours())*DateTimeConstants.MILLIS_PER_HOUR;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getMinutes())*DateTimeConstants.MILLIS_PER_MINUTE;
millis+=((long)getHours())*DateTimeConstants.MILLIS_PER_HOUR;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNextInfo==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
millis+=((long)getSeconds())*DateTimeConstants.MILLIS_PER_SECOND;
millis+=((long)getMinutes())*DateTimeConstants.MILLIS_PER_MINUTE;
millis+=((long)getHours())*DateTimeConstants.MILLIS_PER_HOUR;
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(iNameKey==null||millis<iNextInfo.iPeriodStart){
if(iOffset==Integer.MIN_VALUE){
iOffset=iZoneRef.getOffset(iPeriodStart);
}
return iOffset;
}
return iNextInfo.getOffset(millis);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
org.joda.time.DateTimeZone,882
========
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantLocal-offsetOriginal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocal==offsetAdjusted){
return instantAdjusted;
}
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantLocal-offsetLocal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantUTC-offsetLocal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantLocal-offset;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantAdjusted)<0&&(instantUTC^offsetLocal)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantLocal-offsetLocal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instant-offsetLocal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantAdjusted)<0&&(instant^offsetLocal)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantLocal-offsetLocal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantAdjusted=selectChronology(chrono);
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantLocal-offsetLocal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantLocal+offsetLocal)<0&&(instant^offsetLocal)>=0){
UTC=DateTimeZone.UTC;
offset=0;
adjustedInstant=instant;
}
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantLocal-offsetLocal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instant-offset;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantMillis-offsetLocal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
 final int offsetLocal=getOffset(instantAdjusted);
 final long instantAdjusted=instantLocal-offsetLocal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(serialVersionUID==instantAdjusted||next>serialVersionUID){
break;
}
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantLocal-offsetLocal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantAdjusted=serialVersionUID;
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantLocal-offsetLocal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantAdjusted)<0&&(instantLocal^offsetLocal)<0){
throw new ArithmeticException("Subtracting time zone offset caused overflow");
}
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantLocal-offsetLocal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantAdjusted=selectChronology(chrono);
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instant-offsetLocal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantLocal+offsetLocal)<0&&(instant^offsetLocal)>=0){
UTC=DateTimeZone.UTC;
offset=0;
adjustedInstant=instant;
}
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instant-offsetLocal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantAdjusted=selectChronology(chrono);
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantLocal-offset;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantLocal+offsetLocal)<0&&(instant^offsetLocal)>=0){
UTC=DateTimeZone.UTC;
offset=0;
adjustedInstant=instant;
}
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantLocal-offset;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantAdjusted=selectChronology(chrono);
if((instantLocal^instantLocal+offsetLocal)<0&&(instant^offsetLocal)>=0){
UTC=DateTimeZone.UTC;
offset=0;
adjustedInstant=instant;
}
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantLocal-offsetLocal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantAdjusted=selectChronology(chrono);
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instant-offset;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantLocal+offsetLocal)<0&&(instant^offsetLocal)>=0){
UTC=DateTimeZone.UTC;
offset=0;
adjustedInstant=instant;
}
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instant-offset;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantAdjusted=selectChronology(chrono);
if((instantLocal^instantLocal+offsetLocal)<0&&(instant^offsetLocal)>=0){
UTC=DateTimeZone.UTC;
offset=0;
adjustedInstant=instant;
}
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instant-offsetLocal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantAdjusted=selectChronology(chrono);
if((instantLocal^instantLocal+offsetLocal)<0&&(instant^offsetLocal)>=0){
UTC=DateTimeZone.UTC;
offset=0;
adjustedInstant=instant;
}
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantLocal-offset;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
instantAdjusted=selectChronology(chrono);
if((instantLocal^instantLocal+offsetLocal)<0&&(instant^offsetLocal)>=0){
UTC=DateTimeZone.UTC;
offset=0;
adjustedInstant=instant;
}
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instant-offset;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantAdjusted)<0&&(instant^offsetLocal)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instant-offsetLocal;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantAdjusted)<0&&(instant^offsetLocal)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instantLocal-offset;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((instantLocal^instantAdjusted)<0&&(instant^offsetLocal)>=0){
throw new ArithmeticException("Adding time zone offset caused overflow");
}
 final int offsetLocal=getOffset(instantLocal);
 final long instantAdjusted=instant-offset;
 final int offsetAdjusted=getOffset(instantAdjusted);

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
org.joda.time.DateTimeZone,884
org.joda.time.DateTimeZone,885
org.joda.time.DateTimeZone,887
========
if(nextLocal==nextAdjusted){
return offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instantLocal==(nextAdjusted-nextLocal)){
return offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nextLocal!=(nextAdjusted-nextLocal)){
return offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nextLocal==(nextAdjusted-nextLocal)){
return offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(instantAdjusted==(nextLocal-nextAdjusted)){
return offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nextLocal!=(nextLocal-nextAdjusted)){
return offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nextLocal==(nextLocal-nextAdjusted)){
return offsetLocal;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(nextLocal!=nextAdjusted){
return offsetPrev;
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if((offsetLocal-offsetAdjusted)<offsetAdjusted){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((offsetLocal-offsetAdjusted)<offsetLocal){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=previousTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetLocal;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if((offsetLocal-offsetAdjusted)<0){
long nextLocal=nextTransition(instantAdjusted);
long nextAdjusted=nextTransition(instantLocal-offsetAdjusted);
if(nextLocal!=nextAdjusted){
return offsetPrev;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(prev<millis){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(prev<iPeriodStart){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(prev<transitions.length){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(prev<length){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(prev<instant){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(prev<instantUTC){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetPrev<prev){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(prev<next){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(prev<end){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
prev=instantAdjusted;
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(offsetLocal==diff&&iID.equals(UTC.getNameKey(prev))){
System.out.println("*d* Error in "+UTC.getID());
return false;
}
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(prev<MIN_VALUE){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(prev<instantLocal){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
  - org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
Failing tests: 1
Running ant (run.dev.tests)................................................ OK
Running ant (compile.tests)................................................ OK
========
if(diff==(instantLocal-prev)){
nextAdjusted=Long.MAX_VALUE;
}
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offsetLocalFromOriginal>0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(offset>0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantUTC>0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
========
if(instantLocal>0){
long prev=previousTransition(instantAdjusted);
if(prev<instantAdjusted){
int offsetPrev=getOffset(prev);
int diff=offsetPrev-offsetLocal;
if(instantAdjusted-prev<=diff){
return offsetPrev;
}
}
}

========
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 120 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j compile
FAILED TEST:org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COUNT THESE===> Subject [_name=time, _id=19, _ssrc=/src/main/java, _tsrc=/src/test/java, _sbin=/build/classes, _tbin=/build/tests, _dependency=null] org.joda.time.TestDateTimeZoneCutover testDateTimeCreation_london
TESTING : org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 30 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test -t org.joda.time.TestDateTimeZoneCutover::testDateTimeCreation_london
Failing tests: 0
TESTING : time_19
COMMAND:cd /home/mmotwani/mywork1dir/Defects4Java7/defects4j/SIMFIX_RQ2_20_1/time/time_19_buggy && /usr/bin/timeout 600 /mnt/nfs/work1/brun/mmotwani/Defects4Java7/defects4j//framework/bin/defects4j test
Failing tests: 0
Successfully repair!
